

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Jan 13 20:35:15 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=2
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=2
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Generated 25/07/2024 GMT
    41                           ; 
    42                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000FE0                     bsr             equ	4064
    75   000FE9                     fsr0            equ	4073
    76   000FEA                     fsr0h           equ	4074
    77   000FE9                     fsr0l           equ	4073
    78   000FE1                     fsr1            equ	4065
    79   000FE2                     fsr1h           equ	4066
    80   000FE1                     fsr1l           equ	4065
    81   000FD9                     fsr2            equ	4057
    82   000FDA                     fsr2h           equ	4058
    83   000FD9                     fsr2l           equ	4057
    84   000FEF                     indf0           equ	4079
    85   000FE7                     indf1           equ	4071
    86   000FDF                     indf2           equ	4063
    87   000FF2                     intcon          equ	4082
    88   000000                     nvmcon          equ	0
    89   000FF9                     pcl             equ	4089
    90   000FFA                     pclath          equ	4090
    91   000FFB                     pclatu          equ	4091
    92   000FEB                     plusw0          equ	4075
    93   000FE3                     plusw1          equ	4067
    94   000FDB                     plusw2          equ	4059
    95   000FED                     postdec0        equ	4077
    96   000FE5                     postdec1        equ	4069
    97   000FDD                     postdec2        equ	4061
    98   000FEE                     postinc0        equ	4078
    99   000FE6                     postinc1        equ	4070
   100   000FDE                     postinc2        equ	4062
   101   000FEC                     preinc0         equ	4076
   102   000FE4                     preinc1         equ	4068
   103   000FDC                     preinc2         equ	4060
   104   000FF3                     prod            equ	4083
   105   000FF4                     prodh           equ	4084
   106   000FF3                     prodl           equ	4083
   107   000FD8                     status          equ	4056
   108   000FF5                     tablat          equ	4085
   109   000FF6                     tblptr          equ	4086
   110   000FF7                     tblptrh         equ	4087
   111   000FF6                     tblptrl         equ	4086
   112   000FF8                     tblptru         equ	4088
   113   000FFD                     tosl            equ	4093
   114   000FE8                     wreg            equ	4072
   115   000F80                     PORTA           equ	3968	;# 
   116   000F81                     PORTB           equ	3969	;# 
   117   000F82                     PORTC           equ	3970	;# 
   118   000F83                     PORTD           equ	3971	;# 
   119   000F84                     PORTE           equ	3972	;# 
   120   000F89                     LATA            equ	3977	;# 
   121   000F8A                     LATB            equ	3978	;# 
   122   000F8B                     LATC            equ	3979	;# 
   123   000F8C                     LATD            equ	3980	;# 
   124   000F8D                     LATE            equ	3981	;# 
   125   000F92                     TRISA           equ	3986	;# 
   126   000F92                     DDRA            equ	3986	;# 
   127   000F93                     TRISB           equ	3987	;# 
   128   000F93                     DDRB            equ	3987	;# 
   129   000F94                     TRISC           equ	3988	;# 
   130   000F94                     DDRC            equ	3988	;# 
   131   000F95                     TRISD           equ	3989	;# 
   132   000F95                     DDRD            equ	3989	;# 
   133   000F96                     TRISE           equ	3990	;# 
   134   000F96                     DDRE            equ	3990	;# 
   135   000F9B                     OSCTUNE         equ	3995	;# 
   136   000F9D                     PIE1            equ	3997	;# 
   137   000F9E                     PIR1            equ	3998	;# 
   138   000F9F                     IPR1            equ	3999	;# 
   139   000FA0                     PIE2            equ	4000	;# 
   140   000FA1                     PIR2            equ	4001	;# 
   141   000FA2                     IPR2            equ	4002	;# 
   142   000FA6                     EECON1          equ	4006	;# 
   143   000FA7                     EECON2          equ	4007	;# 
   144   000FA8                     EEDATA          equ	4008	;# 
   145   000FA9                     EEADR           equ	4009	;# 
   146   000FAB                     RCSTA           equ	4011	;# 
   147   000FAB                     RCSTA1          equ	4011	;# 
   148   000FAC                     TXSTA           equ	4012	;# 
   149   000FAC                     TXSTA1          equ	4012	;# 
   150   000FAD                     TXREG           equ	4013	;# 
   151   000FAD                     TXREG1          equ	4013	;# 
   152   000FAE                     RCREG           equ	4014	;# 
   153   000FAE                     RCREG1          equ	4014	;# 
   154   000FAF                     SPBRG           equ	4015	;# 
   155   000FAF                     SPBRG1          equ	4015	;# 
   156   000FB0                     SPBRGH          equ	4016	;# 
   157   000FB1                     T3CON           equ	4017	;# 
   158   000FB2                     TMR3            equ	4018	;# 
   159   000FB2                     TMR3L           equ	4018	;# 
   160   000FB3                     TMR3H           equ	4019	;# 
   161   000FB4                     CMCON           equ	4020	;# 
   162   000FB5                     CVRCON          equ	4021	;# 
   163   000FB6                     ECCP1AS         equ	4022	;# 
   164   000FB6                     ECCPAS          equ	4022	;# 
   165   000FB7                     PWM1CON         equ	4023	;# 
   166   000FB7                     ECCP1DEL        equ	4023	;# 
   167   000FB8                     BAUDCON         equ	4024	;# 
   168   000FB8                     BAUDCTL         equ	4024	;# 
   169   000FBA                     CCP2CON         equ	4026	;# 
   170   000FBB                     CCPR2           equ	4027	;# 
   171   000FBB                     CCPR2L          equ	4027	;# 
   172   000FBC                     CCPR2H          equ	4028	;# 
   173   000FBD                     CCP1CON         equ	4029	;# 
   174   000FBE                     CCPR1           equ	4030	;# 
   175   000FBE                     CCPR1L          equ	4030	;# 
   176   000FBF                     CCPR1H          equ	4031	;# 
   177   000FC0                     ADCON2          equ	4032	;# 
   178   000FC1                     ADCON1          equ	4033	;# 
   179   000FC2                     ADCON0          equ	4034	;# 
   180   000FC3                     ADRES           equ	4035	;# 
   181   000FC3                     ADRESL          equ	4035	;# 
   182   000FC4                     ADRESH          equ	4036	;# 
   183   000FC5                     SSPCON2         equ	4037	;# 
   184   000FC6                     SSPCON1         equ	4038	;# 
   185   000FC7                     SSPSTAT         equ	4039	;# 
   186   000FC8                     SSPADD          equ	4040	;# 
   187   000FC9                     SSPBUF          equ	4041	;# 
   188   000FCA                     T2CON           equ	4042	;# 
   189   000FCB                     PR2             equ	4043	;# 
   190   000FCB                     MEMCON          equ	4043	;# 
   191   000FCC                     TMR2            equ	4044	;# 
   192   000FCD                     T1CON           equ	4045	;# 
   193   000FCE                     TMR1            equ	4046	;# 
   194   000FCE                     TMR1L           equ	4046	;# 
   195   000FCF                     TMR1H           equ	4047	;# 
   196   000FD0                     RCON            equ	4048	;# 
   197   000FD1                     WDTCON          equ	4049	;# 
   198   000FD2                     HLVDCON         equ	4050	;# 
   199   000FD2                     LVDCON          equ	4050	;# 
   200   000FD3                     OSCCON          equ	4051	;# 
   201   000FD5                     T0CON           equ	4053	;# 
   202   000FD6                     TMR0            equ	4054	;# 
   203   000FD6                     TMR0L           equ	4054	;# 
   204   000FD7                     TMR0H           equ	4055	;# 
   205   000FD8                     STATUS          equ	4056	;# 
   206   000FD9                     FSR2            equ	4057	;# 
   207   000FD9                     FSR2L           equ	4057	;# 
   208   000FDA                     FSR2H           equ	4058	;# 
   209   000FDB                     PLUSW2          equ	4059	;# 
   210   000FDC                     PREINC2         equ	4060	;# 
   211   000FDD                     POSTDEC2        equ	4061	;# 
   212   000FDE                     POSTINC2        equ	4062	;# 
   213   000FDF                     INDF2           equ	4063	;# 
   214   000FE0                     BSR             equ	4064	;# 
   215   000FE1                     FSR1            equ	4065	;# 
   216   000FE1                     FSR1L           equ	4065	;# 
   217   000FE2                     FSR1H           equ	4066	;# 
   218   000FE3                     PLUSW1          equ	4067	;# 
   219   000FE4                     PREINC1         equ	4068	;# 
   220   000FE5                     POSTDEC1        equ	4069	;# 
   221   000FE6                     POSTINC1        equ	4070	;# 
   222   000FE7                     INDF1           equ	4071	;# 
   223   000FE8                     WREG            equ	4072	;# 
   224   000FE9                     FSR0            equ	4073	;# 
   225   000FE9                     FSR0L           equ	4073	;# 
   226   000FEA                     FSR0H           equ	4074	;# 
   227   000FEB                     PLUSW0          equ	4075	;# 
   228   000FEC                     PREINC0         equ	4076	;# 
   229   000FED                     POSTDEC0        equ	4077	;# 
   230   000FEE                     POSTINC0        equ	4078	;# 
   231   000FEF                     INDF0           equ	4079	;# 
   232   000FF0                     INTCON3         equ	4080	;# 
   233   000FF1                     INTCON2         equ	4081	;# 
   234   000FF2                     INTCON          equ	4082	;# 
   235   000FF3                     PROD            equ	4083	;# 
   236   000FF3                     PRODL           equ	4083	;# 
   237   000FF4                     PRODH           equ	4084	;# 
   238   000FF5                     TABLAT          equ	4085	;# 
   239   000FF6                     TBLPTR          equ	4086	;# 
   240   000FF6                     TBLPTRL         equ	4086	;# 
   241   000FF7                     TBLPTRH         equ	4087	;# 
   242   000FF8                     TBLPTRU         equ	4088	;# 
   243   000FF9                     PCLAT           equ	4089	;# 
   244   000FF9                     PC              equ	4089	;# 
   245   000FF9                     PCL             equ	4089	;# 
   246   000FFA                     PCLATH          equ	4090	;# 
   247   000FFB                     PCLATU          equ	4091	;# 
   248   000FFC                     STKPTR          equ	4092	;# 
   249   000FFD                     TOS             equ	4093	;# 
   250   000FFD                     TOSL            equ	4093	;# 
   251   000FFE                     TOSH            equ	4094	;# 
   252   000FFF                     TOSU            equ	4095	;# 
   253   000F80                     PORTA           equ	3968	;# 
   254   000F81                     PORTB           equ	3969	;# 
   255   000F82                     PORTC           equ	3970	;# 
   256   000F83                     PORTD           equ	3971	;# 
   257   000F84                     PORTE           equ	3972	;# 
   258   000F89                     LATA            equ	3977	;# 
   259   000F8A                     LATB            equ	3978	;# 
   260   000F8B                     LATC            equ	3979	;# 
   261   000F8C                     LATD            equ	3980	;# 
   262   000F8D                     LATE            equ	3981	;# 
   263   000F92                     TRISA           equ	3986	;# 
   264   000F92                     DDRA            equ	3986	;# 
   265   000F93                     TRISB           equ	3987	;# 
   266   000F93                     DDRB            equ	3987	;# 
   267   000F94                     TRISC           equ	3988	;# 
   268   000F94                     DDRC            equ	3988	;# 
   269   000F95                     TRISD           equ	3989	;# 
   270   000F95                     DDRD            equ	3989	;# 
   271   000F96                     TRISE           equ	3990	;# 
   272   000F96                     DDRE            equ	3990	;# 
   273   000F9B                     OSCTUNE         equ	3995	;# 
   274   000F9D                     PIE1            equ	3997	;# 
   275   000F9E                     PIR1            equ	3998	;# 
   276   000F9F                     IPR1            equ	3999	;# 
   277   000FA0                     PIE2            equ	4000	;# 
   278   000FA1                     PIR2            equ	4001	;# 
   279   000FA2                     IPR2            equ	4002	;# 
   280   000FA6                     EECON1          equ	4006	;# 
   281   000FA7                     EECON2          equ	4007	;# 
   282   000FA8                     EEDATA          equ	4008	;# 
   283   000FA9                     EEADR           equ	4009	;# 
   284   000FAB                     RCSTA           equ	4011	;# 
   285   000FAB                     RCSTA1          equ	4011	;# 
   286   000FAC                     TXSTA           equ	4012	;# 
   287   000FAC                     TXSTA1          equ	4012	;# 
   288   000FAD                     TXREG           equ	4013	;# 
   289   000FAD                     TXREG1          equ	4013	;# 
   290   000FAE                     RCREG           equ	4014	;# 
   291   000FAE                     RCREG1          equ	4014	;# 
   292   000FAF                     SPBRG           equ	4015	;# 
   293   000FAF                     SPBRG1          equ	4015	;# 
   294   000FB0                     SPBRGH          equ	4016	;# 
   295   000FB1                     T3CON           equ	4017	;# 
   296   000FB2                     TMR3            equ	4018	;# 
   297   000FB2                     TMR3L           equ	4018	;# 
   298   000FB3                     TMR3H           equ	4019	;# 
   299   000FB4                     CMCON           equ	4020	;# 
   300   000FB5                     CVRCON          equ	4021	;# 
   301   000FB6                     ECCP1AS         equ	4022	;# 
   302   000FB6                     ECCPAS          equ	4022	;# 
   303   000FB7                     PWM1CON         equ	4023	;# 
   304   000FB7                     ECCP1DEL        equ	4023	;# 
   305   000FB8                     BAUDCON         equ	4024	;# 
   306   000FB8                     BAUDCTL         equ	4024	;# 
   307   000FBA                     CCP2CON         equ	4026	;# 
   308   000FBB                     CCPR2           equ	4027	;# 
   309   000FBB                     CCPR2L          equ	4027	;# 
   310   000FBC                     CCPR2H          equ	4028	;# 
   311   000FBD                     CCP1CON         equ	4029	;# 
   312   000FBE                     CCPR1           equ	4030	;# 
   313   000FBE                     CCPR1L          equ	4030	;# 
   314   000FBF                     CCPR1H          equ	4031	;# 
   315   000FC0                     ADCON2          equ	4032	;# 
   316   000FC1                     ADCON1          equ	4033	;# 
   317   000FC2                     ADCON0          equ	4034	;# 
   318   000FC3                     ADRES           equ	4035	;# 
   319   000FC3                     ADRESL          equ	4035	;# 
   320   000FC4                     ADRESH          equ	4036	;# 
   321   000FC5                     SSPCON2         equ	4037	;# 
   322   000FC6                     SSPCON1         equ	4038	;# 
   323   000FC7                     SSPSTAT         equ	4039	;# 
   324   000FC8                     SSPADD          equ	4040	;# 
   325   000FC9                     SSPBUF          equ	4041	;# 
   326   000FCA                     T2CON           equ	4042	;# 
   327   000FCB                     PR2             equ	4043	;# 
   328   000FCB                     MEMCON          equ	4043	;# 
   329   000FCC                     TMR2            equ	4044	;# 
   330   000FCD                     T1CON           equ	4045	;# 
   331   000FCE                     TMR1            equ	4046	;# 
   332   000FCE                     TMR1L           equ	4046	;# 
   333   000FCF                     TMR1H           equ	4047	;# 
   334   000FD0                     RCON            equ	4048	;# 
   335   000FD1                     WDTCON          equ	4049	;# 
   336   000FD2                     HLVDCON         equ	4050	;# 
   337   000FD2                     LVDCON          equ	4050	;# 
   338   000FD3                     OSCCON          equ	4051	;# 
   339   000FD5                     T0CON           equ	4053	;# 
   340   000FD6                     TMR0            equ	4054	;# 
   341   000FD6                     TMR0L           equ	4054	;# 
   342   000FD7                     TMR0H           equ	4055	;# 
   343   000FD8                     STATUS          equ	4056	;# 
   344   000FD9                     FSR2            equ	4057	;# 
   345   000FD9                     FSR2L           equ	4057	;# 
   346   000FDA                     FSR2H           equ	4058	;# 
   347   000FDB                     PLUSW2          equ	4059	;# 
   348   000FDC                     PREINC2         equ	4060	;# 
   349   000FDD                     POSTDEC2        equ	4061	;# 
   350   000FDE                     POSTINC2        equ	4062	;# 
   351   000FDF                     INDF2           equ	4063	;# 
   352   000FE0                     BSR             equ	4064	;# 
   353   000FE1                     FSR1            equ	4065	;# 
   354   000FE1                     FSR1L           equ	4065	;# 
   355   000FE2                     FSR1H           equ	4066	;# 
   356   000FE3                     PLUSW1          equ	4067	;# 
   357   000FE4                     PREINC1         equ	4068	;# 
   358   000FE5                     POSTDEC1        equ	4069	;# 
   359   000FE6                     POSTINC1        equ	4070	;# 
   360   000FE7                     INDF1           equ	4071	;# 
   361   000FE8                     WREG            equ	4072	;# 
   362   000FE9                     FSR0            equ	4073	;# 
   363   000FE9                     FSR0L           equ	4073	;# 
   364   000FEA                     FSR0H           equ	4074	;# 
   365   000FEB                     PLUSW0          equ	4075	;# 
   366   000FEC                     PREINC0         equ	4076	;# 
   367   000FED                     POSTDEC0        equ	4077	;# 
   368   000FEE                     POSTINC0        equ	4078	;# 
   369   000FEF                     INDF0           equ	4079	;# 
   370   000FF0                     INTCON3         equ	4080	;# 
   371   000FF1                     INTCON2         equ	4081	;# 
   372   000FF2                     INTCON          equ	4082	;# 
   373   000FF3                     PROD            equ	4083	;# 
   374   000FF3                     PRODL           equ	4083	;# 
   375   000FF4                     PRODH           equ	4084	;# 
   376   000FF5                     TABLAT          equ	4085	;# 
   377   000FF6                     TBLPTR          equ	4086	;# 
   378   000FF6                     TBLPTRL         equ	4086	;# 
   379   000FF7                     TBLPTRH         equ	4087	;# 
   380   000FF8                     TBLPTRU         equ	4088	;# 
   381   000FF9                     PCLAT           equ	4089	;# 
   382   000FF9                     PC              equ	4089	;# 
   383   000FF9                     PCL             equ	4089	;# 
   384   000FFA                     PCLATH          equ	4090	;# 
   385   000FFB                     PCLATU          equ	4091	;# 
   386   000FFC                     STKPTR          equ	4092	;# 
   387   000FFD                     TOS             equ	4093	;# 
   388   000FFD                     TOSL            equ	4093	;# 
   389   000FFE                     TOSH            equ	4094	;# 
   390   000FFF                     TOSU            equ	4095	;# 
   391   000F80                     PORTA           equ	3968	;# 
   392   000F81                     PORTB           equ	3969	;# 
   393   000F82                     PORTC           equ	3970	;# 
   394   000F83                     PORTD           equ	3971	;# 
   395   000F84                     PORTE           equ	3972	;# 
   396   000F89                     LATA            equ	3977	;# 
   397   000F8A                     LATB            equ	3978	;# 
   398   000F8B                     LATC            equ	3979	;# 
   399   000F8C                     LATD            equ	3980	;# 
   400   000F8D                     LATE            equ	3981	;# 
   401   000F92                     TRISA           equ	3986	;# 
   402   000F92                     DDRA            equ	3986	;# 
   403   000F93                     TRISB           equ	3987	;# 
   404   000F93                     DDRB            equ	3987	;# 
   405   000F94                     TRISC           equ	3988	;# 
   406   000F94                     DDRC            equ	3988	;# 
   407   000F95                     TRISD           equ	3989	;# 
   408   000F95                     DDRD            equ	3989	;# 
   409   000F96                     TRISE           equ	3990	;# 
   410   000F96                     DDRE            equ	3990	;# 
   411   000F9B                     OSCTUNE         equ	3995	;# 
   412   000F9D                     PIE1            equ	3997	;# 
   413   000F9E                     PIR1            equ	3998	;# 
   414   000F9F                     IPR1            equ	3999	;# 
   415   000FA0                     PIE2            equ	4000	;# 
   416   000FA1                     PIR2            equ	4001	;# 
   417   000FA2                     IPR2            equ	4002	;# 
   418   000FA6                     EECON1          equ	4006	;# 
   419   000FA7                     EECON2          equ	4007	;# 
   420   000FA8                     EEDATA          equ	4008	;# 
   421   000FA9                     EEADR           equ	4009	;# 
   422   000FAB                     RCSTA           equ	4011	;# 
   423   000FAB                     RCSTA1          equ	4011	;# 
   424   000FAC                     TXSTA           equ	4012	;# 
   425   000FAC                     TXSTA1          equ	4012	;# 
   426   000FAD                     TXREG           equ	4013	;# 
   427   000FAD                     TXREG1          equ	4013	;# 
   428   000FAE                     RCREG           equ	4014	;# 
   429   000FAE                     RCREG1          equ	4014	;# 
   430   000FAF                     SPBRG           equ	4015	;# 
   431   000FAF                     SPBRG1          equ	4015	;# 
   432   000FB0                     SPBRGH          equ	4016	;# 
   433   000FB1                     T3CON           equ	4017	;# 
   434   000FB2                     TMR3            equ	4018	;# 
   435   000FB2                     TMR3L           equ	4018	;# 
   436   000FB3                     TMR3H           equ	4019	;# 
   437   000FB4                     CMCON           equ	4020	;# 
   438   000FB5                     CVRCON          equ	4021	;# 
   439   000FB6                     ECCP1AS         equ	4022	;# 
   440   000FB6                     ECCPAS          equ	4022	;# 
   441   000FB7                     PWM1CON         equ	4023	;# 
   442   000FB7                     ECCP1DEL        equ	4023	;# 
   443   000FB8                     BAUDCON         equ	4024	;# 
   444   000FB8                     BAUDCTL         equ	4024	;# 
   445   000FBA                     CCP2CON         equ	4026	;# 
   446   000FBB                     CCPR2           equ	4027	;# 
   447   000FBB                     CCPR2L          equ	4027	;# 
   448   000FBC                     CCPR2H          equ	4028	;# 
   449   000FBD                     CCP1CON         equ	4029	;# 
   450   000FBE                     CCPR1           equ	4030	;# 
   451   000FBE                     CCPR1L          equ	4030	;# 
   452   000FBF                     CCPR1H          equ	4031	;# 
   453   000FC0                     ADCON2          equ	4032	;# 
   454   000FC1                     ADCON1          equ	4033	;# 
   455   000FC2                     ADCON0          equ	4034	;# 
   456   000FC3                     ADRES           equ	4035	;# 
   457   000FC3                     ADRESL          equ	4035	;# 
   458   000FC4                     ADRESH          equ	4036	;# 
   459   000FC5                     SSPCON2         equ	4037	;# 
   460   000FC6                     SSPCON1         equ	4038	;# 
   461   000FC7                     SSPSTAT         equ	4039	;# 
   462   000FC8                     SSPADD          equ	4040	;# 
   463   000FC9                     SSPBUF          equ	4041	;# 
   464   000FCA                     T2CON           equ	4042	;# 
   465   000FCB                     PR2             equ	4043	;# 
   466   000FCB                     MEMCON          equ	4043	;# 
   467   000FCC                     TMR2            equ	4044	;# 
   468   000FCD                     T1CON           equ	4045	;# 
   469   000FCE                     TMR1            equ	4046	;# 
   470   000FCE                     TMR1L           equ	4046	;# 
   471   000FCF                     TMR1H           equ	4047	;# 
   472   000FD0                     RCON            equ	4048	;# 
   473   000FD1                     WDTCON          equ	4049	;# 
   474   000FD2                     HLVDCON         equ	4050	;# 
   475   000FD2                     LVDCON          equ	4050	;# 
   476   000FD3                     OSCCON          equ	4051	;# 
   477   000FD5                     T0CON           equ	4053	;# 
   478   000FD6                     TMR0            equ	4054	;# 
   479   000FD6                     TMR0L           equ	4054	;# 
   480   000FD7                     TMR0H           equ	4055	;# 
   481   000FD8                     STATUS          equ	4056	;# 
   482   000FD9                     FSR2            equ	4057	;# 
   483   000FD9                     FSR2L           equ	4057	;# 
   484   000FDA                     FSR2H           equ	4058	;# 
   485   000FDB                     PLUSW2          equ	4059	;# 
   486   000FDC                     PREINC2         equ	4060	;# 
   487   000FDD                     POSTDEC2        equ	4061	;# 
   488   000FDE                     POSTINC2        equ	4062	;# 
   489   000FDF                     INDF2           equ	4063	;# 
   490   000FE0                     BSR             equ	4064	;# 
   491   000FE1                     FSR1            equ	4065	;# 
   492   000FE1                     FSR1L           equ	4065	;# 
   493   000FE2                     FSR1H           equ	4066	;# 
   494   000FE3                     PLUSW1          equ	4067	;# 
   495   000FE4                     PREINC1         equ	4068	;# 
   496   000FE5                     POSTDEC1        equ	4069	;# 
   497   000FE6                     POSTINC1        equ	4070	;# 
   498   000FE7                     INDF1           equ	4071	;# 
   499   000FE8                     WREG            equ	4072	;# 
   500   000FE9                     FSR0            equ	4073	;# 
   501   000FE9                     FSR0L           equ	4073	;# 
   502   000FEA                     FSR0H           equ	4074	;# 
   503   000FEB                     PLUSW0          equ	4075	;# 
   504   000FEC                     PREINC0         equ	4076	;# 
   505   000FED                     POSTDEC0        equ	4077	;# 
   506   000FEE                     POSTINC0        equ	4078	;# 
   507   000FEF                     INDF0           equ	4079	;# 
   508   000FF0                     INTCON3         equ	4080	;# 
   509   000FF1                     INTCON2         equ	4081	;# 
   510   000FF2                     INTCON          equ	4082	;# 
   511   000FF3                     PROD            equ	4083	;# 
   512   000FF3                     PRODL           equ	4083	;# 
   513   000FF4                     PRODH           equ	4084	;# 
   514   000FF5                     TABLAT          equ	4085	;# 
   515   000FF6                     TBLPTR          equ	4086	;# 
   516   000FF6                     TBLPTRL         equ	4086	;# 
   517   000FF7                     TBLPTRH         equ	4087	;# 
   518   000FF8                     TBLPTRU         equ	4088	;# 
   519   000FF9                     PCLAT           equ	4089	;# 
   520   000FF9                     PC              equ	4089	;# 
   521   000FF9                     PCL             equ	4089	;# 
   522   000FFA                     PCLATH          equ	4090	;# 
   523   000FFB                     PCLATU          equ	4091	;# 
   524   000FFC                     STKPTR          equ	4092	;# 
   525   000FFD                     TOS             equ	4093	;# 
   526   000FFD                     TOSL            equ	4093	;# 
   527   000FFE                     TOSH            equ	4094	;# 
   528   000FFF                     TOSU            equ	4095	;# 
   529   000F80                     PORTA           equ	3968	;# 
   530   000F81                     PORTB           equ	3969	;# 
   531   000F82                     PORTC           equ	3970	;# 
   532   000F83                     PORTD           equ	3971	;# 
   533   000F84                     PORTE           equ	3972	;# 
   534   000F89                     LATA            equ	3977	;# 
   535   000F8A                     LATB            equ	3978	;# 
   536   000F8B                     LATC            equ	3979	;# 
   537   000F8C                     LATD            equ	3980	;# 
   538   000F8D                     LATE            equ	3981	;# 
   539   000F92                     TRISA           equ	3986	;# 
   540   000F92                     DDRA            equ	3986	;# 
   541   000F93                     TRISB           equ	3987	;# 
   542   000F93                     DDRB            equ	3987	;# 
   543   000F94                     TRISC           equ	3988	;# 
   544   000F94                     DDRC            equ	3988	;# 
   545   000F95                     TRISD           equ	3989	;# 
   546   000F95                     DDRD            equ	3989	;# 
   547   000F96                     TRISE           equ	3990	;# 
   548   000F96                     DDRE            equ	3990	;# 
   549   000F9B                     OSCTUNE         equ	3995	;# 
   550   000F9D                     PIE1            equ	3997	;# 
   551   000F9E                     PIR1            equ	3998	;# 
   552   000F9F                     IPR1            equ	3999	;# 
   553   000FA0                     PIE2            equ	4000	;# 
   554   000FA1                     PIR2            equ	4001	;# 
   555   000FA2                     IPR2            equ	4002	;# 
   556   000FA6                     EECON1          equ	4006	;# 
   557   000FA7                     EECON2          equ	4007	;# 
   558   000FA8                     EEDATA          equ	4008	;# 
   559   000FA9                     EEADR           equ	4009	;# 
   560   000FAB                     RCSTA           equ	4011	;# 
   561   000FAB                     RCSTA1          equ	4011	;# 
   562   000FAC                     TXSTA           equ	4012	;# 
   563   000FAC                     TXSTA1          equ	4012	;# 
   564   000FAD                     TXREG           equ	4013	;# 
   565   000FAD                     TXREG1          equ	4013	;# 
   566   000FAE                     RCREG           equ	4014	;# 
   567   000FAE                     RCREG1          equ	4014	;# 
   568   000FAF                     SPBRG           equ	4015	;# 
   569   000FAF                     SPBRG1          equ	4015	;# 
   570   000FB0                     SPBRGH          equ	4016	;# 
   571   000FB1                     T3CON           equ	4017	;# 
   572   000FB2                     TMR3            equ	4018	;# 
   573   000FB2                     TMR3L           equ	4018	;# 
   574   000FB3                     TMR3H           equ	4019	;# 
   575   000FB4                     CMCON           equ	4020	;# 
   576   000FB5                     CVRCON          equ	4021	;# 
   577   000FB6                     ECCP1AS         equ	4022	;# 
   578   000FB6                     ECCPAS          equ	4022	;# 
   579   000FB7                     PWM1CON         equ	4023	;# 
   580   000FB7                     ECCP1DEL        equ	4023	;# 
   581   000FB8                     BAUDCON         equ	4024	;# 
   582   000FB8                     BAUDCTL         equ	4024	;# 
   583   000FBA                     CCP2CON         equ	4026	;# 
   584   000FBB                     CCPR2           equ	4027	;# 
   585   000FBB                     CCPR2L          equ	4027	;# 
   586   000FBC                     CCPR2H          equ	4028	;# 
   587   000FBD                     CCP1CON         equ	4029	;# 
   588   000FBE                     CCPR1           equ	4030	;# 
   589   000FBE                     CCPR1L          equ	4030	;# 
   590   000FBF                     CCPR1H          equ	4031	;# 
   591   000FC0                     ADCON2          equ	4032	;# 
   592   000FC1                     ADCON1          equ	4033	;# 
   593   000FC2                     ADCON0          equ	4034	;# 
   594   000FC3                     ADRES           equ	4035	;# 
   595   000FC3                     ADRESL          equ	4035	;# 
   596   000FC4                     ADRESH          equ	4036	;# 
   597   000FC5                     SSPCON2         equ	4037	;# 
   598   000FC6                     SSPCON1         equ	4038	;# 
   599   000FC7                     SSPSTAT         equ	4039	;# 
   600   000FC8                     SSPADD          equ	4040	;# 
   601   000FC9                     SSPBUF          equ	4041	;# 
   602   000FCA                     T2CON           equ	4042	;# 
   603   000FCB                     PR2             equ	4043	;# 
   604   000FCB                     MEMCON          equ	4043	;# 
   605   000FCC                     TMR2            equ	4044	;# 
   606   000FCD                     T1CON           equ	4045	;# 
   607   000FCE                     TMR1            equ	4046	;# 
   608   000FCE                     TMR1L           equ	4046	;# 
   609   000FCF                     TMR1H           equ	4047	;# 
   610   000FD0                     RCON            equ	4048	;# 
   611   000FD1                     WDTCON          equ	4049	;# 
   612   000FD2                     HLVDCON         equ	4050	;# 
   613   000FD2                     LVDCON          equ	4050	;# 
   614   000FD3                     OSCCON          equ	4051	;# 
   615   000FD5                     T0CON           equ	4053	;# 
   616   000FD6                     TMR0            equ	4054	;# 
   617   000FD6                     TMR0L           equ	4054	;# 
   618   000FD7                     TMR0H           equ	4055	;# 
   619   000FD8                     STATUS          equ	4056	;# 
   620   000FD9                     FSR2            equ	4057	;# 
   621   000FD9                     FSR2L           equ	4057	;# 
   622   000FDA                     FSR2H           equ	4058	;# 
   623   000FDB                     PLUSW2          equ	4059	;# 
   624   000FDC                     PREINC2         equ	4060	;# 
   625   000FDD                     POSTDEC2        equ	4061	;# 
   626   000FDE                     POSTINC2        equ	4062	;# 
   627   000FDF                     INDF2           equ	4063	;# 
   628   000FE0                     BSR             equ	4064	;# 
   629   000FE1                     FSR1            equ	4065	;# 
   630   000FE1                     FSR1L           equ	4065	;# 
   631   000FE2                     FSR1H           equ	4066	;# 
   632   000FE3                     PLUSW1          equ	4067	;# 
   633   000FE4                     PREINC1         equ	4068	;# 
   634   000FE5                     POSTDEC1        equ	4069	;# 
   635   000FE6                     POSTINC1        equ	4070	;# 
   636   000FE7                     INDF1           equ	4071	;# 
   637   000FE8                     WREG            equ	4072	;# 
   638   000FE9                     FSR0            equ	4073	;# 
   639   000FE9                     FSR0L           equ	4073	;# 
   640   000FEA                     FSR0H           equ	4074	;# 
   641   000FEB                     PLUSW0          equ	4075	;# 
   642   000FEC                     PREINC0         equ	4076	;# 
   643   000FED                     POSTDEC0        equ	4077	;# 
   644   000FEE                     POSTINC0        equ	4078	;# 
   645   000FEF                     INDF0           equ	4079	;# 
   646   000FF0                     INTCON3         equ	4080	;# 
   647   000FF1                     INTCON2         equ	4081	;# 
   648   000FF2                     INTCON          equ	4082	;# 
   649   000FF3                     PROD            equ	4083	;# 
   650   000FF3                     PRODL           equ	4083	;# 
   651   000FF4                     PRODH           equ	4084	;# 
   652   000FF5                     TABLAT          equ	4085	;# 
   653   000FF6                     TBLPTR          equ	4086	;# 
   654   000FF6                     TBLPTRL         equ	4086	;# 
   655   000FF7                     TBLPTRH         equ	4087	;# 
   656   000FF8                     TBLPTRU         equ	4088	;# 
   657   000FF9                     PCLAT           equ	4089	;# 
   658   000FF9                     PC              equ	4089	;# 
   659   000FF9                     PCL             equ	4089	;# 
   660   000FFA                     PCLATH          equ	4090	;# 
   661   000FFB                     PCLATU          equ	4091	;# 
   662   000FFC                     STKPTR          equ	4092	;# 
   663   000FFD                     TOS             equ	4093	;# 
   664   000FFD                     TOSL            equ	4093	;# 
   665   000FFE                     TOSH            equ	4094	;# 
   666   000FFF                     TOSU            equ	4095	;# 
   667   000F80                     PORTA           equ	3968	;# 
   668   000F81                     PORTB           equ	3969	;# 
   669   000F82                     PORTC           equ	3970	;# 
   670   000F83                     PORTD           equ	3971	;# 
   671   000F84                     PORTE           equ	3972	;# 
   672   000F89                     LATA            equ	3977	;# 
   673   000F8A                     LATB            equ	3978	;# 
   674   000F8B                     LATC            equ	3979	;# 
   675   000F8C                     LATD            equ	3980	;# 
   676   000F8D                     LATE            equ	3981	;# 
   677   000F92                     TRISA           equ	3986	;# 
   678   000F92                     DDRA            equ	3986	;# 
   679   000F93                     TRISB           equ	3987	;# 
   680   000F93                     DDRB            equ	3987	;# 
   681   000F94                     TRISC           equ	3988	;# 
   682   000F94                     DDRC            equ	3988	;# 
   683   000F95                     TRISD           equ	3989	;# 
   684   000F95                     DDRD            equ	3989	;# 
   685   000F96                     TRISE           equ	3990	;# 
   686   000F96                     DDRE            equ	3990	;# 
   687   000F9B                     OSCTUNE         equ	3995	;# 
   688   000F9D                     PIE1            equ	3997	;# 
   689   000F9E                     PIR1            equ	3998	;# 
   690   000F9F                     IPR1            equ	3999	;# 
   691   000FA0                     PIE2            equ	4000	;# 
   692   000FA1                     PIR2            equ	4001	;# 
   693   000FA2                     IPR2            equ	4002	;# 
   694   000FA6                     EECON1          equ	4006	;# 
   695   000FA7                     EECON2          equ	4007	;# 
   696   000FA8                     EEDATA          equ	4008	;# 
   697   000FA9                     EEADR           equ	4009	;# 
   698   000FAB                     RCSTA           equ	4011	;# 
   699   000FAB                     RCSTA1          equ	4011	;# 
   700   000FAC                     TXSTA           equ	4012	;# 
   701   000FAC                     TXSTA1          equ	4012	;# 
   702   000FAD                     TXREG           equ	4013	;# 
   703   000FAD                     TXREG1          equ	4013	;# 
   704   000FAE                     RCREG           equ	4014	;# 
   705   000FAE                     RCREG1          equ	4014	;# 
   706   000FAF                     SPBRG           equ	4015	;# 
   707   000FAF                     SPBRG1          equ	4015	;# 
   708   000FB0                     SPBRGH          equ	4016	;# 
   709   000FB1                     T3CON           equ	4017	;# 
   710   000FB2                     TMR3            equ	4018	;# 
   711   000FB2                     TMR3L           equ	4018	;# 
   712   000FB3                     TMR3H           equ	4019	;# 
   713   000FB4                     CMCON           equ	4020	;# 
   714   000FB5                     CVRCON          equ	4021	;# 
   715   000FB6                     ECCP1AS         equ	4022	;# 
   716   000FB6                     ECCPAS          equ	4022	;# 
   717   000FB7                     PWM1CON         equ	4023	;# 
   718   000FB7                     ECCP1DEL        equ	4023	;# 
   719   000FB8                     BAUDCON         equ	4024	;# 
   720   000FB8                     BAUDCTL         equ	4024	;# 
   721   000FBA                     CCP2CON         equ	4026	;# 
   722   000FBB                     CCPR2           equ	4027	;# 
   723   000FBB                     CCPR2L          equ	4027	;# 
   724   000FBC                     CCPR2H          equ	4028	;# 
   725   000FBD                     CCP1CON         equ	4029	;# 
   726   000FBE                     CCPR1           equ	4030	;# 
   727   000FBE                     CCPR1L          equ	4030	;# 
   728   000FBF                     CCPR1H          equ	4031	;# 
   729   000FC0                     ADCON2          equ	4032	;# 
   730   000FC1                     ADCON1          equ	4033	;# 
   731   000FC2                     ADCON0          equ	4034	;# 
   732   000FC3                     ADRES           equ	4035	;# 
   733   000FC3                     ADRESL          equ	4035	;# 
   734   000FC4                     ADRESH          equ	4036	;# 
   735   000FC5                     SSPCON2         equ	4037	;# 
   736   000FC6                     SSPCON1         equ	4038	;# 
   737   000FC7                     SSPSTAT         equ	4039	;# 
   738   000FC8                     SSPADD          equ	4040	;# 
   739   000FC9                     SSPBUF          equ	4041	;# 
   740   000FCA                     T2CON           equ	4042	;# 
   741   000FCB                     PR2             equ	4043	;# 
   742   000FCB                     MEMCON          equ	4043	;# 
   743   000FCC                     TMR2            equ	4044	;# 
   744   000FCD                     T1CON           equ	4045	;# 
   745   000FCE                     TMR1            equ	4046	;# 
   746   000FCE                     TMR1L           equ	4046	;# 
   747   000FCF                     TMR1H           equ	4047	;# 
   748   000FD0                     RCON            equ	4048	;# 
   749   000FD1                     WDTCON          equ	4049	;# 
   750   000FD2                     HLVDCON         equ	4050	;# 
   751   000FD2                     LVDCON          equ	4050	;# 
   752   000FD3                     OSCCON          equ	4051	;# 
   753   000FD5                     T0CON           equ	4053	;# 
   754   000FD6                     TMR0            equ	4054	;# 
   755   000FD6                     TMR0L           equ	4054	;# 
   756   000FD7                     TMR0H           equ	4055	;# 
   757   000FD8                     STATUS          equ	4056	;# 
   758   000FD9                     FSR2            equ	4057	;# 
   759   000FD9                     FSR2L           equ	4057	;# 
   760   000FDA                     FSR2H           equ	4058	;# 
   761   000FDB                     PLUSW2          equ	4059	;# 
   762   000FDC                     PREINC2         equ	4060	;# 
   763   000FDD                     POSTDEC2        equ	4061	;# 
   764   000FDE                     POSTINC2        equ	4062	;# 
   765   000FDF                     INDF2           equ	4063	;# 
   766   000FE0                     BSR             equ	4064	;# 
   767   000FE1                     FSR1            equ	4065	;# 
   768   000FE1                     FSR1L           equ	4065	;# 
   769   000FE2                     FSR1H           equ	4066	;# 
   770   000FE3                     PLUSW1          equ	4067	;# 
   771   000FE4                     PREINC1         equ	4068	;# 
   772   000FE5                     POSTDEC1        equ	4069	;# 
   773   000FE6                     POSTINC1        equ	4070	;# 
   774   000FE7                     INDF1           equ	4071	;# 
   775   000FE8                     WREG            equ	4072	;# 
   776   000FE9                     FSR0            equ	4073	;# 
   777   000FE9                     FSR0L           equ	4073	;# 
   778   000FEA                     FSR0H           equ	4074	;# 
   779   000FEB                     PLUSW0          equ	4075	;# 
   780   000FEC                     PREINC0         equ	4076	;# 
   781   000FED                     POSTDEC0        equ	4077	;# 
   782   000FEE                     POSTINC0        equ	4078	;# 
   783   000FEF                     INDF0           equ	4079	;# 
   784   000FF0                     INTCON3         equ	4080	;# 
   785   000FF1                     INTCON2         equ	4081	;# 
   786   000FF2                     INTCON          equ	4082	;# 
   787   000FF3                     PROD            equ	4083	;# 
   788   000FF3                     PRODL           equ	4083	;# 
   789   000FF4                     PRODH           equ	4084	;# 
   790   000FF5                     TABLAT          equ	4085	;# 
   791   000FF6                     TBLPTR          equ	4086	;# 
   792   000FF6                     TBLPTRL         equ	4086	;# 
   793   000FF7                     TBLPTRH         equ	4087	;# 
   794   000FF8                     TBLPTRU         equ	4088	;# 
   795   000FF9                     PCLAT           equ	4089	;# 
   796   000FF9                     PC              equ	4089	;# 
   797   000FF9                     PCL             equ	4089	;# 
   798   000FFA                     PCLATH          equ	4090	;# 
   799   000FFB                     PCLATU          equ	4091	;# 
   800   000FFC                     STKPTR          equ	4092	;# 
   801   000FFD                     TOS             equ	4093	;# 
   802   000FFD                     TOSL            equ	4093	;# 
   803   000FFE                     TOSH            equ	4094	;# 
   804   000FFF                     TOSU            equ	4095	;# 
   805   000F80                     PORTA           equ	3968	;# 
   806   000F81                     PORTB           equ	3969	;# 
   807   000F82                     PORTC           equ	3970	;# 
   808   000F83                     PORTD           equ	3971	;# 
   809   000F84                     PORTE           equ	3972	;# 
   810   000F89                     LATA            equ	3977	;# 
   811   000F8A                     LATB            equ	3978	;# 
   812   000F8B                     LATC            equ	3979	;# 
   813   000F8C                     LATD            equ	3980	;# 
   814   000F8D                     LATE            equ	3981	;# 
   815   000F92                     TRISA           equ	3986	;# 
   816   000F92                     DDRA            equ	3986	;# 
   817   000F93                     TRISB           equ	3987	;# 
   818   000F93                     DDRB            equ	3987	;# 
   819   000F94                     TRISC           equ	3988	;# 
   820   000F94                     DDRC            equ	3988	;# 
   821   000F95                     TRISD           equ	3989	;# 
   822   000F95                     DDRD            equ	3989	;# 
   823   000F96                     TRISE           equ	3990	;# 
   824   000F96                     DDRE            equ	3990	;# 
   825   000F9B                     OSCTUNE         equ	3995	;# 
   826   000F9D                     PIE1            equ	3997	;# 
   827   000F9E                     PIR1            equ	3998	;# 
   828   000F9F                     IPR1            equ	3999	;# 
   829   000FA0                     PIE2            equ	4000	;# 
   830   000FA1                     PIR2            equ	4001	;# 
   831   000FA2                     IPR2            equ	4002	;# 
   832   000FA6                     EECON1          equ	4006	;# 
   833   000FA7                     EECON2          equ	4007	;# 
   834   000FA8                     EEDATA          equ	4008	;# 
   835   000FA9                     EEADR           equ	4009	;# 
   836   000FAB                     RCSTA           equ	4011	;# 
   837   000FAB                     RCSTA1          equ	4011	;# 
   838   000FAC                     TXSTA           equ	4012	;# 
   839   000FAC                     TXSTA1          equ	4012	;# 
   840   000FAD                     TXREG           equ	4013	;# 
   841   000FAD                     TXREG1          equ	4013	;# 
   842   000FAE                     RCREG           equ	4014	;# 
   843   000FAE                     RCREG1          equ	4014	;# 
   844   000FAF                     SPBRG           equ	4015	;# 
   845   000FAF                     SPBRG1          equ	4015	;# 
   846   000FB0                     SPBRGH          equ	4016	;# 
   847   000FB1                     T3CON           equ	4017	;# 
   848   000FB2                     TMR3            equ	4018	;# 
   849   000FB2                     TMR3L           equ	4018	;# 
   850   000FB3                     TMR3H           equ	4019	;# 
   851   000FB4                     CMCON           equ	4020	;# 
   852   000FB5                     CVRCON          equ	4021	;# 
   853   000FB6                     ECCP1AS         equ	4022	;# 
   854   000FB6                     ECCPAS          equ	4022	;# 
   855   000FB7                     PWM1CON         equ	4023	;# 
   856   000FB7                     ECCP1DEL        equ	4023	;# 
   857   000FB8                     BAUDCON         equ	4024	;# 
   858   000FB8                     BAUDCTL         equ	4024	;# 
   859   000FBA                     CCP2CON         equ	4026	;# 
   860   000FBB                     CCPR2           equ	4027	;# 
   861   000FBB                     CCPR2L          equ	4027	;# 
   862   000FBC                     CCPR2H          equ	4028	;# 
   863   000FBD                     CCP1CON         equ	4029	;# 
   864   000FBE                     CCPR1           equ	4030	;# 
   865   000FBE                     CCPR1L          equ	4030	;# 
   866   000FBF                     CCPR1H          equ	4031	;# 
   867   000FC0                     ADCON2          equ	4032	;# 
   868   000FC1                     ADCON1          equ	4033	;# 
   869   000FC2                     ADCON0          equ	4034	;# 
   870   000FC3                     ADRES           equ	4035	;# 
   871   000FC3                     ADRESL          equ	4035	;# 
   872   000FC4                     ADRESH          equ	4036	;# 
   873   000FC5                     SSPCON2         equ	4037	;# 
   874   000FC6                     SSPCON1         equ	4038	;# 
   875   000FC7                     SSPSTAT         equ	4039	;# 
   876   000FC8                     SSPADD          equ	4040	;# 
   877   000FC9                     SSPBUF          equ	4041	;# 
   878   000FCA                     T2CON           equ	4042	;# 
   879   000FCB                     PR2             equ	4043	;# 
   880   000FCB                     MEMCON          equ	4043	;# 
   881   000FCC                     TMR2            equ	4044	;# 
   882   000FCD                     T1CON           equ	4045	;# 
   883   000FCE                     TMR1            equ	4046	;# 
   884   000FCE                     TMR1L           equ	4046	;# 
   885   000FCF                     TMR1H           equ	4047	;# 
   886   000FD0                     RCON            equ	4048	;# 
   887   000FD1                     WDTCON          equ	4049	;# 
   888   000FD2                     HLVDCON         equ	4050	;# 
   889   000FD2                     LVDCON          equ	4050	;# 
   890   000FD3                     OSCCON          equ	4051	;# 
   891   000FD5                     T0CON           equ	4053	;# 
   892   000FD6                     TMR0            equ	4054	;# 
   893   000FD6                     TMR0L           equ	4054	;# 
   894   000FD7                     TMR0H           equ	4055	;# 
   895   000FD8                     STATUS          equ	4056	;# 
   896   000FD9                     FSR2            equ	4057	;# 
   897   000FD9                     FSR2L           equ	4057	;# 
   898   000FDA                     FSR2H           equ	4058	;# 
   899   000FDB                     PLUSW2          equ	4059	;# 
   900   000FDC                     PREINC2         equ	4060	;# 
   901   000FDD                     POSTDEC2        equ	4061	;# 
   902   000FDE                     POSTINC2        equ	4062	;# 
   903   000FDF                     INDF2           equ	4063	;# 
   904   000FE0                     BSR             equ	4064	;# 
   905   000FE1                     FSR1            equ	4065	;# 
   906   000FE1                     FSR1L           equ	4065	;# 
   907   000FE2                     FSR1H           equ	4066	;# 
   908   000FE3                     PLUSW1          equ	4067	;# 
   909   000FE4                     PREINC1         equ	4068	;# 
   910   000FE5                     POSTDEC1        equ	4069	;# 
   911   000FE6                     POSTINC1        equ	4070	;# 
   912   000FE7                     INDF1           equ	4071	;# 
   913   000FE8                     WREG            equ	4072	;# 
   914   000FE9                     FSR0            equ	4073	;# 
   915   000FE9                     FSR0L           equ	4073	;# 
   916   000FEA                     FSR0H           equ	4074	;# 
   917   000FEB                     PLUSW0          equ	4075	;# 
   918   000FEC                     PREINC0         equ	4076	;# 
   919   000FED                     POSTDEC0        equ	4077	;# 
   920   000FEE                     POSTINC0        equ	4078	;# 
   921   000FEF                     INDF0           equ	4079	;# 
   922   000FF0                     INTCON3         equ	4080	;# 
   923   000FF1                     INTCON2         equ	4081	;# 
   924   000FF2                     INTCON          equ	4082	;# 
   925   000FF3                     PROD            equ	4083	;# 
   926   000FF3                     PRODL           equ	4083	;# 
   927   000FF4                     PRODH           equ	4084	;# 
   928   000FF5                     TABLAT          equ	4085	;# 
   929   000FF6                     TBLPTR          equ	4086	;# 
   930   000FF6                     TBLPTRL         equ	4086	;# 
   931   000FF7                     TBLPTRH         equ	4087	;# 
   932   000FF8                     TBLPTRU         equ	4088	;# 
   933   000FF9                     PCLAT           equ	4089	;# 
   934   000FF9                     PC              equ	4089	;# 
   935   000FF9                     PCL             equ	4089	;# 
   936   000FFA                     PCLATH          equ	4090	;# 
   937   000FFB                     PCLATU          equ	4091	;# 
   938   000FFC                     STKPTR          equ	4092	;# 
   939   000FFD                     TOS             equ	4093	;# 
   940   000FFD                     TOSL            equ	4093	;# 
   941   000FFE                     TOSH            equ	4094	;# 
   942   000FFF                     TOSU            equ	4095	;# 
   943   007D5C                     _CREN           set	32092
   944   007E9C                     _IRCF0          set	32412
   945   007E9D                     _IRCF1          set	32413
   946   007E9E                     _IRCF2          set	32414
   947   007E07                     _ADFM           set	32263
   948   007CF5                     _RCIF           set	31989
   949   000F92                     _TRISA          set	3986
   950   000F8C                     _LATD           set	3980
   951   000F95                     _TRISDbits      set	3989
   952   000F8B                     _LATC           set	3979
   953   000F94                     _TRISCbits      set	3988
   954   000F89                     _LATA           set	3977
   955   000F92                     _TRISAbits      set	3986
   956   000FAD                     _TXREG          set	4013
   957   000FCB                     _PR2            set	4043
   958   000FCA                     _T2CON          set	4042
   959   000F9D                     _PIE1bits       set	3997
   960   000FAB                     _RCSTAbits      set	4011
   961   000FAF                     _SPBRG          set	4015
   962   000FB8                     _BAUDCONbits    set	4024
   963   000FAC                     _TXSTAbits      set	4012
   964   000FD0                     _RCONbits       set	4048
   965   000F9F                     _IPR1bits       set	3999
   966   000FBD                     _CCP1CON        set	4029
   967   000FC2                     _ADCON0bits     set	4034
   968   000FC3                     _ADRESL         set	4035
   969   000FC4                     _ADRESH         set	4036
   970   000FC0                     _ADCON2bits     set	4032
   971   000FC1                     _ADCON1         set	4033
   972   000F9E                     _PIR1bits       set	3998
   973   000FAE                     _RCREG          set	4014
   974   000FF2                     _INTCONbits     set	4082
   975                           
   976                           	psect	smallconst
   977   000600                     __psmallconst:
   978                           	callstack 0
   979   000600  00                 	db	0
   980   000601                     STR_1:
   981   000601  50                 	db	80	;'P'
   982   000602  6C                 	db	108	;'l'
   983   000603  61                 	db	97	;'a'
   984   000604  79                 	db	121	;'y'
   985   000605  65                 	db	101	;'e'
   986   000606  72                 	db	114	;'r'
   987   000607  20                 	db	32
   988   000608  31                 	db	49	;'1'
   989   000609  20                 	db	32
   990   00060A  69                 	db	105	;'i'
   991   00060B  6E                 	db	110	;'n'
   992   00060C  70                 	db	112	;'p'
   993   00060D  75                 	db	117	;'u'
   994   00060E  74                 	db	116	;'t'
   995   00060F  3A                 	db	58	;':'
   996   000610  00                 	db	0
   997   000611                     STR_2:
   998   000611  50                 	db	80	;'P'
   999   000612  6C                 	db	108	;'l'
  1000   000613  61                 	db	97	;'a'
  1001   000614  79                 	db	121	;'y'
  1002   000615  65                 	db	101	;'e'
  1003   000616  72                 	db	114	;'r'
  1004   000617  20                 	db	32
  1005   000618  32                 	db	50	;'2'
  1006   000619  20                 	db	32
  1007   00061A  69                 	db	105	;'i'
  1008   00061B  6E                 	db	110	;'n'
  1009   00061C  70                 	db	112	;'p'
  1010   00061D  75                 	db	117	;'u'
  1011   00061E  74                 	db	116	;'t'
  1012   00061F  3A                 	db	58	;':'
  1013   000620  00                 	db	0
  1014   000621                     STR_4:
  1015   000621  50                 	db	80	;'P'
  1016   000622  6C                 	db	108	;'l'
  1017   000623  61                 	db	97	;'a'
  1018   000624  79                 	db	121	;'y'
  1019   000625  65                 	db	101	;'e'
  1020   000626  72                 	db	114	;'r'
  1021   000627  20                 	db	32
  1022   000628  31                 	db	49	;'1'
  1023   000629  20                 	db	32
  1024   00062A  57                 	db	87	;'W'
  1025   00062B  49                 	db	73	;'I'
  1026   00062C  4E                 	db	78	;'N'
  1027   00062D  0A                 	db	10
  1028   00062E  0D                 	db	13
  1029   00062F  00                 	db	0
  1030   000630                     STR_5:
  1031   000630  50                 	db	80	;'P'
  1032   000631  6C                 	db	108	;'l'
  1033   000632  61                 	db	97	;'a'
  1034   000633  79                 	db	121	;'y'
  1035   000634  65                 	db	101	;'e'
  1036   000635  72                 	db	114	;'r'
  1037   000636  20                 	db	32
  1038   000637  32                 	db	50	;'2'
  1039   000638  20                 	db	32
  1040   000639  57                 	db	87	;'W'
  1041   00063A  49                 	db	73	;'I'
  1042   00063B  4E                 	db	78	;'N'
  1043   00063C  0A                 	db	10
  1044   00063D  0D                 	db	13
  1045   00063E  00                 	db	0
  1046   000601                     STR_3           equ	STR_1
  1047   00063F  00                 	db	0	; dummy byte at the end
  1048   000002                     __activetblptr  equ	2
  1049                           
  1050                           ; #config settings
  1051                           
  1052                           	psect	cinit
  1053   0017D6                     __pcinit:
  1054                           	callstack 0
  1055   0017D6                     start_initialization:
  1056                           	callstack 0
  1057   0017D6                     __initialization:
  1058                           	callstack 0
  1059                           
  1060                           ; Clear objects allocated to COMRAM (65 bytes)
  1061   0017D6  EE00  F001         	lfsr	0,__pbssCOMRAM
  1062   0017DA  0E41               	movlw	65
  1063   0017DC                     clear_0:
  1064   0017DC  6AEE               	clrf	postinc0,c
  1065   0017DE  06E8               	decf	wreg,f,c
  1066   0017E0  E1FD               	bnz	clear_0
  1067   0017E2                     end_of_initialization:
  1068                           	callstack 0
  1069   0017E2                     __end_of__initialization:
  1070                           	callstack 0
  1071   0017E2  9068               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1072   0017E4  9268               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1073   0017E6  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1074   0017E8  6EF8               	movwf	tblptru,c
  1075   0017EA  0100               	movlb	0
  1076   0017EC  EFE3  F00A         	goto	_main	;jump to C main() function
  1077                           
  1078                           	psect	bssCOMRAM
  1079   000001                     __pbssCOMRAM:
  1080                           	callstack 0
  1081   000001                     _funcs:
  1082                           	callstack 0
  1083   000001                     	ds	6
  1084   000007                     _lenStr:
  1085                           	callstack 0
  1086   000007                     	ds	2
  1087   000009                     _temp:
  1088                           	callstack 0
  1089   000009                     	ds	2
  1090   00000B                     _turn:
  1091                           	callstack 0
  1092   00000B                     	ds	2
  1093   00000D                     _count:
  1094                           	callstack 0
  1095   00000D                     	ds	1
  1096   00000E                     _mystring:
  1097                           	callstack 0
  1098   00000E                     	ds	20
  1099   000022                     _str:
  1100                           	callstack 0
  1101   000022                     	ds	20
  1102   000036                     _player_b:
  1103                           	callstack 0
  1104   000036                     	ds	6
  1105   00003C                     _player_a:
  1106                           	callstack 0
  1107   00003C                     	ds	6
  1108                           
  1109                           	psect	cstackBANK0
  1110   000080                     __pcstackBANK0:
  1111                           	callstack 0
  1112   000080                     i1UART_Write@data:
  1113                           	callstack 0
  1114   000080                     ClearBuffer@i:
  1115                           	callstack 0
  1116   000080                     
  1117                           ; 1 bytes @ 0x0
  1118   000080                     	ds	2
  1119   000082                     MyusartRead@temp:
  1120                           	callstack 0
  1121   000082                     
  1122                           ; 1 bytes @ 0x2
  1123   000082                     	ds	1
  1124   000083                     ??_Lo_ISR:
  1125                           
  1126                           ; 1 bytes @ 0x3
  1127   000083                     	ds	5
  1128   000088                     UART_Write@data:
  1129                           	callstack 0
  1130   000088                     __Exit@ec:
  1131                           	callstack 0
  1132   000088                     
  1133                           ; 1 bytes @ 0x8
  1134   000088                     	ds	1
  1135   000089                     UART_Write_Text@text:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x9
  1139   000089                     	ds	1
  1140   00008A                     exit@code:
  1141                           	callstack 0
  1142   00008A                     ??_UART_Write_Text:
  1143   00008A                     
  1144                           ; 1 bytes @ 0xA
  1145   00008A                     	ds	1
  1146   00008B                     UART_Write_Text@i:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0xB
  1150   00008B                     	ds	1
  1151   00008C                     
  1152                           ; 1 bytes @ 0xC
  1153   00008C                     	ds	1
  1154   00008D                     
  1155                           ; 1 bytes @ 0xD
  1156                           
  1157                           	psect	cstackCOMRAM
  1158   000042                     __pcstackCOMRAM:
  1159                           	callstack 0
  1160   000042                     ?_JUDGE:
  1161                           	callstack 0
  1162   000042                     i2UART_Write@data:
  1163                           	callstack 0
  1164   000042                     JUDGE@turn:
  1165                           	callstack 0
  1166   000042                     i2ClearBuffer@i:
  1167                           	callstack 0
  1168   000042                     
  1169                           ; 1 bytes @ 0x0
  1170   000042                     	ds	1
  1171   000043                     i2UART_Write_Text@text:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x1
  1175   000043                     	ds	1
  1176   000044                     JUDGE@player:
  1177                           	callstack 0
  1178   000044                     strcpy@dest:
  1179                           	callstack 0
  1180   000044                     i2MyusartRead@temp:
  1181                           	callstack 0
  1182   000044                     ??i2_UART_Write_Text:
  1183   000044                     
  1184                           ; 1 bytes @ 0x2
  1185   000044                     	ds	1
  1186   000045                     strcpy@src:
  1187                           	callstack 0
  1188   000045                     i2UART_Write_Text@i:
  1189                           	callstack 0
  1190   000045                     ??_JUDGE:
  1191                           
  1192                           ; 1 bytes @ 0x3
  1193   000045                     	ds	1
  1194   000046                     strcpy@d:
  1195                           	callstack 0
  1196   000046                     
  1197                           ; 1 bytes @ 0x4
  1198   000046                     	ds	4
  1199   00004A                     JUDGE@x:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x8
  1203   00004A                     	ds	2
  1204   00004C                     JUDGE@a:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0xA
  1208   00004C                     	ds	2
  1209   00004E                     JUDGE@j:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0xC
  1213   00004E                     	ds	2
  1214   000050                     JUDGE@win:
  1215                           	callstack 0
  1216                           
  1217                           ; 1 bytes @ 0xE
  1218   000050                     	ds	1
  1219   000051                     JUDGE@i:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0xF
  1223   000051                     	ds	2
  1224   000053                     JUDGE@arr:
  1225                           	callstack 0
  1226                           
  1227                           ; 6 bytes @ 0x11
  1228   000053                     	ds	6
  1229   000059                     ??_Hi_ISR:
  1230                           
  1231                           ; 1 bytes @ 0x17
  1232   000059                     	ds	12
  1233   000065                     Hi_ISR@ch:
  1234                           	callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x23
  1237   000065                     	ds	1
  1238   000066                     Hi_ISR@position:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x24
  1242   000066                     	ds	2
  1243                           
  1244 ;;
  1245 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1246 ;;
  1247 ;; *************** function _main *****************
  1248 ;; Defined at:
  1249 ;;		line 54 in file "main.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1263 ;;      Params:         0       0       0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0
  1266 ;;      Totals:         0       0       0       0       0       0       0
  1267 ;;Total ram usage:        0 bytes
  1268 ;; Hardware stack levels required when called: 8
  1269 ;; This function calls:
  1270 ;;		_SYSTEM_Initialize
  1271 ;;		_UART_Write_Text
  1272 ;;		_exit
  1273 ;; This function is called by:
  1274 ;;		Startup code after reset
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text0
  1279   0015C6                     __ptext0:
  1280                           	callstack 0
  1281   0015C6                     _main:
  1282                           	callstack 23
  1283   0015C6                     
  1284                           ;main.c: 57:     SYSTEM_Initialize() ;
  1285   0015C6  EC24  F00C         	call	_SYSTEM_Initialize	;wreg free
  1286   0015CA                     
  1287                           ;main.c: 58:     TRISAbits.RA0 = 0;
  1288   0015CA  9092               	bcf	146,0,c	;volatile
  1289   0015CC                     
  1290                           ;main.c: 59:     TRISAbits.RA1 = 0;
  1291   0015CC  9292               	bcf	146,1,c	;volatile
  1292   0015CE                     
  1293                           ;main.c: 60:     TRISAbits.RA2 = 0;
  1294   0015CE  9492               	bcf	146,2,c	;volatile
  1295   0015D0                     
  1296                           ;main.c: 61:     LATA = 0;
  1297   0015D0  6A89               	clrf	137,c	;volatile
  1298   0015D2                     
  1299                           ;main.c: 62:     TRISCbits.RC0 = 0;
  1300   0015D2  9094               	bcf	148,0,c	;volatile
  1301   0015D4                     
  1302                           ;main.c: 63:     TRISCbits.RC1 = 0;
  1303   0015D4  9294               	bcf	148,1,c	;volatile
  1304   0015D6                     
  1305                           ;main.c: 64:     TRISCbits.RC2 = 0;
  1306   0015D6  9494               	bcf	148,2,c	;volatile
  1307   0015D8                     
  1308                           ;main.c: 65:     LATC = 0;
  1309   0015D8  6A8B               	clrf	139,c	;volatile
  1310   0015DA                     
  1311                           ;main.c: 66:     TRISDbits.RD0 = 0;
  1312   0015DA  9095               	bcf	149,0,c	;volatile
  1313   0015DC                     
  1314                           ;main.c: 67:     TRISDbits.RD1 = 0;
  1315   0015DC  9295               	bcf	149,1,c	;volatile
  1316   0015DE                     
  1317                           ;main.c: 68:     TRISDbits.RD2 = 0;
  1318   0015DE  9495               	bcf	149,2,c	;volatile
  1319   0015E0                     
  1320                           ;main.c: 69:     LATD = 0;
  1321   0015E0  6A8C               	clrf	140,c	;volatile
  1322   0015E2                     
  1323                           ;main.c: 70:     if (temp == 0) UART_Write_Text("Player 1 input:");
  1324   0015E2  5009               	movf	_temp^0,w,c
  1325   0015E4  100A               	iorwf	(_temp+1)^0,w,c
  1326   0015E6  A4D8               	btfss	status,2,c
  1327   0015E8  EFF8  F00A         	goto	u1411
  1328   0015EC  EFFA  F00A         	goto	u1410
  1329   0015F0                     u1411:
  1330   0015F0  EFFF  F00A         	goto	l2724
  1331   0015F4                     u1410:
  1332   0015F4  0E01               	movlw	low STR_1
  1333   0015F6  0100               	movlb	0	; () banked
  1334   0015F8  6F89               	movwf	UART_Write_Text@text& (0+255),b
  1335   0015FA  EC3F  F00B         	call	_UART_Write_Text	;wreg free
  1336   0015FE                     l2724:
  1337                           
  1338                           ;main.c: 72:         if(temp != 0){
  1339   0015FE  5009               	movf	_temp^0,w,c
  1340   001600  100A               	iorwf	(_temp+1)^0,w,c
  1341   001602  B4D8               	btfsc	status,2,c
  1342   001604  EF06  F00B         	goto	u1421
  1343   001608  EF08  F00B         	goto	u1420
  1344   00160C                     u1421:
  1345   00160C  EFFF  F00A         	goto	l2724
  1346   001610                     u1420:
  1347   001610                     
  1348                           ;main.c: 73:             exit(0);
  1349   001610  0E00               	movlw	0
  1350   001612  0100               	movlb	0	; () banked
  1351   001614  6F8B               	movwf	(exit@code+1)& (0+255),b
  1352   001616  0E00               	movlw	0
  1353   001618  6F8A               	movwf	exit@code& (0+255),b
  1354   00161A  EC1B  F00C         	call	_exit	;wreg free
  1355   00161E  EFFF  F00A         	goto	l2724
  1356   001622  EF36  F000         	goto	start
  1357   001626                     __end_of_main:
  1358                           	callstack 0
  1359                           
  1360 ;; *************** function _exit *****************
  1361 ;; Defined at:
  1362 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\exit.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  code            2   10[BANK0 ] int 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      void 
  1369 ;; Registers used:
  1370 ;;		wreg, status,2, status,0, cstack
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1376 ;;      Params:         0       2       0       0       0       0       0
  1377 ;;      Locals:         0       0       0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0       0       0
  1379 ;;      Totals:         0       2       0       0       0       0       0
  1380 ;;Total ram usage:        2 bytes
  1381 ;; Hardware stack levels used: 1
  1382 ;; Hardware stack levels required when called: 7
  1383 ;; This function calls:
  1384 ;;		__Exit
  1385 ;;		___funcs_on_exit
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text1
  1392   001836                     __ptext1:
  1393                           	callstack 0
  1394   001836                     _exit:
  1395                           	callstack 23
  1396   001836  ECDD  F00B         	call	___funcs_on_exit	;wreg free
  1397   00183A  C08A  F088         	movff	exit@code,__Exit@ec
  1398   00183E  C08B  F089         	movff	exit@code+1,__Exit@ec+1
  1399   001842  EC3E  F00C         	call	__Exit	;wreg free
  1400   001846  0012               	return		;funcret
  1401   001848                     __end_of_exit:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function ___funcs_on_exit *****************
  1405 ;; Defined at:
  1406 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\atexit.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  func            2    0        PTR FTN()void 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1420 ;;      Params:         0       0       0       0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0
  1423 ;;      Totals:         0       0       0       0       0       0       0
  1424 ;;Total ram usage:        0 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; Hardware stack levels required when called: 6
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_exit
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text2
  1435   0017BA                     __ptext2:
  1436                           	callstack 0
  1437   0017BA                     ___funcs_on_exit:
  1438                           	callstack 23
  1439   0017BA  EFE0  F00B         	goto	l2648
  1440   0017BE                     l2646:
  1441   0017BE  060D               	decf	_count^0,f,c
  1442   0017C0                     l2648:
  1443   0017C0  500D               	movf	_count^0,w,c
  1444   0017C2  0A80               	xorlw	128
  1445   0017C4  0F7F               	addlw	-129
  1446   0017C6  B0D8               	btfsc	status,0,c
  1447   0017C8  EFE8  F00B         	goto	u1361
  1448   0017CC  EFEA  F00B         	goto	u1360
  1449   0017D0                     u1361:
  1450   0017D0  EFDF  F00B         	goto	l2646
  1451   0017D4                     u1360:
  1452   0017D4  0012               	return		;funcret
  1453   0017D6                     __end_of___funcs_on_exit:
  1454                           	callstack 0
  1455                           
  1456 ;; *************** function __Exit *****************
  1457 ;; Defined at:
  1458 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\_Exit.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  ec              2    8[BANK0 ] int 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		None
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1472 ;;      Params:         0       2       0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0       0       0
  1475 ;;      Totals:         0       2       0       0       0       0       0
  1476 ;;Total ram usage:        2 bytes
  1477 ;; Hardware stack levels used: 1
  1478 ;; Hardware stack levels required when called: 6
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_exit
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text3
  1487   00187C                     __ptext3:
  1488                           	callstack 0
  1489   00187C                     __Exit:
  1490                           	callstack 23
  1491   00187C                     l1074:
  1492   00187C  EF3E  F00C         	goto	l1074
  1493   001880  0012               	return		;funcret
  1494   001882                     __end_of__Exit:
  1495                           	callstack 0
  1496                           
  1497 ;; *************** function _UART_Write_Text *****************
  1498 ;; Defined at:
  1499 ;;		line 76 in file "setting_hardaware/uart.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  text            1    9[BANK0 ] PTR unsigned char 
  1502 ;;		 -> STR_5(15), STR_4(15), STR_3(16), STR_2(16), 
  1503 ;;		 -> STR_1(16), 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  i               2   11[BANK0 ] int 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1515 ;;      Params:         0       1       0       0       0       0       0
  1516 ;;      Locals:         0       2       0       0       0       0       0
  1517 ;;      Temps:          0       1       0       0       0       0       0
  1518 ;;      Totals:         0       4       0       0       0       0       0
  1519 ;;Total ram usage:        4 bytes
  1520 ;; Hardware stack levels used: 1
  1521 ;; Hardware stack levels required when called: 7
  1522 ;; This function calls:
  1523 ;;		_UART_Write
  1524 ;; This function is called by:
  1525 ;;		_main
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text4
  1530   00167E                     __ptext4:
  1531                           	callstack 0
  1532   00167E                     _UART_Write_Text:
  1533                           	callstack 23
  1534   00167E                     
  1535                           ;setting_hardaware/uart.c: 77:     for(int i=0;text[i]!='\0';i++)
  1536   00167E  0E00               	movlw	0
  1537   001680  0100               	movlb	0	; () banked
  1538   001682  6F8C               	movwf	(UART_Write_Text@i+1)& (0+255),b
  1539   001684  0E00               	movlw	0
  1540   001686  6F8B               	movwf	UART_Write_Text@i& (0+255),b
  1541   001688  EF54  F00B         	goto	l2666
  1542   00168C                     l2662:
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;setting_hardaware/uart.c: 78:         UART_Write(text[i]);
  1546   00168C  5189               	movf	UART_Write_Text@text& (0+255),w,b
  1547   00168E  258B               	addwf	UART_Write_Text@i& (0+255),w,b
  1548   001690  6F8A               	movwf	??_UART_Write_Text& (0+255),b
  1549   001692  C08A  FFF6         	movff	??_UART_Write_Text,tblptrl
  1550   001696                     	if	1	;There is more than 1 active tblptr byte
  1551   001696  0E06               	movlw	high __smallconst
  1552   001698  6EF7               	movwf	tblptrh,c
  1553   00169A                     	endif
  1554   00169A                     	if	0	;tblptru may be non-zero
  1555   00169A                     	endif
  1556   00169A                     	if	0	;tblptru may be non-zero
  1557   00169A                     	endif
  1558   00169A  0008               	tblrd		*
  1559   00169C  50F5               	movf	tablat,w,c
  1560   00169E  ECF8  F00B         	call	_UART_Write
  1561   0016A2  0100               	movlb	0	; () banked
  1562   0016A4  4B8B               	infsnz	UART_Write_Text@i& (0+255),f,b
  1563   0016A6  2B8C               	incf	(UART_Write_Text@i+1)& (0+255),f,b
  1564   0016A8                     l2666:
  1565                           
  1566                           ; BSR set to: 0
  1567   0016A8  5189               	movf	UART_Write_Text@text& (0+255),w,b
  1568   0016AA  258B               	addwf	UART_Write_Text@i& (0+255),w,b
  1569   0016AC  6F8A               	movwf	??_UART_Write_Text& (0+255),b
  1570   0016AE  C08A  FFF6         	movff	??_UART_Write_Text,tblptrl
  1571   0016B2                     	if	1	;There is more than 1 active tblptr byte
  1572   0016B2  0E06               	movlw	high __smallconst
  1573   0016B4  6EF7               	movwf	tblptrh,c
  1574   0016B6                     	endif
  1575   0016B6                     	if	0	;tblptru may be non-zero
  1576   0016B6                     	endif
  1577   0016B6                     	if	0	;tblptru may be non-zero
  1578   0016B6                     	endif
  1579   0016B6  0008               	tblrd		*
  1580   0016B8  50F5               	movf	tablat,w,c
  1581   0016BA  0900               	iorlw	0
  1582   0016BC  A4D8               	btfss	status,2,c
  1583   0016BE  EF63  F00B         	goto	u1381
  1584   0016C2  EF65  F00B         	goto	u1380
  1585   0016C6                     u1381:
  1586   0016C6  EF46  F00B         	goto	l2662
  1587   0016CA                     u1380:
  1588   0016CA                     
  1589                           ; BSR set to: 0
  1590   0016CA  0012               	return		;funcret
  1591   0016CC                     __end_of_UART_Write_Text:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _UART_Write *****************
  1595 ;; Defined at:
  1596 ;;		line 69 in file "setting_hardaware/uart.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  data            1    wreg     unsigned char 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  data            1    8[BANK0 ] unsigned char 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1610 ;;      Params:         0       0       0       0       0       0       0
  1611 ;;      Locals:         0       1       0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0
  1613 ;;      Totals:         0       1       0       0       0       0       0
  1614 ;;Total ram usage:        1 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; Hardware stack levels required when called: 6
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_UART_Write_Text
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text5
  1625   0017F0                     __ptext5:
  1626                           	callstack 0
  1627   0017F0                     _UART_Write:
  1628                           	callstack 23
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;incstack = 0
  1632                           ;UART_Write@data stored from wreg
  1633   0017F0  0100               	movlb	0	; () banked
  1634   0017F2  6F88               	movwf	UART_Write@data& (0+255),b
  1635   0017F4                     l359:
  1636   0017F4  A2AC               	btfss	172,1,c	;volatile
  1637   0017F6  EFFF  F00B         	goto	u1341
  1638   0017FA  EF01  F00C         	goto	u1340
  1639   0017FE                     u1341:
  1640   0017FE  EFFA  F00B         	goto	l359
  1641   001802                     u1340:
  1642   001802                     
  1643                           ;setting_hardaware/uart.c: 72:     TXREG = data;
  1644   001802  C088  FFAD         	movff	UART_Write@data,4013	;volatile
  1645   001806  0012               	return		;funcret
  1646   001808                     __end_of_UART_Write:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _SYSTEM_Initialize *****************
  1650 ;; Defined at:
  1651 ;;		line 60 in file "setting_hardaware/setting.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1665 ;;      Params:         0       0       0       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0       0
  1668 ;;      Totals:         0       0       0       0       0       0       0
  1669 ;;Total ram usage:        0 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 7
  1672 ;; This function calls:
  1673 ;;		_ADC_Initialize
  1674 ;;		_INTERRUPT_Initialize
  1675 ;;		_OSCILLATOR_Initialize
  1676 ;;		_UART_Initialize
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text6
  1683   001848                     __ptext6:
  1684                           	callstack 0
  1685   001848                     _SYSTEM_Initialize:
  1686                           	callstack 23
  1687   001848                     
  1688                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  1689   001848  EC36  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  1690                           
  1691                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  1692   00184C  EC3A  F00C         	call	_INTERRUPT_Initialize	;wreg free
  1693   001850                     
  1694                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  1695   001850  EC13  F00B         	call	_UART_Initialize	;wreg free
  1696   001854                     
  1697                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
  1698   001854  EC2D  F00C         	call	_ADC_Initialize	;wreg free
  1699   001858  0012               	return		;funcret
  1700   00185A                     __end_of_SYSTEM_Initialize:
  1701                           	callstack 0
  1702                           
  1703 ;; *************** function _UART_Initialize *****************
  1704 ;; Defined at:
  1705 ;;		line 8 in file "setting_hardaware/uart.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, status,2
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1719 ;;      Params:         0       0       0       0       0       0       0
  1720 ;;      Locals:         0       0       0       0       0       0       0
  1721 ;;      Temps:          0       0       0       0       0       0       0
  1722 ;;      Totals:         0       0       0       0       0       0       0
  1723 ;;Total ram usage:        0 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 6
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		_SYSTEM_Initialize
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text7
  1734   001626                     __ptext7:
  1735                           	callstack 0
  1736   001626                     _UART_Initialize:
  1737                           	callstack 23
  1738   001626                     
  1739                           ;setting_hardaware/uart.c: 18:     TRISCbits.TRISC6 = 1;
  1740   001626  8C94               	bsf	148,6,c	;volatile
  1741                           
  1742                           ;setting_hardaware/uart.c: 19:     TRISCbits.TRISC7 = 1;
  1743   001628  8E94               	bsf	148,7,c	;volatile
  1744                           
  1745                           ;setting_hardaware/uart.c: 22:     TXSTAbits.SYNC = 0;
  1746   00162A  98AC               	bcf	172,4,c	;volatile
  1747                           
  1748                           ;setting_hardaware/uart.c: 23:     BAUDCONbits.BRG16 = 0;
  1749   00162C  96B8               	bcf	184,3,c	;volatile
  1750                           
  1751                           ;setting_hardaware/uart.c: 24:     TXSTAbits.BRGH = 0;
  1752   00162E  94AC               	bcf	172,2,c	;volatile
  1753   001630                     
  1754                           ;setting_hardaware/uart.c: 25:     SPBRG = 51;
  1755   001630  0E33               	movlw	51
  1756   001632  6EAF               	movwf	175,c	;volatile
  1757   001634                     
  1758                           ;setting_hardaware/uart.c: 28:     RCSTAbits.SPEN = 1;
  1759   001634  8EAB               	bsf	171,7,c	;volatile
  1760   001636                     
  1761                           ;setting_hardaware/uart.c: 29:     PIR1bits.TXIF = 1;
  1762   001636  889E               	bsf	158,4,c	;volatile
  1763   001638                     
  1764                           ;setting_hardaware/uart.c: 30:     PIR1bits.RCIF = 0;
  1765   001638  9A9E               	bcf	158,5,c	;volatile
  1766   00163A                     
  1767                           ;setting_hardaware/uart.c: 31:     TXSTAbits.TXEN = 1;
  1768   00163A  8AAC               	bsf	172,5,c	;volatile
  1769   00163C                     
  1770                           ;setting_hardaware/uart.c: 32:     RCSTAbits.CREN = 1;
  1771   00163C  88AB               	bsf	171,4,c	;volatile
  1772   00163E                     
  1773                           ;setting_hardaware/uart.c: 33:     PIE1bits.TXIE = 0;
  1774   00163E  989D               	bcf	157,4,c	;volatile
  1775   001640                     
  1776                           ;setting_hardaware/uart.c: 34:     IPR1bits.TXIP = 0;
  1777   001640  989F               	bcf	159,4,c	;volatile
  1778   001642                     
  1779                           ;setting_hardaware/uart.c: 35:     PIE1bits.RCIE = 1;
  1780   001642  8A9D               	bsf	157,5,c	;volatile
  1781   001644                     
  1782                           ;setting_hardaware/uart.c: 36:     IPR1bits.RCIP = 1;
  1783   001644  8A9F               	bsf	159,5,c	;volatile
  1784                           
  1785                           ;setting_hardaware/uart.c: 38:     ADCON1 = 0x0f;
  1786   001646  0E0F               	movlw	15
  1787   001648  6EC1               	movwf	193,c	;volatile
  1788   00164A                     
  1789                           ;setting_hardaware/uart.c: 39:     INTCONbits.GIEH = 1;
  1790   00164A  8EF2               	bsf	242,7,c	;volatile
  1791   00164C                     
  1792                           ;setting_hardaware/uart.c: 40:     INTCONbits.GIEL = 1;
  1793   00164C  8CF2               	bsf	242,6,c	;volatile
  1794   00164E                     
  1795                           ;setting_hardaware/uart.c: 41:     INTCONbits.PEIE = 1;
  1796   00164E  8CF2               	bsf	242,6,c	;volatile
  1797   001650                     
  1798                           ;setting_hardaware/uart.c: 42:     RCONbits.IPEN = 1;
  1799   001650  8ED0               	bsf	208,7,c	;volatile
  1800   001652                     
  1801                           ;setting_hardaware/uart.c: 43:     INTCONbits.GIE = 1;
  1802   001652  8EF2               	bsf	242,7,c	;volatile
  1803   001654                     
  1804                           ;setting_hardaware/uart.c: 44:     INTCONbits.INT0IE = 1;
  1805   001654  88F2               	bsf	242,4,c	;volatile
  1806   001656                     
  1807                           ;setting_hardaware/uart.c: 45:     INTCONbits.INT0IF = 0;
  1808   001656  92F2               	bcf	242,1,c	;volatile
  1809   001658                     
  1810                           ;setting_hardaware/uart.c: 47:     PIR1bits.TMR2IF = 0;
  1811   001658  929E               	bcf	158,1,c	;volatile
  1812   00165A                     
  1813                           ;setting_hardaware/uart.c: 48:     IPR1bits.TMR2IP = 1;
  1814   00165A  829F               	bsf	159,1,c	;volatile
  1815   00165C                     
  1816                           ;setting_hardaware/uart.c: 49:     PIE1bits.TMR2IE = 1;
  1817   00165C  829D               	bsf	157,1,c	;volatile
  1818   00165E                     
  1819                           ;setting_hardaware/uart.c: 50:     T2CON = 255;
  1820   00165E  68CA               	setf	202,c	;volatile
  1821                           
  1822                           ;setting_hardaware/uart.c: 52:     PR2 = 244;
  1823   001660  0EF4               	movlw	244
  1824   001662  6ECB               	movwf	203,c	;volatile
  1825   001664                     
  1826                           ;setting_hardaware/uart.c: 54:     TRISAbits.RA0 = 0;
  1827   001664  9092               	bcf	146,0,c	;volatile
  1828   001666                     
  1829                           ;setting_hardaware/uart.c: 55:     TRISAbits.RA1 = 0;
  1830   001666  9292               	bcf	146,1,c	;volatile
  1831   001668                     
  1832                           ;setting_hardaware/uart.c: 56:     TRISAbits.RA2 = 0;
  1833   001668  9492               	bcf	146,2,c	;volatile
  1834   00166A                     
  1835                           ;setting_hardaware/uart.c: 57:     LATA = 0;
  1836   00166A  6A89               	clrf	137,c	;volatile
  1837   00166C                     
  1838                           ;setting_hardaware/uart.c: 58:     TRISCbits.RC0 = 0;
  1839   00166C  9094               	bcf	148,0,c	;volatile
  1840   00166E                     
  1841                           ;setting_hardaware/uart.c: 59:     TRISCbits.RC1 = 0;
  1842   00166E  9294               	bcf	148,1,c	;volatile
  1843   001670                     
  1844                           ;setting_hardaware/uart.c: 60:     TRISCbits.RC2 = 0;
  1845   001670  9494               	bcf	148,2,c	;volatile
  1846   001672                     
  1847                           ;setting_hardaware/uart.c: 61:     LATC = 0;
  1848   001672  6A8B               	clrf	139,c	;volatile
  1849   001674                     
  1850                           ;setting_hardaware/uart.c: 62:     TRISDbits.RD0 = 0;
  1851   001674  9095               	bcf	149,0,c	;volatile
  1852   001676                     
  1853                           ;setting_hardaware/uart.c: 63:     TRISDbits.RD1 = 0;
  1854   001676  9295               	bcf	149,1,c	;volatile
  1855   001678                     
  1856                           ;setting_hardaware/uart.c: 64:     TRISDbits.RD2 = 0;
  1857   001678  9495               	bcf	149,2,c	;volatile
  1858   00167A                     
  1859                           ;setting_hardaware/uart.c: 65:     LATD = 0;
  1860   00167A  6A8C               	clrf	140,c	;volatile
  1861   00167C  0012               	return		;funcret
  1862   00167E                     __end_of_UART_Initialize:
  1863                           	callstack 0
  1864                           
  1865 ;; *************** function _OSCILLATOR_Initialize *****************
  1866 ;; Defined at:
  1867 ;;		line 73 in file "setting_hardaware/setting.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;		None
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;		None
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		None
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1881 ;;      Params:         0       0       0       0       0       0       0
  1882 ;;      Locals:         0       0       0       0       0       0       0
  1883 ;;      Temps:          0       0       0       0       0       0       0
  1884 ;;      Totals:         0       0       0       0       0       0       0
  1885 ;;Total ram usage:        0 bytes
  1886 ;; Hardware stack levels used: 1
  1887 ;; Hardware stack levels required when called: 6
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_SYSTEM_Initialize
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text8
  1896   00186C                     __ptext8:
  1897                           	callstack 0
  1898   00186C                     _OSCILLATOR_Initialize:
  1899                           	callstack 23
  1900   00186C                     
  1901                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
  1902   00186C  8CD3               	bsf	4051,6,c	;volatile
  1903                           
  1904                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
  1905   00186E  8AD3               	bsf	4051,5,c	;volatile
  1906                           
  1907                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
  1908   001870  98D3               	bcf	4051,4,c	;volatile
  1909   001872  0012               	return		;funcret
  1910   001874                     __end_of_OSCILLATOR_Initialize:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _INTERRUPT_Initialize *****************
  1914 ;; Defined at:
  1915 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		None
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1929 ;;      Params:         0       0       0       0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0       0       0
  1931 ;;      Temps:          0       0       0       0       0       0       0
  1932 ;;      Totals:         0       0       0       0       0       0       0
  1933 ;;Total ram usage:        0 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 6
  1936 ;; This function calls:
  1937 ;;		Nothing
  1938 ;; This function is called by:
  1939 ;;		_SYSTEM_Initialize
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text9
  1944   001874                     __ptext9:
  1945                           	callstack 0
  1946   001874                     _INTERRUPT_Initialize:
  1947                           	callstack 23
  1948   001874                     
  1949                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  1950   001874  8ED0               	bsf	208,7,c	;volatile
  1951                           
  1952                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 0;
  1953   001876  9EF2               	bcf	242,7,c	;volatile
  1954                           
  1955                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  1956   001878  8CF2               	bsf	242,6,c	;volatile
  1957   00187A  0012               	return		;funcret
  1958   00187C                     __end_of_INTERRUPT_Initialize:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _ADC_Initialize *****************
  1962 ;; Defined at:
  1963 ;;		line 3 in file "setting_hardaware/adc.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1977 ;;      Params:         0       0       0       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0       0       0
  1980 ;;      Totals:         0       0       0       0       0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used: 1
  1983 ;; Hardware stack levels required when called: 6
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_SYSTEM_Initialize
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text10
  1992   00185A                     __ptext10:
  1993                           	callstack 0
  1994   00185A                     _ADC_Initialize:
  1995                           	callstack 23
  1996   00185A                     
  1997                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  1998   00185A  6892               	setf	146,c	;volatile
  1999   00185C                     
  2000                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
  2001   00185C  0E0E               	movlw	14
  2002   00185E  6EC1               	movwf	193,c	;volatile
  2003   001860                     
  2004                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
  2005   001860  8EC0               	bsf	4032,7,c	;volatile
  2006                           
  2007                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
  2008   001862  0E07               	movlw	7
  2009   001864  12C0               	iorwf	192,f,c	;volatile
  2010   001866                     
  2011                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
  2012   001866  6AC4               	clrf	196,c	;volatile
  2013   001868                     
  2014                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
  2015   001868  6AC3               	clrf	195,c	;volatile
  2016   00186A  0012               	return		;funcret
  2017   00186C                     __end_of_ADC_Initialize:
  2018                           	callstack 0
  2019                           
  2020 ;; *************** function _Lo_ISR *****************
  2021 ;; Defined at:
  2022 ;;		line 113 in file "setting_hardaware/uart.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2036 ;;      Params:         0       0       0       0       0       0       0
  2037 ;;      Locals:         0       0       0       0       0       0       0
  2038 ;;      Temps:          0       5       0       0       0       0       0
  2039 ;;      Totals:         0       5       0       0       0       0       0
  2040 ;;Total ram usage:        5 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 5
  2043 ;; This function calls:
  2044 ;;		_MyusartRead
  2045 ;; This function is called by:
  2046 ;;		Interrupt level 1
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	intcodelo
  2051   000018                     __pintcodelo:
  2052                           	callstack 0
  2053   000018                     _Lo_ISR:
  2054                           	callstack 23
  2055                           
  2056                           ;incstack = 0
  2057   000018  8068               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2058   00001A  CFD8 F083          	movff	status,??_Lo_ISR
  2059   00001E  CFE8 F084          	movff	wreg,??_Lo_ISR+1
  2060   000022  CFE0 F085          	movff	bsr,??_Lo_ISR+2
  2061   000026  CFD9 F086          	movff	fsr2l,??_Lo_ISR+3
  2062   00002A  CFDA F087          	movff	fsr2h,??_Lo_ISR+4
  2063   00002E                     
  2064                           ;setting_hardaware/uart.c: 115:     if(RCIF)
  2065   00002E  AA9E               	btfss	3998,5,c	;volatile
  2066   000030  EF1C  F000         	goto	i1u143_21
  2067   000034  EF1E  F000         	goto	i1u143_20
  2068   000038                     i1u143_21:
  2069   000038  EF2A  F000         	goto	i1l390
  2070   00003C                     i1u143_20:
  2071   00003C                     
  2072                           ;setting_hardaware/uart.c: 116:     {;setting_hardaware/uart.c: 117:         if(RCSTAbit
      +                          s.OERR)
  2073   00003C  A2AB               	btfss	171,1,c	;volatile
  2074   00003E  EF23  F000         	goto	i1u144_21
  2075   000042  EF25  F000         	goto	i1u144_20
  2076   000046                     i1u144_21:
  2077   000046  EF28  F000         	goto	i1l2734
  2078   00004A                     i1u144_20:
  2079   00004A                     
  2080                           ;setting_hardaware/uart.c: 118:         {;setting_hardaware/uart.c: 119:             CRE
      +                          N = 0;
  2081   00004A  98AB               	bcf	4011,4,c	;volatile
  2082                           
  2083                           ;setting_hardaware/uart.c: 120:             __nop();
  2084   00004C  0000               	nop	
  2085                           
  2086                           ;setting_hardaware/uart.c: 121:             CREN = 1;
  2087   00004E  88AB               	bsf	4011,4,c	;volatile
  2088   000050                     i1l2734:
  2089                           
  2090                           ;setting_hardaware/uart.c: 124:         MyusartRead();
  2091   000050  EC7A  F00A         	call	_MyusartRead	;wreg free
  2092   000054                     i1l390:
  2093   000054  C087  FFDA         	movff	??_Lo_ISR+4,fsr2h
  2094   000058  C086  FFD9         	movff	??_Lo_ISR+3,fsr2l
  2095   00005C  C085  FFE0         	movff	??_Lo_ISR+2,bsr
  2096   000060  C084  FFE8         	movff	??_Lo_ISR+1,wreg
  2097   000064  C083  FFD8         	movff	??_Lo_ISR,status
  2098   000068  9068               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2099   00006A  0010               	retfie	
  2100   00006C                     __end_of_Lo_ISR:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function _MyusartRead *****************
  2104 ;; Defined at:
  2105 ;;		line 87 in file "setting_hardaware/uart.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  temp            1    2[BANK0 ] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2119 ;;      Params:         0       0       0       0       0       0       0
  2120 ;;      Locals:         0       1       0       0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0       0
  2122 ;;      Totals:         0       1       0       0       0       0       0
  2123 ;;Total ram usage:        1 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 4
  2126 ;; This function calls:
  2127 ;;		_ClearBuffer
  2128 ;;		i1_UART_Write
  2129 ;; This function is called by:
  2130 ;;		_Lo_ISR
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text12
  2135   0014F4                     __ptext12:
  2136                           	callstack 0
  2137   0014F4                     _MyusartRead:
  2138                           	callstack 23
  2139   0014F4                     
  2140                           ;setting_hardaware/uart.c: 90:     char temp = RCREG;
  2141   0014F4  CFAE F082          	movff	4014,MyusartRead@temp	;volatile
  2142   0014F8                     
  2143                           ;setting_hardaware/uart.c: 91:     if (temp == '\r'){
  2144   0014F8  0E0D               	movlw	13
  2145   0014FA  0100               	movlb	0	; () banked
  2146   0014FC  1982               	xorwf	MyusartRead@temp& (0+255),w,b
  2147   0014FE  A4D8               	btfss	status,2,c
  2148   001500  EF84  F00A         	goto	i1u139_21
  2149   001504  EF86  F00A         	goto	i1u139_20
  2150   001508                     i1u139_21:
  2151   001508  EF90  F00A         	goto	i1l2680
  2152   00150C                     i1u139_20:
  2153   00150C                     
  2154                           ; BSR set to: 0
  2155                           ;setting_hardaware/uart.c: 92:         UART_Write('\n');
  2156   00150C  0E0A               	movlw	10
  2157   00150E  EC04  F00C         	call	i1_UART_Write
  2158                           
  2159                           ;setting_hardaware/uart.c: 93:         UART_Write('\r');
  2160   001512  0E0D               	movlw	13
  2161   001514  EC04  F00C         	call	i1_UART_Write
  2162   001518                     i1l2678:
  2163                           
  2164                           ;setting_hardaware/uart.c: 94:         ClearBuffer();
  2165   001518  EC8B  F00B         	call	_ClearBuffer	;wreg free
  2166                           
  2167                           ;setting_hardaware/uart.c: 95:     }
  2168   00151C  EFAE  F00A         	goto	i1l380
  2169   001520                     i1l2680:
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;setting_hardaware/uart.c: 97:         UART_Write(temp);
  2173   001520  5182               	movf	MyusartRead@temp& (0+255),w,b
  2174   001522  EC04  F00C         	call	i1_UART_Write
  2175   001526                     
  2176                           ;setting_hardaware/uart.c: 98:         if(lenStr < 9) {
  2177   001526  BE08               	btfsc	(_lenStr+1)^0,7,c
  2178   001528  EFA1  F00A         	goto	i1u140_20
  2179   00152C  5008               	movf	(_lenStr+1)^0,w,c
  2180   00152E  E107               	bnz	i1u140_21
  2181   001530  0E09               	movlw	9
  2182   001532  5C07               	subwf	_lenStr^0,w,c
  2183   001534  B0D8               	btfsc	status,0,c
  2184   001536  EF9F  F00A         	goto	i1u140_21
  2185   00153A  EFA1  F00A         	goto	i1u140_20
  2186   00153E                     i1u140_21:
  2187   00153E  EF8C  F00A         	goto	i1l2678
  2188   001542                     i1u140_20:
  2189   001542                     
  2190                           ;setting_hardaware/uart.c: 99:             mystring[lenStr++] = temp;
  2191   001542  5007               	movf	_lenStr^0,w,c
  2192   001544  0F0E               	addlw	low _mystring
  2193   001546  6ED9               	movwf	fsr2l,c
  2194   001548  6ADA               	clrf	fsr2h,c
  2195   00154A  C082  FFDF         	movff	MyusartRead@temp,indf2
  2196   00154E  4A07               	infsnz	_lenStr^0,f,c
  2197   001550  2A08               	incf	(_lenStr+1)^0,f,c
  2198   001552                     
  2199                           ;setting_hardaware/uart.c: 100:             mystring[lenStr] = '\0';
  2200   001552  5007               	movf	_lenStr^0,w,c
  2201   001554  0F0E               	addlw	low _mystring
  2202   001556  6ED9               	movwf	fsr2l,c
  2203   001558  6ADA               	clrf	fsr2h,c
  2204   00155A  6ADF               	clrf	indf2,c
  2205   00155C                     i1l380:
  2206   00155C  0012               	return		;funcret
  2207   00155E                     __end_of_MyusartRead:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function i1_UART_Write *****************
  2211 ;; Defined at:
  2212 ;;		line 69 in file "setting_hardaware/uart.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  data            1    wreg     unsigned char 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  data            1    0[BANK0 ] unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2226 ;;      Params:         0       0       0       0       0       0       0
  2227 ;;      Locals:         0       1       0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0
  2229 ;;      Totals:         0       1       0       0       0       0       0
  2230 ;;Total ram usage:        1 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 3
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_MyusartRead
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text13
  2241   001808                     __ptext13:
  2242                           	callstack 0
  2243   001808                     i1_UART_Write:
  2244                           	callstack 23
  2245                           
  2246                           ;incstack = 0
  2247                           ;i1UART_Write@data stored from wreg
  2248   001808  0100               	movlb	0	; () banked
  2249   00180A  6F80               	movwf	i1UART_Write@data& (0+255),b
  2250   00180C                     i1l359:
  2251   00180C  A2AC               	btfss	172,1,c	;volatile
  2252   00180E  EF0B  F00C         	goto	i1u137_21
  2253   001812  EF0D  F00C         	goto	i1u137_20
  2254   001816                     i1u137_21:
  2255   001816  EF06  F00C         	goto	i1l359
  2256   00181A                     i1u137_20:
  2257   00181A                     
  2258                           ;setting_hardaware/uart.c: 72:     TXREG = data;
  2259   00181A  C080  FFAD         	movff	i1UART_Write@data,4013	;volatile
  2260   00181E  0012               	return		;funcret
  2261   001820                     __end_ofi1_UART_Write:
  2262                           	callstack 0
  2263                           
  2264 ;; *************** function _ClearBuffer *****************
  2265 ;; Defined at:
  2266 ;;		line 81 in file "setting_hardaware/uart.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;		None
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  i               2    0[BANK0 ] int 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2280 ;;      Params:         0       0       0       0       0       0       0
  2281 ;;      Locals:         0       2       0       0       0       0       0
  2282 ;;      Temps:          0       0       0       0       0       0       0
  2283 ;;      Totals:         0       2       0       0       0       0       0
  2284 ;;Total ram usage:        2 bytes
  2285 ;; Hardware stack levels used: 1
  2286 ;; Hardware stack levels required when called: 3
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_MyusartRead
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text14
  2295   001716                     __ptext14:
  2296                           	callstack 0
  2297   001716                     _ClearBuffer:
  2298                           	callstack 23
  2299   001716                     
  2300                           ;setting_hardaware/uart.c: 82:     for(int i = 0; i < 10 ; i++)
  2301   001716  0E00               	movlw	0
  2302   001718  0100               	movlb	0	; () banked
  2303   00171A  6F81               	movwf	(ClearBuffer@i+1)& (0+255),b
  2304   00171C  0E00               	movlw	0
  2305   00171E  6F80               	movwf	ClearBuffer@i& (0+255),b
  2306   001720                     i1l2636:
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;setting_hardaware/uart.c: 83:         mystring[i] = '\0';
  2310   001720  5180               	movf	ClearBuffer@i& (0+255),w,b
  2311   001722  0F0E               	addlw	low _mystring
  2312   001724  6ED9               	movwf	fsr2l,c
  2313   001726  6ADA               	clrf	fsr2h,c
  2314   001728  6ADF               	clrf	indf2,c
  2315   00172A                     
  2316                           ; BSR set to: 0
  2317   00172A  4B80               	infsnz	ClearBuffer@i& (0+255),f,b
  2318   00172C  2B81               	incf	(ClearBuffer@i+1)& (0+255),f,b
  2319   00172E                     
  2320                           ; BSR set to: 0
  2321   00172E  BF81               	btfsc	(ClearBuffer@i+1)& (0+255),7,b
  2322   001730  EFA3  F00B         	goto	i1u135_21
  2323   001734  5181               	movf	(ClearBuffer@i+1)& (0+255),w,b
  2324   001736  E109               	bnz	i1u135_20
  2325   001738  0E0A               	movlw	10
  2326   00173A  5D80               	subwf	ClearBuffer@i& (0+255),w,b
  2327   00173C  A0D8               	btfss	status,0,c
  2328   00173E  EFA3  F00B         	goto	i1u135_21
  2329   001742  EFA5  F00B         	goto	i1u135_20
  2330   001746                     i1u135_21:
  2331   001746  EF90  F00B         	goto	i1l2636
  2332   00174A                     i1u135_20:
  2333   00174A                     
  2334                           ; BSR set to: 0
  2335                           ;setting_hardaware/uart.c: 84:     lenStr = 0;
  2336   00174A  0E00               	movlw	0
  2337   00174C  6E08               	movwf	(_lenStr+1)^0,c
  2338   00174E  0E00               	movlw	0
  2339   001750  6E07               	movwf	_lenStr^0,c
  2340   001752                     
  2341                           ; BSR set to: 0
  2342   001752  0012               	return		;funcret
  2343   001754                     __end_of_ClearBuffer:
  2344                           	callstack 0
  2345                           
  2346 ;; *************** function _Hi_ISR *****************
  2347 ;; Defined at:
  2348 ;;		line 79 in file "main.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  position        2   36[COMRAM] int 
  2353 ;;  ch              1   35[COMRAM] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2363 ;;      Params:         0       0       0       0       0       0       0
  2364 ;;      Locals:         3       0       0       0       0       0       0
  2365 ;;      Temps:         12       0       0       0       0       0       0
  2366 ;;      Totals:        15       0       0       0       0       0       0
  2367 ;;Total ram usage:       15 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; Hardware stack levels required when called: 2
  2370 ;; This function calls:
  2371 ;;		_GetString
  2372 ;;		_JUDGE
  2373 ;;		_strcpy
  2374 ;;		i2_MyusartRead
  2375 ;;		i2_UART_Write_Text
  2376 ;; This function is called by:
  2377 ;;		Interrupt level 2
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	intcode
  2382   000008                     __pintcode:
  2383                           	callstack 0
  2384   000008                     _Hi_ISR:
  2385                           	callstack 23
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;incstack = 0
  2389   000008  8268               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2390   00000A  ED20  F003         	call	int_func,f	;refresh shadow registers
  2391                           
  2392                           	psect	intcode_body
  2393   000640                     __pintcode_body:
  2394                           	callstack 23
  2395   000640                     int_func:
  2396                           	callstack 23
  2397   000640  0006               	pop		; remove dummy address from shadow register refresh
  2398   000642  CFE1 F05B          	movff	fsr1l,??_Hi_ISR+2
  2399   000646  CFE2 F05C          	movff	fsr1h,??_Hi_ISR+3
  2400   00064A  CFD9 F05D          	movff	fsr2l,??_Hi_ISR+4
  2401   00064E  CFDA F05E          	movff	fsr2h,??_Hi_ISR+5
  2402   000652  CFF3 F05F          	movff	prodl,??_Hi_ISR+6
  2403   000656  CFF4 F060          	movff	prodh,??_Hi_ISR+7
  2404   00065A  CFF6 F061          	movff	tblptrl,??_Hi_ISR+8
  2405   00065E  CFF7 F062          	movff	tblptrh,??_Hi_ISR+9
  2406   000662  CFF8 F063          	movff	tblptru,??_Hi_ISR+10
  2407   000666  CFF5 F064          	movff	tablat,??_Hi_ISR+11
  2408   00066A                     
  2409                           ;main.c: 81:     if (RCIF){
  2410   00066A  AA9E               	btfss	3998,5,c	;volatile
  2411   00066C  EF3A  F003         	goto	i2u112_41
  2412   000670  EF3C  F003         	goto	i2u112_40
  2413   000674                     i2u112_41:
  2414   000674  EF74  F007         	goto	i2l2372
  2415   000678                     i2u112_40:
  2416   000678                     
  2417                           ;main.c: 82:         strcpy(str, GetString());
  2418   000678  0E22               	movlw	low _str
  2419   00067A  6E44               	movwf	strcpy@dest^0,c
  2420   00067C  EC41  F00C         	call	_GetString	;wreg free
  2421   000680  6E45               	movwf	strcpy@src^0,c
  2422   000682  ECC8  F00B         	call	_strcpy	;wreg free
  2423   000686                     
  2424                           ;main.c: 83:         MyusartRead();
  2425   000686  ECAF  F00A         	call	i2_MyusartRead	;wreg free
  2426   00068A                     
  2427                           ;main.c: 84:         char ch = RCREG;
  2428   00068A  CFAE F065          	movff	4014,Hi_ISR@ch	;volatile
  2429   00068E                     
  2430                           ;main.c: 85:         if (ch == '\r'){
  2431   00068E  0E0D               	movlw	13
  2432   000690  1865               	xorwf	Hi_ISR@ch^0,w,c
  2433   000692  A4D8               	btfss	status,2,c
  2434   000694  EF4E  F003         	goto	i2u113_41
  2435   000698  EF50  F003         	goto	i2u113_40
  2436   00069C                     i2u113_41:
  2437   00069C  EF74  F007         	goto	i2l2372
  2438   0006A0                     i2u113_40:
  2439   0006A0                     
  2440                           ;main.c: 86:             int position = ((int)str[0])-48;
  2441   0006A0  0ED0               	movlw	208
  2442   0006A2  2422               	addwf	_str^0,w,c
  2443   0006A4  6E66               	movwf	Hi_ISR@position^0,c
  2444   0006A6  6A67               	clrf	(Hi_ISR@position+1)^0,c
  2445   0006A8  0EFF               	movlw	255
  2446   0006AA  2267               	addwfc	(Hi_ISR@position+1)^0,f,c
  2447                           
  2448                           ;main.c: 88:             if (turn == 0){
  2449   0006AC  500B               	movf	_turn^0,w,c
  2450   0006AE  100C               	iorwf	(_turn+1)^0,w,c
  2451   0006B0  A4D8               	btfss	status,2,c
  2452   0006B2  EF5D  F003         	goto	i2u114_41
  2453   0006B6  EF5F  F003         	goto	i2u114_40
  2454   0006BA                     i2u114_41:
  2455   0006BA  EF27  F005         	goto	i2l2240
  2456   0006BE                     i2u114_40:
  2457   0006BE                     
  2458                           ;main.c: 89:                 if (player_a[2] != 0){
  2459   0006BE  5040               	movf	(_player_a+4)^0,w,c
  2460   0006C0  1041               	iorwf	(_player_a+5)^0,w,c
  2461   0006C2  B4D8               	btfsc	status,2,c
  2462   0006C4  EF66  F003         	goto	i2u115_41
  2463   0006C8  EF68  F003         	goto	i2u115_40
  2464   0006CC                     i2u115_41:
  2465   0006CC  EFD7  F003         	goto	i2l2162
  2466   0006D0                     i2u115_40:
  2467   0006D0  EF97  F003         	goto	i2l2160
  2468   0006D4                     i2l2140:
  2469                           
  2470                           ;main.c: 92:                             LATD = LATD & 254;
  2471   0006D4  508C               	movf	140,w,c	;volatile
  2472   0006D6  0BFE               	andlw	254
  2473   0006D8  6E8C               	movwf	140,c	;volatile
  2474                           
  2475                           ;main.c: 93:                             break;
  2476   0006DA  EFC9  F003         	goto	i2l96
  2477   0006DE                     i2l2142:
  2478                           
  2479                           ;main.c: 95:                             LATD = LATD & 253;
  2480   0006DE  508C               	movf	140,w,c	;volatile
  2481   0006E0  0BFD               	andlw	253
  2482   0006E2  6E8C               	movwf	140,c	;volatile
  2483                           
  2484                           ;main.c: 96:                             break;
  2485   0006E4  EFC9  F003         	goto	i2l96
  2486   0006E8                     i2l2144:
  2487                           
  2488                           ;main.c: 98:                             LATD = LATD & 251;
  2489   0006E8  508C               	movf	140,w,c	;volatile
  2490   0006EA  0BFB               	andlw	251
  2491   0006EC  6E8C               	movwf	140,c	;volatile
  2492                           
  2493                           ;main.c: 99:                             break;
  2494   0006EE  EFC9  F003         	goto	i2l96
  2495   0006F2                     i2l2146:
  2496                           
  2497                           ;main.c: 101:                             LATC = LATC & 254;
  2498   0006F2  508B               	movf	139,w,c	;volatile
  2499   0006F4  0BFE               	andlw	254
  2500   0006F6  6E8B               	movwf	139,c	;volatile
  2501                           
  2502                           ;main.c: 102:                             break;
  2503   0006F8  EFC9  F003         	goto	i2l96
  2504   0006FC                     i2l2148:
  2505                           
  2506                           ;main.c: 104:                             LATC = LATC & 253;
  2507   0006FC  508B               	movf	139,w,c	;volatile
  2508   0006FE  0BFD               	andlw	253
  2509   000700  6E8B               	movwf	139,c	;volatile
  2510                           
  2511                           ;main.c: 105:                             break;
  2512   000702  EFC9  F003         	goto	i2l96
  2513   000706                     i2l2150:
  2514                           
  2515                           ;main.c: 107:                             LATC = LATC & 251;
  2516   000706  508B               	movf	139,w,c	;volatile
  2517   000708  0BFB               	andlw	251
  2518   00070A  6E8B               	movwf	139,c	;volatile
  2519                           
  2520                           ;main.c: 108:                             break;
  2521   00070C  EFC9  F003         	goto	i2l96
  2522   000710                     i2l2152:
  2523                           
  2524                           ;main.c: 110:                             LATA = LATA & 254;
  2525   000710  5089               	movf	137,w,c	;volatile
  2526   000712  0BFE               	andlw	254
  2527   000714  6E89               	movwf	137,c	;volatile
  2528                           
  2529                           ;main.c: 111:                             break;
  2530   000716  EFC9  F003         	goto	i2l96
  2531   00071A                     i2l2154:
  2532                           
  2533                           ;main.c: 113:                             LATA = LATA & 253;
  2534   00071A  5089               	movf	137,w,c	;volatile
  2535   00071C  0BFD               	andlw	253
  2536   00071E  6E89               	movwf	137,c	;volatile
  2537                           
  2538                           ;main.c: 114:                             break;
  2539   000720  EFC9  F003         	goto	i2l96
  2540   000724                     i2l2156:
  2541                           
  2542                           ;main.c: 116:                             LATA = LATA & 251;
  2543   000724  5089               	movf	137,w,c	;volatile
  2544   000726  0BFB               	andlw	251
  2545   000728  6E89               	movwf	137,c	;volatile
  2546                           
  2547                           ;main.c: 117:                             break;
  2548   00072A  EFC9  F003         	goto	i2l96
  2549   00072E                     i2l2160:
  2550   00072E  C03C  F059         	movff	_player_a,??_Hi_ISR
  2551   000732  C03D  F05A         	movff	_player_a+1,??_Hi_ISR+1
  2552                           
  2553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2554                           ; Switch size 1, requested type "simple"
  2555                           ; Number of cases is 1, Range of values is 0 to 0
  2556                           ; switch strategies available:
  2557                           ; Name         Instructions Cycles
  2558                           ; simple_byte            4     3 (average)
  2559                           ;	Chosen strategy is simple_byte
  2560   000736  505A               	movf	(??_Hi_ISR+1)^0,w,c
  2561   000738  0A00               	xorlw	0	; case 0
  2562   00073A  B4D8               	btfsc	status,2,c
  2563   00073C  EFA2  F003         	goto	i2l2958
  2564   000740  EFC9  F003         	goto	i2l96
  2565   000744                     i2l2958:
  2566                           
  2567                           ; Switch size 1, requested type "simple"
  2568                           ; Number of cases is 9, Range of values is 1 to 9
  2569                           ; switch strategies available:
  2570                           ; Name         Instructions Cycles
  2571                           ; simple_byte           28    15 (average)
  2572                           ;	Chosen strategy is simple_byte
  2573   000744  5059               	movf	??_Hi_ISR^0,w,c
  2574   000746  0A01               	xorlw	1	; case 1
  2575   000748  B4D8               	btfsc	status,2,c
  2576   00074A  EF6A  F003         	goto	i2l2140
  2577   00074E  0A03               	xorlw	3	; case 2
  2578   000750  B4D8               	btfsc	status,2,c
  2579   000752  EF6F  F003         	goto	i2l2142
  2580   000756  0A01               	xorlw	1	; case 3
  2581   000758  B4D8               	btfsc	status,2,c
  2582   00075A  EF74  F003         	goto	i2l2144
  2583   00075E  0A07               	xorlw	7	; case 4
  2584   000760  B4D8               	btfsc	status,2,c
  2585   000762  EF79  F003         	goto	i2l2146
  2586   000766  0A01               	xorlw	1	; case 5
  2587   000768  B4D8               	btfsc	status,2,c
  2588   00076A  EF7E  F003         	goto	i2l2148
  2589   00076E  0A03               	xorlw	3	; case 6
  2590   000770  B4D8               	btfsc	status,2,c
  2591   000772  EF83  F003         	goto	i2l2150
  2592   000776  0A01               	xorlw	1	; case 7
  2593   000778  B4D8               	btfsc	status,2,c
  2594   00077A  EF88  F003         	goto	i2l2152
  2595   00077E  0A0F               	xorlw	15	; case 8
  2596   000780  B4D8               	btfsc	status,2,c
  2597   000782  EF8D  F003         	goto	i2l2154
  2598   000786  0A01               	xorlw	1	; case 9
  2599   000788  B4D8               	btfsc	status,2,c
  2600   00078A  EF92  F003         	goto	i2l2156
  2601   00078E  EFC9  F003         	goto	i2l96
  2602   000792                     i2l96:
  2603                           
  2604                           ;main.c: 119:                     player_a[0] = player_a[1];
  2605   000792  C03E  F03C         	movff	_player_a+2,_player_a
  2606   000796  C03F  F03D         	movff	_player_a+3,_player_a+1
  2607                           
  2608                           ;main.c: 120:                     player_a[1] = player_a[2];
  2609   00079A  C040  F03E         	movff	_player_a+4,_player_a+2
  2610   00079E  C041  F03F         	movff	_player_a+5,_player_a+3
  2611                           
  2612                           ;main.c: 121:                     player_a[2] = position;
  2613   0007A2  C066  F040         	movff	Hi_ISR@position,_player_a+4
  2614   0007A6  C067  F041         	movff	Hi_ISR@position+1,_player_a+5
  2615                           
  2616                           ;main.c: 123:                 }
  2617   0007AA  EF33  F004         	goto	i2l2194
  2618   0007AE                     i2l2162:
  2619                           
  2620                           ;main.c: 125:                     if (player_a[0] == 0) player_a[0] = position;
  2621   0007AE  503C               	movf	_player_a^0,w,c
  2622   0007B0  103D               	iorwf	(_player_a+1)^0,w,c
  2623   0007B2  A4D8               	btfss	status,2,c
  2624   0007B4  EFDE  F003         	goto	i2u116_41
  2625   0007B8  EFE0  F003         	goto	i2u116_40
  2626   0007BC                     i2u116_41:
  2627   0007BC  EFE6  F003         	goto	i2l2166
  2628   0007C0                     i2u116_40:
  2629   0007C0  C066  F03C         	movff	Hi_ISR@position,_player_a
  2630   0007C4  C067  F03D         	movff	Hi_ISR@position+1,_player_a+1
  2631   0007C8  EF33  F004         	goto	i2l2194
  2632   0007CC                     i2l2166:
  2633   0007CC  503E               	movf	(_player_a+2)^0,w,c
  2634   0007CE  103F               	iorwf	(_player_a+3)^0,w,c
  2635   0007D0  A4D8               	btfss	status,2,c
  2636   0007D2  EFED  F003         	goto	i2u117_41
  2637   0007D6  EFEF  F003         	goto	i2u117_40
  2638   0007DA                     i2u117_41:
  2639   0007DA  EFF5  F003         	goto	i2l2170
  2640   0007DE                     i2u117_40:
  2641   0007DE  C066  F03E         	movff	Hi_ISR@position,_player_a+2
  2642   0007E2  C067  F03F         	movff	Hi_ISR@position+1,_player_a+3
  2643   0007E6  EF33  F004         	goto	i2l2194
  2644   0007EA                     i2l2170:
  2645   0007EA  5040               	movf	(_player_a+4)^0,w,c
  2646   0007EC  1041               	iorwf	(_player_a+5)^0,w,c
  2647   0007EE  A4D8               	btfss	status,2,c
  2648   0007F0  EFFC  F003         	goto	i2u118_41
  2649   0007F4  EFFE  F003         	goto	i2u118_40
  2650   0007F8                     i2u118_41:
  2651   0007F8  EF04  F004         	goto	i2l105
  2652   0007FC                     i2u118_40:
  2653   0007FC  C066  F040         	movff	Hi_ISR@position,_player_a+4
  2654   000800  C067  F041         	movff	Hi_ISR@position+1,_player_a+5
  2655   000804  EF33  F004         	goto	i2l2194
  2656   000808                     i2l105:
  2657                           
  2658                           ;main.c: 129:                 switch(player_a[0]){
  2659   000808  EF33  F004         	goto	i2l2194
  2660   00080C                     i2l2174:
  2661                           
  2662                           ;main.c: 131:                             LATD = LATD | 1;
  2663   00080C  508C               	movf	140,w,c	;volatile
  2664   00080E  0901               	iorlw	1
  2665   000810  6E8C               	movwf	140,c	;volatile
  2666                           
  2667                           ;main.c: 132:                             break;
  2668   000812  EF92  F004         	goto	i2l2216
  2669   000816                     i2l2176:
  2670                           
  2671                           ;main.c: 134:                             LATD = LATD | 2;
  2672   000816  508C               	movf	140,w,c	;volatile
  2673   000818  0902               	iorlw	2
  2674   00081A  6E8C               	movwf	140,c	;volatile
  2675                           
  2676                           ;main.c: 135:                             break;
  2677   00081C  EF92  F004         	goto	i2l2216
  2678   000820                     i2l2178:
  2679                           
  2680                           ;main.c: 137:                             LATD = LATD | 4;
  2681   000820  508C               	movf	140,w,c	;volatile
  2682   000822  0904               	iorlw	4
  2683   000824  6E8C               	movwf	140,c	;volatile
  2684                           
  2685                           ;main.c: 138:                             break;
  2686   000826  EF92  F004         	goto	i2l2216
  2687   00082A                     i2l2180:
  2688                           
  2689                           ;main.c: 140:                             LATC = LATC | 1;
  2690   00082A  508B               	movf	139,w,c	;volatile
  2691   00082C  0901               	iorlw	1
  2692   00082E  6E8B               	movwf	139,c	;volatile
  2693                           
  2694                           ;main.c: 141:                             break;
  2695   000830  EF92  F004         	goto	i2l2216
  2696   000834                     i2l2182:
  2697                           
  2698                           ;main.c: 143:                             LATC = LATC | 2;
  2699   000834  508B               	movf	139,w,c	;volatile
  2700   000836  0902               	iorlw	2
  2701   000838  6E8B               	movwf	139,c	;volatile
  2702                           
  2703                           ;main.c: 144:                             break;
  2704   00083A  EF92  F004         	goto	i2l2216
  2705   00083E                     i2l2184:
  2706                           
  2707                           ;main.c: 146:                             LATC = LATC | 4;
  2708   00083E  508B               	movf	139,w,c	;volatile
  2709   000840  0904               	iorlw	4
  2710   000842  6E8B               	movwf	139,c	;volatile
  2711                           
  2712                           ;main.c: 147:                             break;
  2713   000844  EF92  F004         	goto	i2l2216
  2714   000848                     i2l2186:
  2715                           
  2716                           ;main.c: 149:                             LATA = LATA | 1;
  2717   000848  5089               	movf	137,w,c	;volatile
  2718   00084A  0901               	iorlw	1
  2719   00084C  6E89               	movwf	137,c	;volatile
  2720                           
  2721                           ;main.c: 150:                             break;
  2722   00084E  EF92  F004         	goto	i2l2216
  2723   000852                     i2l2188:
  2724                           
  2725                           ;main.c: 152:                             LATA = LATA | 2;
  2726   000852  5089               	movf	137,w,c	;volatile
  2727   000854  0902               	iorlw	2
  2728   000856  6E89               	movwf	137,c	;volatile
  2729                           
  2730                           ;main.c: 153:                             break;
  2731   000858  EF92  F004         	goto	i2l2216
  2732   00085C                     i2l2190:
  2733                           
  2734                           ;main.c: 155:                             LATA = LATA | 4;
  2735   00085C  5089               	movf	137,w,c	;volatile
  2736   00085E  0904               	iorlw	4
  2737   000860  6E89               	movwf	137,c	;volatile
  2738                           
  2739                           ;main.c: 156:                             break;
  2740   000862  EF92  F004         	goto	i2l2216
  2741   000866                     i2l2194:
  2742   000866  C03C  F059         	movff	_player_a,??_Hi_ISR
  2743   00086A  C03D  F05A         	movff	_player_a+1,??_Hi_ISR+1
  2744                           
  2745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2746                           ; Switch size 1, requested type "simple"
  2747                           ; Number of cases is 1, Range of values is 0 to 0
  2748                           ; switch strategies available:
  2749                           ; Name         Instructions Cycles
  2750                           ; simple_byte            4     3 (average)
  2751                           ;	Chosen strategy is simple_byte
  2752   00086E  505A               	movf	(??_Hi_ISR+1)^0,w,c
  2753   000870  0A00               	xorlw	0	; case 0
  2754   000872  B4D8               	btfsc	status,2,c
  2755   000874  EF3E  F004         	goto	i2l2960
  2756   000878  EF92  F004         	goto	i2l2216
  2757   00087C                     i2l2960:
  2758                           
  2759                           ; Switch size 1, requested type "simple"
  2760                           ; Number of cases is 9, Range of values is 1 to 9
  2761                           ; switch strategies available:
  2762                           ; Name         Instructions Cycles
  2763                           ; simple_byte           28    15 (average)
  2764                           ;	Chosen strategy is simple_byte
  2765   00087C  5059               	movf	??_Hi_ISR^0,w,c
  2766   00087E  0A01               	xorlw	1	; case 1
  2767   000880  B4D8               	btfsc	status,2,c
  2768   000882  EF06  F004         	goto	i2l2174
  2769   000886  0A03               	xorlw	3	; case 2
  2770   000888  B4D8               	btfsc	status,2,c
  2771   00088A  EF0B  F004         	goto	i2l2176
  2772   00088E  0A01               	xorlw	1	; case 3
  2773   000890  B4D8               	btfsc	status,2,c
  2774   000892  EF10  F004         	goto	i2l2178
  2775   000896  0A07               	xorlw	7	; case 4
  2776   000898  B4D8               	btfsc	status,2,c
  2777   00089A  EF15  F004         	goto	i2l2180
  2778   00089E  0A01               	xorlw	1	; case 5
  2779   0008A0  B4D8               	btfsc	status,2,c
  2780   0008A2  EF1A  F004         	goto	i2l2182
  2781   0008A6  0A03               	xorlw	3	; case 6
  2782   0008A8  B4D8               	btfsc	status,2,c
  2783   0008AA  EF1F  F004         	goto	i2l2184
  2784   0008AE  0A01               	xorlw	1	; case 7
  2785   0008B0  B4D8               	btfsc	status,2,c
  2786   0008B2  EF24  F004         	goto	i2l2186
  2787   0008B6  0A0F               	xorlw	15	; case 8
  2788   0008B8  B4D8               	btfsc	status,2,c
  2789   0008BA  EF29  F004         	goto	i2l2188
  2790   0008BE  0A01               	xorlw	1	; case 9
  2791   0008C0  B4D8               	btfsc	status,2,c
  2792   0008C2  EF2E  F004         	goto	i2l2190
  2793   0008C6  EF92  F004         	goto	i2l2216
  2794   0008CA                     i2l2196:
  2795                           
  2796                           ;main.c: 160:                             LATD = LATD | 1;
  2797   0008CA  508C               	movf	140,w,c	;volatile
  2798   0008CC  0901               	iorlw	1
  2799   0008CE  6E8C               	movwf	140,c	;volatile
  2800                           
  2801                           ;main.c: 161:                             break;
  2802   0008D0  EFF3  F004         	goto	i2l2238
  2803   0008D4                     i2l2198:
  2804                           
  2805                           ;main.c: 163:                             LATD = LATD | 2;
  2806   0008D4  508C               	movf	140,w,c	;volatile
  2807   0008D6  0902               	iorlw	2
  2808   0008D8  6E8C               	movwf	140,c	;volatile
  2809                           
  2810                           ;main.c: 164:                             break;
  2811   0008DA  EFF3  F004         	goto	i2l2238
  2812   0008DE                     i2l2200:
  2813                           
  2814                           ;main.c: 166:                             LATD = LATD | 4;
  2815   0008DE  508C               	movf	140,w,c	;volatile
  2816   0008E0  0904               	iorlw	4
  2817   0008E2  6E8C               	movwf	140,c	;volatile
  2818                           
  2819                           ;main.c: 167:                             break;
  2820   0008E4  EFF3  F004         	goto	i2l2238
  2821   0008E8                     i2l2202:
  2822                           
  2823                           ;main.c: 169:                             LATC = LATC | 1;
  2824   0008E8  508B               	movf	139,w,c	;volatile
  2825   0008EA  0901               	iorlw	1
  2826   0008EC  6E8B               	movwf	139,c	;volatile
  2827                           
  2828                           ;main.c: 170:                             break;
  2829   0008EE  EFF3  F004         	goto	i2l2238
  2830   0008F2                     i2l2204:
  2831                           
  2832                           ;main.c: 172:                             LATC = LATC | 2;
  2833   0008F2  508B               	movf	139,w,c	;volatile
  2834   0008F4  0902               	iorlw	2
  2835   0008F6  6E8B               	movwf	139,c	;volatile
  2836                           
  2837                           ;main.c: 173:                             break;
  2838   0008F8  EFF3  F004         	goto	i2l2238
  2839   0008FC                     i2l2206:
  2840                           
  2841                           ;main.c: 175:                             LATC = LATC | 4;
  2842   0008FC  508B               	movf	139,w,c	;volatile
  2843   0008FE  0904               	iorlw	4
  2844   000900  6E8B               	movwf	139,c	;volatile
  2845                           
  2846                           ;main.c: 176:                             break;
  2847   000902  EFF3  F004         	goto	i2l2238
  2848   000906                     i2l2208:
  2849                           
  2850                           ;main.c: 178:                             LATA = LATA | 1;
  2851   000906  5089               	movf	137,w,c	;volatile
  2852   000908  0901               	iorlw	1
  2853   00090A  6E89               	movwf	137,c	;volatile
  2854                           
  2855                           ;main.c: 179:                             break;
  2856   00090C  EFF3  F004         	goto	i2l2238
  2857   000910                     i2l2210:
  2858                           
  2859                           ;main.c: 181:                             LATA = LATA | 2;
  2860   000910  5089               	movf	137,w,c	;volatile
  2861   000912  0902               	iorlw	2
  2862   000914  6E89               	movwf	137,c	;volatile
  2863                           
  2864                           ;main.c: 182:                             break;
  2865   000916  EFF3  F004         	goto	i2l2238
  2866   00091A                     i2l2212:
  2867                           
  2868                           ;main.c: 184:                             LATA = LATA | 4;
  2869   00091A  5089               	movf	137,w,c	;volatile
  2870   00091C  0904               	iorlw	4
  2871   00091E  6E89               	movwf	137,c	;volatile
  2872                           
  2873                           ;main.c: 185:                             break;
  2874   000920  EFF3  F004         	goto	i2l2238
  2875   000924                     i2l2216:
  2876   000924  EE20  F03E         	lfsr	2,_player_a+2
  2877   000928  CFDE F059          	movff	postinc2,??_Hi_ISR
  2878   00092C  CFDD F05A          	movff	postdec2,??_Hi_ISR+1
  2879                           
  2880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2881                           ; Switch size 1, requested type "simple"
  2882                           ; Number of cases is 1, Range of values is 0 to 0
  2883                           ; switch strategies available:
  2884                           ; Name         Instructions Cycles
  2885                           ; simple_byte            4     3 (average)
  2886                           ;	Chosen strategy is simple_byte
  2887   000930  505A               	movf	(??_Hi_ISR+1)^0,w,c
  2888   000932  0A00               	xorlw	0	; case 0
  2889   000934  B4D8               	btfsc	status,2,c
  2890   000936  EF9F  F004         	goto	i2l2962
  2891   00093A  EFF3  F004         	goto	i2l2238
  2892   00093E                     i2l2962:
  2893                           
  2894                           ; Switch size 1, requested type "simple"
  2895                           ; Number of cases is 9, Range of values is 1 to 9
  2896                           ; switch strategies available:
  2897                           ; Name         Instructions Cycles
  2898                           ; simple_byte           28    15 (average)
  2899                           ;	Chosen strategy is simple_byte
  2900   00093E  5059               	movf	??_Hi_ISR^0,w,c
  2901   000940  0A01               	xorlw	1	; case 1
  2902   000942  B4D8               	btfsc	status,2,c
  2903   000944  EF65  F004         	goto	i2l2196
  2904   000948  0A03               	xorlw	3	; case 2
  2905   00094A  B4D8               	btfsc	status,2,c
  2906   00094C  EF6A  F004         	goto	i2l2198
  2907   000950  0A01               	xorlw	1	; case 3
  2908   000952  B4D8               	btfsc	status,2,c
  2909   000954  EF6F  F004         	goto	i2l2200
  2910   000958  0A07               	xorlw	7	; case 4
  2911   00095A  B4D8               	btfsc	status,2,c
  2912   00095C  EF74  F004         	goto	i2l2202
  2913   000960  0A01               	xorlw	1	; case 5
  2914   000962  B4D8               	btfsc	status,2,c
  2915   000964  EF79  F004         	goto	i2l2204
  2916   000968  0A03               	xorlw	3	; case 6
  2917   00096A  B4D8               	btfsc	status,2,c
  2918   00096C  EF7E  F004         	goto	i2l2206
  2919   000970  0A01               	xorlw	1	; case 7
  2920   000972  B4D8               	btfsc	status,2,c
  2921   000974  EF83  F004         	goto	i2l2208
  2922   000978  0A0F               	xorlw	15	; case 8
  2923   00097A  B4D8               	btfsc	status,2,c
  2924   00097C  EF88  F004         	goto	i2l2210
  2925   000980  0A01               	xorlw	1	; case 9
  2926   000982  B4D8               	btfsc	status,2,c
  2927   000984  EF8D  F004         	goto	i2l2212
  2928   000988  EFF3  F004         	goto	i2l2238
  2929   00098C                     i2l2218:
  2930                           
  2931                           ;main.c: 189:                             LATD = LATD | 1;
  2932   00098C  508C               	movf	140,w,c	;volatile
  2933   00098E  0901               	iorlw	1
  2934   000990  6E8C               	movwf	140,c	;volatile
  2935                           
  2936                           ;main.c: 190:                             break;
  2937   000992  EFF8  F006         	goto	i2l2346
  2938   000996                     i2l2220:
  2939                           
  2940                           ;main.c: 192:                             LATD = LATD | 2;
  2941   000996  508C               	movf	140,w,c	;volatile
  2942   000998  0902               	iorlw	2
  2943   00099A  6E8C               	movwf	140,c	;volatile
  2944                           
  2945                           ;main.c: 193:                             break;
  2946   00099C  EFF8  F006         	goto	i2l2346
  2947   0009A0                     i2l2222:
  2948                           
  2949                           ;main.c: 195:                             LATD = LATD | 4;
  2950   0009A0  508C               	movf	140,w,c	;volatile
  2951   0009A2  0904               	iorlw	4
  2952   0009A4  6E8C               	movwf	140,c	;volatile
  2953                           
  2954                           ;main.c: 196:                             break;
  2955   0009A6  EFF8  F006         	goto	i2l2346
  2956   0009AA                     i2l2224:
  2957                           
  2958                           ;main.c: 198:                             LATC = LATC | 1;
  2959   0009AA  508B               	movf	139,w,c	;volatile
  2960   0009AC  0901               	iorlw	1
  2961   0009AE  6E8B               	movwf	139,c	;volatile
  2962                           
  2963                           ;main.c: 199:                             break;
  2964   0009B0  EFF8  F006         	goto	i2l2346
  2965   0009B4                     i2l2226:
  2966                           
  2967                           ;main.c: 201:                             LATC = LATC | 2;
  2968   0009B4  508B               	movf	139,w,c	;volatile
  2969   0009B6  0902               	iorlw	2
  2970   0009B8  6E8B               	movwf	139,c	;volatile
  2971                           
  2972                           ;main.c: 202:                             break;
  2973   0009BA  EFF8  F006         	goto	i2l2346
  2974   0009BE                     i2l2228:
  2975                           
  2976                           ;main.c: 204:                             LATC = LATC | 4;
  2977   0009BE  508B               	movf	139,w,c	;volatile
  2978   0009C0  0904               	iorlw	4
  2979   0009C2  6E8B               	movwf	139,c	;volatile
  2980                           
  2981                           ;main.c: 205:                             break;
  2982   0009C4  EFF8  F006         	goto	i2l2346
  2983   0009C8                     i2l2230:
  2984                           
  2985                           ;main.c: 207:                             LATA = LATA | 1;
  2986   0009C8  5089               	movf	137,w,c	;volatile
  2987   0009CA  0901               	iorlw	1
  2988   0009CC  6E89               	movwf	137,c	;volatile
  2989                           
  2990                           ;main.c: 208:                             break;
  2991   0009CE  EFF8  F006         	goto	i2l2346
  2992   0009D2                     i2l2232:
  2993                           
  2994                           ;main.c: 210:                             LATA = LATA | 2;
  2995   0009D2  5089               	movf	137,w,c	;volatile
  2996   0009D4  0902               	iorlw	2
  2997   0009D6  6E89               	movwf	137,c	;volatile
  2998                           
  2999                           ;main.c: 211:                             break;
  3000   0009D8  EFF8  F006         	goto	i2l2346
  3001   0009DC                     i2l2234:
  3002                           
  3003                           ;main.c: 213:                             LATA = LATA | 4;
  3004   0009DC  5089               	movf	137,w,c	;volatile
  3005   0009DE  0904               	iorlw	4
  3006   0009E0  6E89               	movwf	137,c	;volatile
  3007                           
  3008                           ;main.c: 214:                             break;
  3009   0009E2  EFF8  F006         	goto	i2l2346
  3010   0009E6                     i2l2238:
  3011   0009E6  EE20  F040         	lfsr	2,_player_a+4
  3012   0009EA  CFDE F059          	movff	postinc2,??_Hi_ISR
  3013   0009EE  CFDD F05A          	movff	postdec2,??_Hi_ISR+1
  3014                           
  3015                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3016                           ; Switch size 1, requested type "simple"
  3017                           ; Number of cases is 1, Range of values is 0 to 0
  3018                           ; switch strategies available:
  3019                           ; Name         Instructions Cycles
  3020                           ; simple_byte            4     3 (average)
  3021                           ;	Chosen strategy is simple_byte
  3022   0009F2  505A               	movf	(??_Hi_ISR+1)^0,w,c
  3023   0009F4  0A00               	xorlw	0	; case 0
  3024   0009F6  B4D8               	btfsc	status,2,c
  3025   0009F8  EF00  F005         	goto	i2l2964
  3026   0009FC  EFF8  F006         	goto	i2l2346
  3027   000A00                     i2l2964:
  3028                           
  3029                           ; Switch size 1, requested type "simple"
  3030                           ; Number of cases is 9, Range of values is 1 to 9
  3031                           ; switch strategies available:
  3032                           ; Name         Instructions Cycles
  3033                           ; simple_byte           28    15 (average)
  3034                           ;	Chosen strategy is simple_byte
  3035   000A00  5059               	movf	??_Hi_ISR^0,w,c
  3036   000A02  0A01               	xorlw	1	; case 1
  3037   000A04  B4D8               	btfsc	status,2,c
  3038   000A06  EFC6  F004         	goto	i2l2218
  3039   000A0A  0A03               	xorlw	3	; case 2
  3040   000A0C  B4D8               	btfsc	status,2,c
  3041   000A0E  EFCB  F004         	goto	i2l2220
  3042   000A12  0A01               	xorlw	1	; case 3
  3043   000A14  B4D8               	btfsc	status,2,c
  3044   000A16  EFD0  F004         	goto	i2l2222
  3045   000A1A  0A07               	xorlw	7	; case 4
  3046   000A1C  B4D8               	btfsc	status,2,c
  3047   000A1E  EFD5  F004         	goto	i2l2224
  3048   000A22  0A01               	xorlw	1	; case 5
  3049   000A24  B4D8               	btfsc	status,2,c
  3050   000A26  EFDA  F004         	goto	i2l2226
  3051   000A2A  0A03               	xorlw	3	; case 6
  3052   000A2C  B4D8               	btfsc	status,2,c
  3053   000A2E  EFDF  F004         	goto	i2l2228
  3054   000A32  0A01               	xorlw	1	; case 7
  3055   000A34  B4D8               	btfsc	status,2,c
  3056   000A36  EFE4  F004         	goto	i2l2230
  3057   000A3A  0A0F               	xorlw	15	; case 8
  3058   000A3C  B4D8               	btfsc	status,2,c
  3059   000A3E  EFE9  F004         	goto	i2l2232
  3060   000A42  0A01               	xorlw	1	; case 9
  3061   000A44  B4D8               	btfsc	status,2,c
  3062   000A46  EFEE  F004         	goto	i2l2234
  3063   000A4A  EFF8  F006         	goto	i2l2346
  3064   000A4E                     i2l2240:
  3065   000A4E  040B               	decf	_turn^0,w,c
  3066   000A50  100C               	iorwf	(_turn+1)^0,w,c
  3067   000A52  A4D8               	btfss	status,2,c
  3068   000A54  EF2E  F005         	goto	i2u119_41
  3069   000A58  EF30  F005         	goto	i2u119_40
  3070   000A5C                     i2u119_41:
  3071   000A5C  EFF8  F006         	goto	i2l2346
  3072   000A60                     i2u119_40:
  3073   000A60                     
  3074                           ;main.c: 218:                 if (player_b[2] != 0){
  3075   000A60  503A               	movf	(_player_b+4)^0,w,c
  3076   000A62  103B               	iorwf	(_player_b+5)^0,w,c
  3077   000A64  B4D8               	btfsc	status,2,c
  3078   000A66  EF37  F005         	goto	i2u120_41
  3079   000A6A  EF39  F005         	goto	i2u120_40
  3080   000A6E                     i2u120_41:
  3081   000A6E  EFA8  F005         	goto	i2l2268
  3082   000A72                     i2u120_40:
  3083   000A72  EF68  F005         	goto	i2l2266
  3084   000A76                     i2l2246:
  3085                           
  3086                           ;main.c: 221:                             LATD = LATD & 254;
  3087   000A76  508C               	movf	140,w,c	;volatile
  3088   000A78  0BFE               	andlw	254
  3089   000A7A  6E8C               	movwf	140,c	;volatile
  3090                           
  3091                           ;main.c: 222:                             break;
  3092   000A7C  EF9A  F005         	goto	i2l149
  3093   000A80                     i2l2248:
  3094                           
  3095                           ;main.c: 224:                             LATD = LATD & 253;
  3096   000A80  508C               	movf	140,w,c	;volatile
  3097   000A82  0BFD               	andlw	253
  3098   000A84  6E8C               	movwf	140,c	;volatile
  3099                           
  3100                           ;main.c: 225:                             break;
  3101   000A86  EF9A  F005         	goto	i2l149
  3102   000A8A                     i2l2250:
  3103                           
  3104                           ;main.c: 227:                             LATD = LATD & 251;
  3105   000A8A  508C               	movf	140,w,c	;volatile
  3106   000A8C  0BFB               	andlw	251
  3107   000A8E  6E8C               	movwf	140,c	;volatile
  3108                           
  3109                           ;main.c: 228:                             break;
  3110   000A90  EF9A  F005         	goto	i2l149
  3111   000A94                     i2l2252:
  3112                           
  3113                           ;main.c: 230:                             LATC = LATC & 254;
  3114   000A94  508B               	movf	139,w,c	;volatile
  3115   000A96  0BFE               	andlw	254
  3116   000A98  6E8B               	movwf	139,c	;volatile
  3117                           
  3118                           ;main.c: 231:                             break;
  3119   000A9A  EF9A  F005         	goto	i2l149
  3120   000A9E                     i2l2254:
  3121                           
  3122                           ;main.c: 233:                             LATC = LATC & 253;
  3123   000A9E  508B               	movf	139,w,c	;volatile
  3124   000AA0  0BFD               	andlw	253
  3125   000AA2  6E8B               	movwf	139,c	;volatile
  3126                           
  3127                           ;main.c: 234:                             break;
  3128   000AA4  EF9A  F005         	goto	i2l149
  3129   000AA8                     i2l2256:
  3130                           
  3131                           ;main.c: 236:                             LATC = LATC & 251;
  3132   000AA8  508B               	movf	139,w,c	;volatile
  3133   000AAA  0BFB               	andlw	251
  3134   000AAC  6E8B               	movwf	139,c	;volatile
  3135                           
  3136                           ;main.c: 237:                             break;
  3137   000AAE  EF9A  F005         	goto	i2l149
  3138   000AB2                     i2l2258:
  3139                           
  3140                           ;main.c: 239:                             LATA = LATA & 254;
  3141   000AB2  5089               	movf	137,w,c	;volatile
  3142   000AB4  0BFE               	andlw	254
  3143   000AB6  6E89               	movwf	137,c	;volatile
  3144                           
  3145                           ;main.c: 240:                             break;
  3146   000AB8  EF9A  F005         	goto	i2l149
  3147   000ABC                     i2l2260:
  3148                           
  3149                           ;main.c: 242:                             LATA = LATA & 253;
  3150   000ABC  5089               	movf	137,w,c	;volatile
  3151   000ABE  0BFD               	andlw	253
  3152   000AC0  6E89               	movwf	137,c	;volatile
  3153                           
  3154                           ;main.c: 243:                             break;
  3155   000AC2  EF9A  F005         	goto	i2l149
  3156   000AC6                     i2l2262:
  3157                           
  3158                           ;main.c: 245:                             LATA = LATA & 251;
  3159   000AC6  5089               	movf	137,w,c	;volatile
  3160   000AC8  0BFB               	andlw	251
  3161   000ACA  6E89               	movwf	137,c	;volatile
  3162                           
  3163                           ;main.c: 246:                             break;
  3164   000ACC  EF9A  F005         	goto	i2l149
  3165   000AD0                     i2l2266:
  3166   000AD0  C036  F059         	movff	_player_b,??_Hi_ISR
  3167   000AD4  C037  F05A         	movff	_player_b+1,??_Hi_ISR+1
  3168                           
  3169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3170                           ; Switch size 1, requested type "simple"
  3171                           ; Number of cases is 1, Range of values is 0 to 0
  3172                           ; switch strategies available:
  3173                           ; Name         Instructions Cycles
  3174                           ; simple_byte            4     3 (average)
  3175                           ;	Chosen strategy is simple_byte
  3176   000AD8  505A               	movf	(??_Hi_ISR+1)^0,w,c
  3177   000ADA  0A00               	xorlw	0	; case 0
  3178   000ADC  B4D8               	btfsc	status,2,c
  3179   000ADE  EF73  F005         	goto	i2l2966
  3180   000AE2  EF9A  F005         	goto	i2l149
  3181   000AE6                     i2l2966:
  3182                           
  3183                           ; Switch size 1, requested type "simple"
  3184                           ; Number of cases is 9, Range of values is 1 to 9
  3185                           ; switch strategies available:
  3186                           ; Name         Instructions Cycles
  3187                           ; simple_byte           28    15 (average)
  3188                           ;	Chosen strategy is simple_byte
  3189   000AE6  5059               	movf	??_Hi_ISR^0,w,c
  3190   000AE8  0A01               	xorlw	1	; case 1
  3191   000AEA  B4D8               	btfsc	status,2,c
  3192   000AEC  EF3B  F005         	goto	i2l2246
  3193   000AF0  0A03               	xorlw	3	; case 2
  3194   000AF2  B4D8               	btfsc	status,2,c
  3195   000AF4  EF40  F005         	goto	i2l2248
  3196   000AF8  0A01               	xorlw	1	; case 3
  3197   000AFA  B4D8               	btfsc	status,2,c
  3198   000AFC  EF45  F005         	goto	i2l2250
  3199   000B00  0A07               	xorlw	7	; case 4
  3200   000B02  B4D8               	btfsc	status,2,c
  3201   000B04  EF4A  F005         	goto	i2l2252
  3202   000B08  0A01               	xorlw	1	; case 5
  3203   000B0A  B4D8               	btfsc	status,2,c
  3204   000B0C  EF4F  F005         	goto	i2l2254
  3205   000B10  0A03               	xorlw	3	; case 6
  3206   000B12  B4D8               	btfsc	status,2,c
  3207   000B14  EF54  F005         	goto	i2l2256
  3208   000B18  0A01               	xorlw	1	; case 7
  3209   000B1A  B4D8               	btfsc	status,2,c
  3210   000B1C  EF59  F005         	goto	i2l2258
  3211   000B20  0A0F               	xorlw	15	; case 8
  3212   000B22  B4D8               	btfsc	status,2,c
  3213   000B24  EF5E  F005         	goto	i2l2260
  3214   000B28  0A01               	xorlw	1	; case 9
  3215   000B2A  B4D8               	btfsc	status,2,c
  3216   000B2C  EF63  F005         	goto	i2l2262
  3217   000B30  EF9A  F005         	goto	i2l149
  3218   000B34                     i2l149:
  3219                           
  3220                           ;main.c: 248:                     player_b[0] = player_b[1];
  3221   000B34  C038  F036         	movff	_player_b+2,_player_b
  3222   000B38  C039  F037         	movff	_player_b+3,_player_b+1
  3223                           
  3224                           ;main.c: 249:                     player_b[1] = player_b[2];
  3225   000B3C  C03A  F038         	movff	_player_b+4,_player_b+2
  3226   000B40  C03B  F039         	movff	_player_b+5,_player_b+3
  3227                           
  3228                           ;main.c: 250:                     player_b[2] = position;
  3229   000B44  C066  F03A         	movff	Hi_ISR@position,_player_b+4
  3230   000B48  C067  F03B         	movff	Hi_ISR@position+1,_player_b+5
  3231                           
  3232                           ;main.c: 252:                 }
  3233   000B4C  EF04  F006         	goto	i2l2300
  3234   000B50                     i2l2268:
  3235                           
  3236                           ;main.c: 254:                     if (player_b[0] == 0) player_b[0] = position;
  3237   000B50  5036               	movf	_player_b^0,w,c
  3238   000B52  1037               	iorwf	(_player_b+1)^0,w,c
  3239   000B54  A4D8               	btfss	status,2,c
  3240   000B56  EFAF  F005         	goto	i2u121_41
  3241   000B5A  EFB1  F005         	goto	i2u121_40
  3242   000B5E                     i2u121_41:
  3243   000B5E  EFB7  F005         	goto	i2l2272
  3244   000B62                     i2u121_40:
  3245   000B62  C066  F036         	movff	Hi_ISR@position,_player_b
  3246   000B66  C067  F037         	movff	Hi_ISR@position+1,_player_b+1
  3247   000B6A  EF04  F006         	goto	i2l2300
  3248   000B6E                     i2l2272:
  3249   000B6E  5038               	movf	(_player_b+2)^0,w,c
  3250   000B70  1039               	iorwf	(_player_b+3)^0,w,c
  3251   000B72  A4D8               	btfss	status,2,c
  3252   000B74  EFBE  F005         	goto	i2u122_41
  3253   000B78  EFC0  F005         	goto	i2u122_40
  3254   000B7C                     i2u122_41:
  3255   000B7C  EFC6  F005         	goto	i2l2276
  3256   000B80                     i2u122_40:
  3257   000B80  C066  F038         	movff	Hi_ISR@position,_player_b+2
  3258   000B84  C067  F039         	movff	Hi_ISR@position+1,_player_b+3
  3259   000B88  EF04  F006         	goto	i2l2300
  3260   000B8C                     i2l2276:
  3261   000B8C  503A               	movf	(_player_b+4)^0,w,c
  3262   000B8E  103B               	iorwf	(_player_b+5)^0,w,c
  3263   000B90  A4D8               	btfss	status,2,c
  3264   000B92  EFCD  F005         	goto	i2u123_41
  3265   000B96  EFCF  F005         	goto	i2u123_40
  3266   000B9A                     i2u123_41:
  3267   000B9A  EFD5  F005         	goto	i2l158
  3268   000B9E                     i2u123_40:
  3269   000B9E  C066  F03A         	movff	Hi_ISR@position,_player_b+4
  3270   000BA2  C067  F03B         	movff	Hi_ISR@position+1,_player_b+5
  3271   000BA6  EF04  F006         	goto	i2l2300
  3272   000BAA                     i2l158:
  3273                           
  3274                           ;main.c: 258:                 switch(player_b[0]){
  3275   000BAA  EF04  F006         	goto	i2l2300
  3276   000BAE                     i2l2280:
  3277                           
  3278                           ;main.c: 260:                             LATD = LATD | 1;
  3279   000BAE  508C               	movf	140,w,c	;volatile
  3280   000BB0  0901               	iorlw	1
  3281   000BB2  6E8C               	movwf	140,c	;volatile
  3282                           
  3283                           ;main.c: 261:                             break;
  3284   000BB4  EF63  F006         	goto	i2l2322
  3285   000BB8                     i2l2282:
  3286                           
  3287                           ;main.c: 263:                             LATD = LATD | 2;
  3288   000BB8  508C               	movf	140,w,c	;volatile
  3289   000BBA  0902               	iorlw	2
  3290   000BBC  6E8C               	movwf	140,c	;volatile
  3291                           
  3292                           ;main.c: 264:                             break;
  3293   000BBE  EF63  F006         	goto	i2l2322
  3294   000BC2                     i2l2284:
  3295                           
  3296                           ;main.c: 266:                             LATD = LATD | 4;
  3297   000BC2  508C               	movf	140,w,c	;volatile
  3298   000BC4  0904               	iorlw	4
  3299   000BC6  6E8C               	movwf	140,c	;volatile
  3300                           
  3301                           ;main.c: 267:                             break;
  3302   000BC8  EF63  F006         	goto	i2l2322
  3303   000BCC                     i2l2286:
  3304                           
  3305                           ;main.c: 269:                             LATC = LATC | 1;
  3306   000BCC  508B               	movf	139,w,c	;volatile
  3307   000BCE  0901               	iorlw	1
  3308   000BD0  6E8B               	movwf	139,c	;volatile
  3309                           
  3310                           ;main.c: 270:                             break;
  3311   000BD2  EF63  F006         	goto	i2l2322
  3312   000BD6                     i2l2288:
  3313                           
  3314                           ;main.c: 272:                             LATC = LATC | 2;
  3315   000BD6  508B               	movf	139,w,c	;volatile
  3316   000BD8  0902               	iorlw	2
  3317   000BDA  6E8B               	movwf	139,c	;volatile
  3318                           
  3319                           ;main.c: 273:                             break;
  3320   000BDC  EF63  F006         	goto	i2l2322
  3321   000BE0                     i2l2290:
  3322                           
  3323                           ;main.c: 275:                             LATC = LATC | 4;
  3324   000BE0  508B               	movf	139,w,c	;volatile
  3325   000BE2  0904               	iorlw	4
  3326   000BE4  6E8B               	movwf	139,c	;volatile
  3327                           
  3328                           ;main.c: 276:                             break;
  3329   000BE6  EF63  F006         	goto	i2l2322
  3330   000BEA                     i2l2292:
  3331                           
  3332                           ;main.c: 278:                             LATA = LATA | 1;
  3333   000BEA  5089               	movf	137,w,c	;volatile
  3334   000BEC  0901               	iorlw	1
  3335   000BEE  6E89               	movwf	137,c	;volatile
  3336                           
  3337                           ;main.c: 279:                             break;
  3338   000BF0  EF63  F006         	goto	i2l2322
  3339   000BF4                     i2l2294:
  3340                           
  3341                           ;main.c: 281:                             LATA = LATA | 2;
  3342   000BF4  5089               	movf	137,w,c	;volatile
  3343   000BF6  0902               	iorlw	2
  3344   000BF8  6E89               	movwf	137,c	;volatile
  3345                           
  3346                           ;main.c: 282:                             break;
  3347   000BFA  EF63  F006         	goto	i2l2322
  3348   000BFE                     i2l2296:
  3349                           
  3350                           ;main.c: 284:                             LATA = LATA | 4;
  3351   000BFE  5089               	movf	137,w,c	;volatile
  3352   000C00  0904               	iorlw	4
  3353   000C02  6E89               	movwf	137,c	;volatile
  3354                           
  3355                           ;main.c: 285:                             break;
  3356   000C04  EF63  F006         	goto	i2l2322
  3357   000C08                     i2l2300:
  3358   000C08  C036  F059         	movff	_player_b,??_Hi_ISR
  3359   000C0C  C037  F05A         	movff	_player_b+1,??_Hi_ISR+1
  3360                           
  3361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3362                           ; Switch size 1, requested type "simple"
  3363                           ; Number of cases is 1, Range of values is 0 to 0
  3364                           ; switch strategies available:
  3365                           ; Name         Instructions Cycles
  3366                           ; simple_byte            4     3 (average)
  3367                           ;	Chosen strategy is simple_byte
  3368   000C10  505A               	movf	(??_Hi_ISR+1)^0,w,c
  3369   000C12  0A00               	xorlw	0	; case 0
  3370   000C14  B4D8               	btfsc	status,2,c
  3371   000C16  EF0F  F006         	goto	i2l2968
  3372   000C1A  EF63  F006         	goto	i2l2322
  3373   000C1E                     i2l2968:
  3374                           
  3375                           ; Switch size 1, requested type "simple"
  3376                           ; Number of cases is 9, Range of values is 1 to 9
  3377                           ; switch strategies available:
  3378                           ; Name         Instructions Cycles
  3379                           ; simple_byte           28    15 (average)
  3380                           ;	Chosen strategy is simple_byte
  3381   000C1E  5059               	movf	??_Hi_ISR^0,w,c
  3382   000C20  0A01               	xorlw	1	; case 1
  3383   000C22  B4D8               	btfsc	status,2,c
  3384   000C24  EFD7  F005         	goto	i2l2280
  3385   000C28  0A03               	xorlw	3	; case 2
  3386   000C2A  B4D8               	btfsc	status,2,c
  3387   000C2C  EFDC  F005         	goto	i2l2282
  3388   000C30  0A01               	xorlw	1	; case 3
  3389   000C32  B4D8               	btfsc	status,2,c
  3390   000C34  EFE1  F005         	goto	i2l2284
  3391   000C38  0A07               	xorlw	7	; case 4
  3392   000C3A  B4D8               	btfsc	status,2,c
  3393   000C3C  EFE6  F005         	goto	i2l2286
  3394   000C40  0A01               	xorlw	1	; case 5
  3395   000C42  B4D8               	btfsc	status,2,c
  3396   000C44  EFEB  F005         	goto	i2l2288
  3397   000C48  0A03               	xorlw	3	; case 6
  3398   000C4A  B4D8               	btfsc	status,2,c
  3399   000C4C  EFF0  F005         	goto	i2l2290
  3400   000C50  0A01               	xorlw	1	; case 7
  3401   000C52  B4D8               	btfsc	status,2,c
  3402   000C54  EFF5  F005         	goto	i2l2292
  3403   000C58  0A0F               	xorlw	15	; case 8
  3404   000C5A  B4D8               	btfsc	status,2,c
  3405   000C5C  EFFA  F005         	goto	i2l2294
  3406   000C60  0A01               	xorlw	1	; case 9
  3407   000C62  B4D8               	btfsc	status,2,c
  3408   000C64  EFFF  F005         	goto	i2l2296
  3409   000C68  EF63  F006         	goto	i2l2322
  3410   000C6C                     i2l2302:
  3411                           
  3412                           ;main.c: 289:                             LATD = LATD | 1;
  3413   000C6C  508C               	movf	140,w,c	;volatile
  3414   000C6E  0901               	iorlw	1
  3415   000C70  6E8C               	movwf	140,c	;volatile
  3416                           
  3417                           ;main.c: 290:                             break;
  3418   000C72  EFC4  F006         	goto	i2l2344
  3419   000C76                     i2l2304:
  3420                           
  3421                           ;main.c: 292:                             LATD = LATD | 2;
  3422   000C76  508C               	movf	140,w,c	;volatile
  3423   000C78  0902               	iorlw	2
  3424   000C7A  6E8C               	movwf	140,c	;volatile
  3425                           
  3426                           ;main.c: 293:                             break;
  3427   000C7C  EFC4  F006         	goto	i2l2344
  3428   000C80                     i2l2306:
  3429                           
  3430                           ;main.c: 295:                             LATD = LATD | 4;
  3431   000C80  508C               	movf	140,w,c	;volatile
  3432   000C82  0904               	iorlw	4
  3433   000C84  6E8C               	movwf	140,c	;volatile
  3434                           
  3435                           ;main.c: 296:                             break;
  3436   000C86  EFC4  F006         	goto	i2l2344
  3437   000C8A                     i2l2308:
  3438                           
  3439                           ;main.c: 298:                             LATC = LATC | 1;
  3440   000C8A  508B               	movf	139,w,c	;volatile
  3441   000C8C  0901               	iorlw	1
  3442   000C8E  6E8B               	movwf	139,c	;volatile
  3443                           
  3444                           ;main.c: 299:                             break;
  3445   000C90  EFC4  F006         	goto	i2l2344
  3446   000C94                     i2l2310:
  3447                           
  3448                           ;main.c: 301:                             LATC = LATC | 2;
  3449   000C94  508B               	movf	139,w,c	;volatile
  3450   000C96  0902               	iorlw	2
  3451   000C98  6E8B               	movwf	139,c	;volatile
  3452                           
  3453                           ;main.c: 302:                             break;
  3454   000C9A  EFC4  F006         	goto	i2l2344
  3455   000C9E                     i2l2312:
  3456                           
  3457                           ;main.c: 304:                             LATC = LATC | 4;
  3458   000C9E  508B               	movf	139,w,c	;volatile
  3459   000CA0  0904               	iorlw	4
  3460   000CA2  6E8B               	movwf	139,c	;volatile
  3461                           
  3462                           ;main.c: 305:                             break;
  3463   000CA4  EFC4  F006         	goto	i2l2344
  3464   000CA8                     i2l2314:
  3465                           
  3466                           ;main.c: 307:                             LATA = LATA | 1;
  3467   000CA8  5089               	movf	137,w,c	;volatile
  3468   000CAA  0901               	iorlw	1
  3469   000CAC  6E89               	movwf	137,c	;volatile
  3470                           
  3471                           ;main.c: 308:                             break;
  3472   000CAE  EFC4  F006         	goto	i2l2344
  3473   000CB2                     i2l2316:
  3474                           
  3475                           ;main.c: 310:                             LATA = LATA | 2;
  3476   000CB2  5089               	movf	137,w,c	;volatile
  3477   000CB4  0902               	iorlw	2
  3478   000CB6  6E89               	movwf	137,c	;volatile
  3479                           
  3480                           ;main.c: 311:                             break;
  3481   000CB8  EFC4  F006         	goto	i2l2344
  3482   000CBC                     i2l2318:
  3483                           
  3484                           ;main.c: 313:                             LATA = LATA | 4;
  3485   000CBC  5089               	movf	137,w,c	;volatile
  3486   000CBE  0904               	iorlw	4
  3487   000CC0  6E89               	movwf	137,c	;volatile
  3488                           
  3489                           ;main.c: 314:                             break;
  3490   000CC2  EFC4  F006         	goto	i2l2344
  3491   000CC6                     i2l2322:
  3492   000CC6  EE20  F038         	lfsr	2,_player_b+2
  3493   000CCA  CFDE F059          	movff	postinc2,??_Hi_ISR
  3494   000CCE  CFDD F05A          	movff	postdec2,??_Hi_ISR+1
  3495                           
  3496                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3497                           ; Switch size 1, requested type "simple"
  3498                           ; Number of cases is 1, Range of values is 0 to 0
  3499                           ; switch strategies available:
  3500                           ; Name         Instructions Cycles
  3501                           ; simple_byte            4     3 (average)
  3502                           ;	Chosen strategy is simple_byte
  3503   000CD2  505A               	movf	(??_Hi_ISR+1)^0,w,c
  3504   000CD4  0A00               	xorlw	0	; case 0
  3505   000CD6  B4D8               	btfsc	status,2,c
  3506   000CD8  EF70  F006         	goto	i2l2970
  3507   000CDC  EFC4  F006         	goto	i2l2344
  3508   000CE0                     i2l2970:
  3509                           
  3510                           ; Switch size 1, requested type "simple"
  3511                           ; Number of cases is 9, Range of values is 1 to 9
  3512                           ; switch strategies available:
  3513                           ; Name         Instructions Cycles
  3514                           ; simple_byte           28    15 (average)
  3515                           ;	Chosen strategy is simple_byte
  3516   000CE0  5059               	movf	??_Hi_ISR^0,w,c
  3517   000CE2  0A01               	xorlw	1	; case 1
  3518   000CE4  B4D8               	btfsc	status,2,c
  3519   000CE6  EF36  F006         	goto	i2l2302
  3520   000CEA  0A03               	xorlw	3	; case 2
  3521   000CEC  B4D8               	btfsc	status,2,c
  3522   000CEE  EF3B  F006         	goto	i2l2304
  3523   000CF2  0A01               	xorlw	1	; case 3
  3524   000CF4  B4D8               	btfsc	status,2,c
  3525   000CF6  EF40  F006         	goto	i2l2306
  3526   000CFA  0A07               	xorlw	7	; case 4
  3527   000CFC  B4D8               	btfsc	status,2,c
  3528   000CFE  EF45  F006         	goto	i2l2308
  3529   000D02  0A01               	xorlw	1	; case 5
  3530   000D04  B4D8               	btfsc	status,2,c
  3531   000D06  EF4A  F006         	goto	i2l2310
  3532   000D0A  0A03               	xorlw	3	; case 6
  3533   000D0C  B4D8               	btfsc	status,2,c
  3534   000D0E  EF4F  F006         	goto	i2l2312
  3535   000D12  0A01               	xorlw	1	; case 7
  3536   000D14  B4D8               	btfsc	status,2,c
  3537   000D16  EF54  F006         	goto	i2l2314
  3538   000D1A  0A0F               	xorlw	15	; case 8
  3539   000D1C  B4D8               	btfsc	status,2,c
  3540   000D1E  EF59  F006         	goto	i2l2316
  3541   000D22  0A01               	xorlw	1	; case 9
  3542   000D24  B4D8               	btfsc	status,2,c
  3543   000D26  EF5E  F006         	goto	i2l2318
  3544   000D2A  EFC4  F006         	goto	i2l2344
  3545   000D2E                     i2l2324:
  3546                           
  3547                           ;main.c: 318:                             LATD = LATD | 1;
  3548   000D2E  508C               	movf	140,w,c	;volatile
  3549   000D30  0901               	iorlw	1
  3550   000D32  6E8C               	movwf	140,c	;volatile
  3551                           
  3552                           ;main.c: 319:                             break;
  3553   000D34  EFF8  F006         	goto	i2l2346
  3554   000D38                     i2l2326:
  3555                           
  3556                           ;main.c: 321:                             LATD = LATD | 2;
  3557   000D38  508C               	movf	140,w,c	;volatile
  3558   000D3A  0902               	iorlw	2
  3559   000D3C  6E8C               	movwf	140,c	;volatile
  3560                           
  3561                           ;main.c: 322:                             break;
  3562   000D3E  EFF8  F006         	goto	i2l2346
  3563   000D42                     i2l2328:
  3564                           
  3565                           ;main.c: 324:                             LATD = LATD | 4;
  3566   000D42  508C               	movf	140,w,c	;volatile
  3567   000D44  0904               	iorlw	4
  3568   000D46  6E8C               	movwf	140,c	;volatile
  3569                           
  3570                           ;main.c: 325:                             break;
  3571   000D48  EFF8  F006         	goto	i2l2346
  3572   000D4C                     i2l2330:
  3573                           
  3574                           ;main.c: 327:                             LATC = LATC | 1;
  3575   000D4C  508B               	movf	139,w,c	;volatile
  3576   000D4E  0901               	iorlw	1
  3577   000D50  6E8B               	movwf	139,c	;volatile
  3578                           
  3579                           ;main.c: 328:                             break;
  3580   000D52  EFF8  F006         	goto	i2l2346
  3581   000D56                     i2l2332:
  3582                           
  3583                           ;main.c: 330:                             LATC = LATC | 2;
  3584   000D56  508B               	movf	139,w,c	;volatile
  3585   000D58  0902               	iorlw	2
  3586   000D5A  6E8B               	movwf	139,c	;volatile
  3587                           
  3588                           ;main.c: 331:                             break;
  3589   000D5C  EFF8  F006         	goto	i2l2346
  3590   000D60                     i2l2334:
  3591                           
  3592                           ;main.c: 333:                             LATC = LATC | 4;
  3593   000D60  508B               	movf	139,w,c	;volatile
  3594   000D62  0904               	iorlw	4
  3595   000D64  6E8B               	movwf	139,c	;volatile
  3596                           
  3597                           ;main.c: 334:                             break;
  3598   000D66  EFF8  F006         	goto	i2l2346
  3599   000D6A                     i2l2336:
  3600                           
  3601                           ;main.c: 336:                             LATA = LATA | 1;
  3602   000D6A  5089               	movf	137,w,c	;volatile
  3603   000D6C  0901               	iorlw	1
  3604   000D6E  6E89               	movwf	137,c	;volatile
  3605                           
  3606                           ;main.c: 337:                             break;
  3607   000D70  EFF8  F006         	goto	i2l2346
  3608   000D74                     i2l2338:
  3609                           
  3610                           ;main.c: 339:                             LATA = LATA | 2;
  3611   000D74  5089               	movf	137,w,c	;volatile
  3612   000D76  0902               	iorlw	2
  3613   000D78  6E89               	movwf	137,c	;volatile
  3614                           
  3615                           ;main.c: 340:                             break;
  3616   000D7A  EFF8  F006         	goto	i2l2346
  3617   000D7E                     i2l2340:
  3618                           
  3619                           ;main.c: 342:                             LATA = LATA | 4;
  3620   000D7E  5089               	movf	137,w,c	;volatile
  3621   000D80  0904               	iorlw	4
  3622   000D82  6E89               	movwf	137,c	;volatile
  3623                           
  3624                           ;main.c: 343:                             break;
  3625   000D84  EFF8  F006         	goto	i2l2346
  3626   000D88                     i2l2344:
  3627   000D88  EE20  F03A         	lfsr	2,_player_b+4
  3628   000D8C  CFDE F059          	movff	postinc2,??_Hi_ISR
  3629   000D90  CFDD F05A          	movff	postdec2,??_Hi_ISR+1
  3630                           
  3631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3632                           ; Switch size 1, requested type "simple"
  3633                           ; Number of cases is 1, Range of values is 0 to 0
  3634                           ; switch strategies available:
  3635                           ; Name         Instructions Cycles
  3636                           ; simple_byte            4     3 (average)
  3637                           ;	Chosen strategy is simple_byte
  3638   000D94  505A               	movf	(??_Hi_ISR+1)^0,w,c
  3639   000D96  0A00               	xorlw	0	; case 0
  3640   000D98  B4D8               	btfsc	status,2,c
  3641   000D9A  EFD1  F006         	goto	i2l2972
  3642   000D9E  EFF8  F006         	goto	i2l2346
  3643   000DA2                     i2l2972:
  3644                           
  3645                           ; Switch size 1, requested type "simple"
  3646                           ; Number of cases is 9, Range of values is 1 to 9
  3647                           ; switch strategies available:
  3648                           ; Name         Instructions Cycles
  3649                           ; simple_byte           28    15 (average)
  3650                           ;	Chosen strategy is simple_byte
  3651   000DA2  5059               	movf	??_Hi_ISR^0,w,c
  3652   000DA4  0A01               	xorlw	1	; case 1
  3653   000DA6  B4D8               	btfsc	status,2,c
  3654   000DA8  EF97  F006         	goto	i2l2324
  3655   000DAC  0A03               	xorlw	3	; case 2
  3656   000DAE  B4D8               	btfsc	status,2,c
  3657   000DB0  EF9C  F006         	goto	i2l2326
  3658   000DB4  0A01               	xorlw	1	; case 3
  3659   000DB6  B4D8               	btfsc	status,2,c
  3660   000DB8  EFA1  F006         	goto	i2l2328
  3661   000DBC  0A07               	xorlw	7	; case 4
  3662   000DBE  B4D8               	btfsc	status,2,c
  3663   000DC0  EFA6  F006         	goto	i2l2330
  3664   000DC4  0A01               	xorlw	1	; case 5
  3665   000DC6  B4D8               	btfsc	status,2,c
  3666   000DC8  EFAB  F006         	goto	i2l2332
  3667   000DCC  0A03               	xorlw	3	; case 6
  3668   000DCE  B4D8               	btfsc	status,2,c
  3669   000DD0  EFB0  F006         	goto	i2l2334
  3670   000DD4  0A01               	xorlw	1	; case 7
  3671   000DD6  B4D8               	btfsc	status,2,c
  3672   000DD8  EFB5  F006         	goto	i2l2336
  3673   000DDC  0A0F               	xorlw	15	; case 8
  3674   000DDE  B4D8               	btfsc	status,2,c
  3675   000DE0  EFBA  F006         	goto	i2l2338
  3676   000DE4  0A01               	xorlw	1	; case 9
  3677   000DE6  B4D8               	btfsc	status,2,c
  3678   000DE8  EFBF  F006         	goto	i2l2340
  3679   000DEC  EFF8  F006         	goto	i2l2346
  3680   000DF0                     i2l2346:
  3681                           
  3682                           ;main.c: 348:             if(turn == 0){
  3683   000DF0  500B               	movf	_turn^0,w,c
  3684   000DF2  100C               	iorwf	(_turn+1)^0,w,c
  3685   000DF4  A4D8               	btfss	status,2,c
  3686   000DF6  EFFF  F006         	goto	i2u124_41
  3687   000DFA  EF01  F007         	goto	i2u124_40
  3688   000DFE                     i2u124_41:
  3689   000DFE  EF0F  F007         	goto	i2l2350
  3690   000E02                     i2u124_40:
  3691   000E02                     
  3692                           ;main.c: 349:                 temp = JUDGE(turn,player_a);
  3693   000E02  C00B  F042         	movff	_turn,JUDGE@turn
  3694   000E06  C00C  F043         	movff	_turn+1,JUDGE@turn+1
  3695   000E0A  0E3C               	movlw	low _player_a
  3696   000E0C  6E44               	movwf	JUDGE@player^0,c
  3697   000E0E  ECBC  F008         	call	_JUDGE	;wreg free
  3698   000E12  C042  F009         	movff	?_JUDGE,_temp
  3699   000E16  C043  F00A         	movff	?_JUDGE+1,_temp+1
  3700                           
  3701                           ;main.c: 350:             }else if(turn == 1){
  3702   000E1A  EF24  F007         	goto	i2l2354
  3703   000E1E                     i2l2350:
  3704   000E1E  040B               	decf	_turn^0,w,c
  3705   000E20  100C               	iorwf	(_turn+1)^0,w,c
  3706   000E22  A4D8               	btfss	status,2,c
  3707   000E24  EF16  F007         	goto	i2u125_41
  3708   000E28  EF18  F007         	goto	i2u125_40
  3709   000E2C                     i2u125_41:
  3710   000E2C  EF24  F007         	goto	i2l2354
  3711   000E30                     i2u125_40:
  3712   000E30                     
  3713                           ;main.c: 351:                 temp = JUDGE(turn,player_b);
  3714   000E30  C00B  F042         	movff	_turn,JUDGE@turn
  3715   000E34  C00C  F043         	movff	_turn+1,JUDGE@turn+1
  3716   000E38  0E36               	movlw	low _player_b
  3717   000E3A  6E44               	movwf	JUDGE@player^0,c
  3718   000E3C  ECBC  F008         	call	_JUDGE	;wreg free
  3719   000E40  C042  F009         	movff	?_JUDGE,_temp
  3720   000E44  C043  F00A         	movff	?_JUDGE+1,_temp+1
  3721   000E48                     i2l2354:
  3722                           
  3723                           ;main.c: 353:             if(temp == 0){
  3724   000E48  5009               	movf	_temp^0,w,c
  3725   000E4A  100A               	iorwf	(_temp+1)^0,w,c
  3726   000E4C  A4D8               	btfss	status,2,c
  3727   000E4E  EF2B  F007         	goto	i2u126_41
  3728   000E52  EF2D  F007         	goto	i2u126_40
  3729   000E56                     i2u126_41:
  3730   000E56  EF55  F007         	goto	i2l2364
  3731   000E5A                     i2u126_40:
  3732   000E5A                     
  3733                           ;main.c: 354:                 turn = (turn+1)%2;
  3734   000E5A  0E01               	movlw	1
  3735   000E5C  240B               	addwf	_turn^0,w,c
  3736   000E5E  6E59               	movwf	??_Hi_ISR^0,c
  3737   000E60  0E00               	movlw	0
  3738   000E62  200C               	addwfc	(_turn+1)^0,w,c
  3739   000E64  6E5A               	movwf	(??_Hi_ISR+1)^0,c
  3740   000E66  0E01               	movlw	1
  3741   000E68  1459               	andwf	??_Hi_ISR^0,w,c
  3742   000E6A  6E0B               	movwf	_turn^0,c
  3743   000E6C  6A0C               	clrf	(_turn+1)^0,c
  3744                           
  3745                           ;main.c: 357:                 if (turn == 1) UART_Write_Text("Player 2 input:");
  3746   000E6E  040B               	decf	_turn^0,w,c
  3747   000E70  100C               	iorwf	(_turn+1)^0,w,c
  3748   000E72  A4D8               	btfss	status,2,c
  3749   000E74  EF3E  F007         	goto	i2u127_41
  3750   000E78  EF40  F007         	goto	i2u127_40
  3751   000E7C                     i2u127_41:
  3752   000E7C  EF46  F007         	goto	i2l2360
  3753   000E80                     i2u127_40:
  3754   000E80  0E11               	movlw	low STR_2
  3755   000E82  6E43               	movwf	i2UART_Write_Text@text^0,c
  3756   000E84  EC66  F00B         	call	i2_UART_Write_Text	;wreg free
  3757   000E88  EF74  F007         	goto	i2l2372
  3758   000E8C                     i2l2360:
  3759   000E8C  500B               	movf	_turn^0,w,c
  3760   000E8E  100C               	iorwf	(_turn+1)^0,w,c
  3761   000E90  A4D8               	btfss	status,2,c
  3762   000E92  EF4D  F007         	goto	i2u128_41
  3763   000E96  EF4F  F007         	goto	i2u128_40
  3764   000E9A                     i2u128_41:
  3765   000E9A  EF74  F007         	goto	i2l91
  3766   000E9E                     i2u128_40:
  3767   000E9E  0E01               	movlw	low STR_1
  3768   000EA0  6E43               	movwf	i2UART_Write_Text@text^0,c
  3769   000EA2  EC66  F00B         	call	i2_UART_Write_Text	;wreg free
  3770   000EA6  EF74  F007         	goto	i2l2372
  3771   000EAA                     i2l2364:
  3772                           
  3773                           ;main.c: 361:                 if(temp == 1) UART_Write_Text("Player 1 WIN\n\r");
  3774   000EAA  0409               	decf	_temp^0,w,c
  3775   000EAC  100A               	iorwf	(_temp+1)^0,w,c
  3776   000EAE  A4D8               	btfss	status,2,c
  3777   000EB0  EF5C  F007         	goto	i2u129_41
  3778   000EB4  EF5E  F007         	goto	i2u129_40
  3779   000EB8                     i2u129_41:
  3780   000EB8  EF64  F007         	goto	i2l2368
  3781   000EBC                     i2u129_40:
  3782   000EBC  0E21               	movlw	low STR_4
  3783   000EBE  6E43               	movwf	i2UART_Write_Text@text^0,c
  3784   000EC0  EC66  F00B         	call	i2_UART_Write_Text	;wreg free
  3785   000EC4  EF74  F007         	goto	i2l2372
  3786   000EC8                     i2l2368:
  3787   000EC8  0E02               	movlw	2
  3788   000ECA  1809               	xorwf	_temp^0,w,c
  3789   000ECC  100A               	iorwf	(_temp+1)^0,w,c
  3790   000ECE  A4D8               	btfss	status,2,c
  3791   000ED0  EF6C  F007         	goto	i2u130_41
  3792   000ED4  EF6E  F007         	goto	i2u130_40
  3793   000ED8                     i2u130_41:
  3794   000ED8  EF74  F007         	goto	i2l91
  3795   000EDC                     i2u130_40:
  3796   000EDC  0E30               	movlw	low STR_5
  3797   000EDE  6E43               	movwf	i2UART_Write_Text@text^0,c
  3798   000EE0  EC66  F00B         	call	i2_UART_Write_Text	;wreg free
  3799   000EE4  EF74  F007         	goto	i2l2372
  3800   000EE8                     i2l91:
  3801   000EE8                     i2l2372:
  3802                           
  3803                           ;main.c: 367:     if(PIR1bits.TMR2IF == 1){
  3804   000EE8  A29E               	btfss	158,1,c	;volatile
  3805   000EEA  EF79  F007         	goto	i2u131_41
  3806   000EEE  EF7B  F007         	goto	i2u131_40
  3807   000EF2                     i2u131_41:
  3808   000EF2  EF9F  F008         	goto	i2l2442
  3809   000EF6                     i2u131_40:
  3810   000EF6  EFAA  F007         	goto	i2l2396
  3811   000EFA                     i2l2376:
  3812                           
  3813                           ;main.c: 372:                             LATD = LATD ^ 1;
  3814   000EFA  508C               	movf	140,w,c	;volatile
  3815   000EFC  0A01               	xorlw	1
  3816   000EFE  6E8C               	movwf	140,c	;volatile
  3817                           
  3818                           ;main.c: 373:                             break;
  3819   000F00  EF09  F008         	goto	i2l2418
  3820   000F04                     i2l2378:
  3821                           
  3822                           ;main.c: 375:                             LATD = LATD ^ 2;
  3823   000F04  508C               	movf	140,w,c	;volatile
  3824   000F06  0A02               	xorlw	2
  3825   000F08  6E8C               	movwf	140,c	;volatile
  3826                           
  3827                           ;main.c: 376:                             break;
  3828   000F0A  EF09  F008         	goto	i2l2418
  3829   000F0E                     i2l2380:
  3830                           
  3831                           ;main.c: 378:                             LATD = LATD ^ 4;
  3832   000F0E  508C               	movf	140,w,c	;volatile
  3833   000F10  0A04               	xorlw	4
  3834   000F12  6E8C               	movwf	140,c	;volatile
  3835                           
  3836                           ;main.c: 379:                             break;
  3837   000F14  EF09  F008         	goto	i2l2418
  3838   000F18                     i2l2382:
  3839                           
  3840                           ;main.c: 381:                             LATC = LATC ^ 1;
  3841   000F18  508B               	movf	139,w,c	;volatile
  3842   000F1A  0A01               	xorlw	1
  3843   000F1C  6E8B               	movwf	139,c	;volatile
  3844                           
  3845                           ;main.c: 382:                             break;
  3846   000F1E  EF09  F008         	goto	i2l2418
  3847   000F22                     i2l2384:
  3848                           
  3849                           ;main.c: 384:                             LATC = LATC ^ 2;
  3850   000F22  508B               	movf	139,w,c	;volatile
  3851   000F24  0A02               	xorlw	2
  3852   000F26  6E8B               	movwf	139,c	;volatile
  3853                           
  3854                           ;main.c: 385:                             break;
  3855   000F28  EF09  F008         	goto	i2l2418
  3856   000F2C                     i2l2386:
  3857                           
  3858                           ;main.c: 387:                             LATC = LATC ^ 4;
  3859   000F2C  508B               	movf	139,w,c	;volatile
  3860   000F2E  0A04               	xorlw	4
  3861   000F30  6E8B               	movwf	139,c	;volatile
  3862                           
  3863                           ;main.c: 388:                             break;
  3864   000F32  EF09  F008         	goto	i2l2418
  3865   000F36                     i2l2388:
  3866                           
  3867                           ;main.c: 390:                             LATA = LATA ^ 1;
  3868   000F36  5089               	movf	137,w,c	;volatile
  3869   000F38  0A01               	xorlw	1
  3870   000F3A  6E89               	movwf	137,c	;volatile
  3871                           
  3872                           ;main.c: 391:                             break;
  3873   000F3C  EF09  F008         	goto	i2l2418
  3874   000F40                     i2l2390:
  3875                           
  3876                           ;main.c: 393:                             LATA = LATA ^ 2;
  3877   000F40  5089               	movf	137,w,c	;volatile
  3878   000F42  0A02               	xorlw	2
  3879   000F44  6E89               	movwf	137,c	;volatile
  3880                           
  3881                           ;main.c: 394:                             break;
  3882   000F46  EF09  F008         	goto	i2l2418
  3883   000F4A                     i2l2392:
  3884                           
  3885                           ;main.c: 396:                             LATA = LATA ^ 4;
  3886   000F4A  5089               	movf	137,w,c	;volatile
  3887   000F4C  0A04               	xorlw	4
  3888   000F4E  6E89               	movwf	137,c	;volatile
  3889                           
  3890                           ;main.c: 397:                             break;
  3891   000F50  EF09  F008         	goto	i2l2418
  3892   000F54                     i2l2396:
  3893   000F54  C036  F059         	movff	_player_b,??_Hi_ISR
  3894   000F58  C037  F05A         	movff	_player_b+1,??_Hi_ISR+1
  3895                           
  3896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3897                           ; Switch size 1, requested type "simple"
  3898                           ; Number of cases is 1, Range of values is 0 to 0
  3899                           ; switch strategies available:
  3900                           ; Name         Instructions Cycles
  3901                           ; simple_byte            4     3 (average)
  3902                           ;	Chosen strategy is simple_byte
  3903   000F5C  505A               	movf	(??_Hi_ISR+1)^0,w,c
  3904   000F5E  0A00               	xorlw	0	; case 0
  3905   000F60  B4D8               	btfsc	status,2,c
  3906   000F62  EFB5  F007         	goto	i2l2974
  3907   000F66  EF09  F008         	goto	i2l2418
  3908   000F6A                     i2l2974:
  3909                           
  3910                           ; Switch size 1, requested type "simple"
  3911                           ; Number of cases is 9, Range of values is 1 to 9
  3912                           ; switch strategies available:
  3913                           ; Name         Instructions Cycles
  3914                           ; simple_byte           28    15 (average)
  3915                           ;	Chosen strategy is simple_byte
  3916   000F6A  5059               	movf	??_Hi_ISR^0,w,c
  3917   000F6C  0A01               	xorlw	1	; case 1
  3918   000F6E  B4D8               	btfsc	status,2,c
  3919   000F70  EF7D  F007         	goto	i2l2376
  3920   000F74  0A03               	xorlw	3	; case 2
  3921   000F76  B4D8               	btfsc	status,2,c
  3922   000F78  EF82  F007         	goto	i2l2378
  3923   000F7C  0A01               	xorlw	1	; case 3
  3924   000F7E  B4D8               	btfsc	status,2,c
  3925   000F80  EF87  F007         	goto	i2l2380
  3926   000F84  0A07               	xorlw	7	; case 4
  3927   000F86  B4D8               	btfsc	status,2,c
  3928   000F88  EF8C  F007         	goto	i2l2382
  3929   000F8C  0A01               	xorlw	1	; case 5
  3930   000F8E  B4D8               	btfsc	status,2,c
  3931   000F90  EF91  F007         	goto	i2l2384
  3932   000F94  0A03               	xorlw	3	; case 6
  3933   000F96  B4D8               	btfsc	status,2,c
  3934   000F98  EF96  F007         	goto	i2l2386
  3935   000F9C  0A01               	xorlw	1	; case 7
  3936   000F9E  B4D8               	btfsc	status,2,c
  3937   000FA0  EF9B  F007         	goto	i2l2388
  3938   000FA4  0A0F               	xorlw	15	; case 8
  3939   000FA6  B4D8               	btfsc	status,2,c
  3940   000FA8  EFA0  F007         	goto	i2l2390
  3941   000FAC  0A01               	xorlw	1	; case 9
  3942   000FAE  B4D8               	btfsc	status,2,c
  3943   000FB0  EFA5  F007         	goto	i2l2392
  3944   000FB4  EF09  F008         	goto	i2l2418
  3945   000FB8                     i2l2398:
  3946                           
  3947                           ;main.c: 401:                             LATD = LATD ^ 1;
  3948   000FB8  508C               	movf	140,w,c	;volatile
  3949   000FBA  0A01               	xorlw	1
  3950   000FBC  6E8C               	movwf	140,c	;volatile
  3951                           
  3952                           ;main.c: 402:                             break;
  3953   000FBE  EF6A  F008         	goto	i2l2440
  3954   000FC2                     i2l2400:
  3955                           
  3956                           ;main.c: 404:                             LATD = LATD ^ 2;
  3957   000FC2  508C               	movf	140,w,c	;volatile
  3958   000FC4  0A02               	xorlw	2
  3959   000FC6  6E8C               	movwf	140,c	;volatile
  3960                           
  3961                           ;main.c: 405:                             break;
  3962   000FC8  EF6A  F008         	goto	i2l2440
  3963   000FCC                     i2l2402:
  3964                           
  3965                           ;main.c: 407:                             LATD = LATD ^ 4;
  3966   000FCC  508C               	movf	140,w,c	;volatile
  3967   000FCE  0A04               	xorlw	4
  3968   000FD0  6E8C               	movwf	140,c	;volatile
  3969                           
  3970                           ;main.c: 408:                             break;
  3971   000FD2  EF6A  F008         	goto	i2l2440
  3972   000FD6                     i2l2404:
  3973                           
  3974                           ;main.c: 410:                             LATC = LATC ^ 1;
  3975   000FD6  508B               	movf	139,w,c	;volatile
  3976   000FD8  0A01               	xorlw	1
  3977   000FDA  6E8B               	movwf	139,c	;volatile
  3978                           
  3979                           ;main.c: 411:                             break;
  3980   000FDC  EF6A  F008         	goto	i2l2440
  3981   000FE0                     i2l2406:
  3982                           
  3983                           ;main.c: 413:                             LATC = LATC ^ 2;
  3984   000FE0  508B               	movf	139,w,c	;volatile
  3985   000FE2  0A02               	xorlw	2
  3986   000FE4  6E8B               	movwf	139,c	;volatile
  3987                           
  3988                           ;main.c: 414:                             break;
  3989   000FE6  EF6A  F008         	goto	i2l2440
  3990   000FEA                     i2l2408:
  3991                           
  3992                           ;main.c: 416:                             LATC = LATC ^ 4;
  3993   000FEA  508B               	movf	139,w,c	;volatile
  3994   000FEC  0A04               	xorlw	4
  3995   000FEE  6E8B               	movwf	139,c	;volatile
  3996                           
  3997                           ;main.c: 417:                             break;
  3998   000FF0  EF6A  F008         	goto	i2l2440
  3999   000FF4                     i2l2410:
  4000                           
  4001                           ;main.c: 419:                             LATA = LATA ^ 1;
  4002   000FF4  5089               	movf	137,w,c	;volatile
  4003   000FF6  0A01               	xorlw	1
  4004   000FF8  6E89               	movwf	137,c	;volatile
  4005                           
  4006                           ;main.c: 420:                             break;
  4007   000FFA  EF6A  F008         	goto	i2l2440
  4008   000FFE                     i2l2412:
  4009                           
  4010                           ;main.c: 422:                             LATA = LATA ^ 2;
  4011   000FFE  5089               	movf	137,w,c	;volatile
  4012   001000  0A02               	xorlw	2
  4013   001002  6E89               	movwf	137,c	;volatile
  4014                           
  4015                           ;main.c: 423:                             break;
  4016   001004  EF6A  F008         	goto	i2l2440
  4017   001008                     i2l2414:
  4018                           
  4019                           ;main.c: 425:                             LATA = LATA ^ 4;
  4020   001008  5089               	movf	137,w,c	;volatile
  4021   00100A  0A04               	xorlw	4
  4022   00100C  6E89               	movwf	137,c	;volatile
  4023                           
  4024                           ;main.c: 426:                             break;
  4025   00100E  EF6A  F008         	goto	i2l2440
  4026   001012                     i2l2418:
  4027   001012  EE20  F038         	lfsr	2,_player_b+2
  4028   001016  CFDE F059          	movff	postinc2,??_Hi_ISR
  4029   00101A  CFDD F05A          	movff	postdec2,??_Hi_ISR+1
  4030                           
  4031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4032                           ; Switch size 1, requested type "simple"
  4033                           ; Number of cases is 1, Range of values is 0 to 0
  4034                           ; switch strategies available:
  4035                           ; Name         Instructions Cycles
  4036                           ; simple_byte            4     3 (average)
  4037                           ;	Chosen strategy is simple_byte
  4038   00101E  505A               	movf	(??_Hi_ISR+1)^0,w,c
  4039   001020  0A00               	xorlw	0	; case 0
  4040   001022  B4D8               	btfsc	status,2,c
  4041   001024  EF16  F008         	goto	i2l2976
  4042   001028  EF6A  F008         	goto	i2l2440
  4043   00102C                     i2l2976:
  4044                           
  4045                           ; Switch size 1, requested type "simple"
  4046                           ; Number of cases is 9, Range of values is 1 to 9
  4047                           ; switch strategies available:
  4048                           ; Name         Instructions Cycles
  4049                           ; simple_byte           28    15 (average)
  4050                           ;	Chosen strategy is simple_byte
  4051   00102C  5059               	movf	??_Hi_ISR^0,w,c
  4052   00102E  0A01               	xorlw	1	; case 1
  4053   001030  B4D8               	btfsc	status,2,c
  4054   001032  EFDC  F007         	goto	i2l2398
  4055   001036  0A03               	xorlw	3	; case 2
  4056   001038  B4D8               	btfsc	status,2,c
  4057   00103A  EFE1  F007         	goto	i2l2400
  4058   00103E  0A01               	xorlw	1	; case 3
  4059   001040  B4D8               	btfsc	status,2,c
  4060   001042  EFE6  F007         	goto	i2l2402
  4061   001046  0A07               	xorlw	7	; case 4
  4062   001048  B4D8               	btfsc	status,2,c
  4063   00104A  EFEB  F007         	goto	i2l2404
  4064   00104E  0A01               	xorlw	1	; case 5
  4065   001050  B4D8               	btfsc	status,2,c
  4066   001052  EFF0  F007         	goto	i2l2406
  4067   001056  0A03               	xorlw	3	; case 6
  4068   001058  B4D8               	btfsc	status,2,c
  4069   00105A  EFF5  F007         	goto	i2l2408
  4070   00105E  0A01               	xorlw	1	; case 7
  4071   001060  B4D8               	btfsc	status,2,c
  4072   001062  EFFA  F007         	goto	i2l2410
  4073   001066  0A0F               	xorlw	15	; case 8
  4074   001068  B4D8               	btfsc	status,2,c
  4075   00106A  EFFF  F007         	goto	i2l2412
  4076   00106E  0A01               	xorlw	1	; case 9
  4077   001070  B4D8               	btfsc	status,2,c
  4078   001072  EF04  F008         	goto	i2l2414
  4079   001076  EF6A  F008         	goto	i2l2440
  4080   00107A                     i2l2420:
  4081                           
  4082                           ;main.c: 430:                             LATD = LATD ^ 1;
  4083   00107A  508C               	movf	140,w,c	;volatile
  4084   00107C  0A01               	xorlw	1
  4085   00107E  6E8C               	movwf	140,c	;volatile
  4086                           
  4087                           ;main.c: 431:                             break;
  4088   001080  EF9E  F008         	goto	i2l233
  4089   001084                     i2l2422:
  4090                           
  4091                           ;main.c: 433:                             LATD = LATD ^ 2;
  4092   001084  508C               	movf	140,w,c	;volatile
  4093   001086  0A02               	xorlw	2
  4094   001088  6E8C               	movwf	140,c	;volatile
  4095                           
  4096                           ;main.c: 434:                             break;
  4097   00108A  EF9E  F008         	goto	i2l233
  4098   00108E                     i2l2424:
  4099                           
  4100                           ;main.c: 436:                             LATD = LATD ^ 4;
  4101   00108E  508C               	movf	140,w,c	;volatile
  4102   001090  0A04               	xorlw	4
  4103   001092  6E8C               	movwf	140,c	;volatile
  4104                           
  4105                           ;main.c: 437:                             break;
  4106   001094  EF9E  F008         	goto	i2l233
  4107   001098                     i2l2426:
  4108                           
  4109                           ;main.c: 439:                             LATC = LATC ^ 1;
  4110   001098  508B               	movf	139,w,c	;volatile
  4111   00109A  0A01               	xorlw	1
  4112   00109C  6E8B               	movwf	139,c	;volatile
  4113                           
  4114                           ;main.c: 440:                             break;
  4115   00109E  EF9E  F008         	goto	i2l233
  4116   0010A2                     i2l2428:
  4117                           
  4118                           ;main.c: 442:                             LATC = LATC ^ 2;
  4119   0010A2  508B               	movf	139,w,c	;volatile
  4120   0010A4  0A02               	xorlw	2
  4121   0010A6  6E8B               	movwf	139,c	;volatile
  4122                           
  4123                           ;main.c: 443:                             break;
  4124   0010A8  EF9E  F008         	goto	i2l233
  4125   0010AC                     i2l2430:
  4126                           
  4127                           ;main.c: 445:                             LATC = LATC ^ 4;
  4128   0010AC  508B               	movf	139,w,c	;volatile
  4129   0010AE  0A04               	xorlw	4
  4130   0010B0  6E8B               	movwf	139,c	;volatile
  4131                           
  4132                           ;main.c: 446:                             break;
  4133   0010B2  EF9E  F008         	goto	i2l233
  4134   0010B6                     i2l2432:
  4135                           
  4136                           ;main.c: 448:                             LATA = LATA ^ 1;
  4137   0010B6  5089               	movf	137,w,c	;volatile
  4138   0010B8  0A01               	xorlw	1
  4139   0010BA  6E89               	movwf	137,c	;volatile
  4140                           
  4141                           ;main.c: 449:                             break;
  4142   0010BC  EF9E  F008         	goto	i2l233
  4143   0010C0                     i2l2434:
  4144                           
  4145                           ;main.c: 451:                             LATA = LATA ^ 2;
  4146   0010C0  5089               	movf	137,w,c	;volatile
  4147   0010C2  0A02               	xorlw	2
  4148   0010C4  6E89               	movwf	137,c	;volatile
  4149                           
  4150                           ;main.c: 452:                             break;
  4151   0010C6  EF9E  F008         	goto	i2l233
  4152   0010CA                     i2l2436:
  4153                           
  4154                           ;main.c: 454:                             LATA = LATA ^ 4;
  4155   0010CA  5089               	movf	137,w,c	;volatile
  4156   0010CC  0A04               	xorlw	4
  4157   0010CE  6E89               	movwf	137,c	;volatile
  4158                           
  4159                           ;main.c: 455:                             break;
  4160   0010D0  EF9E  F008         	goto	i2l233
  4161   0010D4                     i2l2440:
  4162   0010D4  EE20  F03A         	lfsr	2,_player_b+4
  4163   0010D8  CFDE F059          	movff	postinc2,??_Hi_ISR
  4164   0010DC  CFDD F05A          	movff	postdec2,??_Hi_ISR+1
  4165                           
  4166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4167                           ; Switch size 1, requested type "simple"
  4168                           ; Number of cases is 1, Range of values is 0 to 0
  4169                           ; switch strategies available:
  4170                           ; Name         Instructions Cycles
  4171                           ; simple_byte            4     3 (average)
  4172                           ;	Chosen strategy is simple_byte
  4173   0010E0  505A               	movf	(??_Hi_ISR+1)^0,w,c
  4174   0010E2  0A00               	xorlw	0	; case 0
  4175   0010E4  B4D8               	btfsc	status,2,c
  4176   0010E6  EF77  F008         	goto	i2l2978
  4177   0010EA  EF9E  F008         	goto	i2l233
  4178   0010EE                     i2l2978:
  4179                           
  4180                           ; Switch size 1, requested type "simple"
  4181                           ; Number of cases is 9, Range of values is 1 to 9
  4182                           ; switch strategies available:
  4183                           ; Name         Instructions Cycles
  4184                           ; simple_byte           28    15 (average)
  4185                           ;	Chosen strategy is simple_byte
  4186   0010EE  5059               	movf	??_Hi_ISR^0,w,c
  4187   0010F0  0A01               	xorlw	1	; case 1
  4188   0010F2  B4D8               	btfsc	status,2,c
  4189   0010F4  EF3D  F008         	goto	i2l2420
  4190   0010F8  0A03               	xorlw	3	; case 2
  4191   0010FA  B4D8               	btfsc	status,2,c
  4192   0010FC  EF42  F008         	goto	i2l2422
  4193   001100  0A01               	xorlw	1	; case 3
  4194   001102  B4D8               	btfsc	status,2,c
  4195   001104  EF47  F008         	goto	i2l2424
  4196   001108  0A07               	xorlw	7	; case 4
  4197   00110A  B4D8               	btfsc	status,2,c
  4198   00110C  EF4C  F008         	goto	i2l2426
  4199   001110  0A01               	xorlw	1	; case 5
  4200   001112  B4D8               	btfsc	status,2,c
  4201   001114  EF51  F008         	goto	i2l2428
  4202   001118  0A03               	xorlw	3	; case 6
  4203   00111A  B4D8               	btfsc	status,2,c
  4204   00111C  EF56  F008         	goto	i2l2430
  4205   001120  0A01               	xorlw	1	; case 7
  4206   001122  B4D8               	btfsc	status,2,c
  4207   001124  EF5B  F008         	goto	i2l2432
  4208   001128  0A0F               	xorlw	15	; case 8
  4209   00112A  B4D8               	btfsc	status,2,c
  4210   00112C  EF60  F008         	goto	i2l2434
  4211   001130  0A01               	xorlw	1	; case 9
  4212   001132  B4D8               	btfsc	status,2,c
  4213   001134  EF65  F008         	goto	i2l2436
  4214   001138  EF9E  F008         	goto	i2l233
  4215   00113C                     i2l233:
  4216                           
  4217                           ;main.c: 457:         PIR1bits.TMR2IF = 0;
  4218   00113C  929E               	bcf	158,1,c	;volatile
  4219   00113E                     i2l2442:
  4220                           
  4221                           ;main.c: 459:     _delay((unsigned long)((10)*(1000000/4000.0)));
  4222   00113E  0E04               	movlw	4
  4223   001140  6E59               	movwf	??_Hi_ISR^0,c
  4224   001142  0E3E               	movlw	62
  4225   001144                     i2u145_47:
  4226   001144  2EE8               	decfsz	wreg,f,c
  4227   001146  D7FE               	bra	i2u145_47
  4228   001148  2E59               	decfsz	??_Hi_ISR^0,f,c
  4229   00114A  D7FC               	bra	i2u145_47
  4230   00114C  C064  FFF5         	movff	??_Hi_ISR+11,tablat
  4231   001150  C063  FFF8         	movff	??_Hi_ISR+10,tblptru
  4232   001154  C062  FFF7         	movff	??_Hi_ISR+9,tblptrh
  4233   001158  C061  FFF6         	movff	??_Hi_ISR+8,tblptrl
  4234   00115C  C060  FFF4         	movff	??_Hi_ISR+7,prodh
  4235   001160  C05F  FFF3         	movff	??_Hi_ISR+6,prodl
  4236   001164  C05E  FFDA         	movff	??_Hi_ISR+5,fsr2h
  4237   001168  C05D  FFD9         	movff	??_Hi_ISR+4,fsr2l
  4238   00116C  C05C  FFE2         	movff	??_Hi_ISR+3,fsr1h
  4239   001170  C05B  FFE1         	movff	??_Hi_ISR+2,fsr1l
  4240   001174  9268               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4241   001176  0011               	retfie		f
  4242   001178                     __end_of_Hi_ISR:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function i2_UART_Write_Text *****************
  4246 ;; Defined at:
  4247 ;;		line 76 in file "setting_hardaware/uart.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  text            1    1[COMRAM] PTR unsigned char 
  4250 ;;		 -> STR_5(15), STR_4(15), STR_3(16), STR_2(16), 
  4251 ;;		 -> STR_1(16), 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  i               2    3[COMRAM] int 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4263 ;;      Params:         1       0       0       0       0       0       0
  4264 ;;      Locals:         2       0       0       0       0       0       0
  4265 ;;      Temps:          1       0       0       0       0       0       0
  4266 ;;      Totals:         4       0       0       0       0       0       0
  4267 ;;Total ram usage:        4 bytes
  4268 ;; Hardware stack levels used: 1
  4269 ;; Hardware stack levels required when called: 1
  4270 ;; This function calls:
  4271 ;;		i2_UART_Write
  4272 ;; This function is called by:
  4273 ;;		_Hi_ISR
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text16
  4278   0016CC                     __ptext16:
  4279                           	callstack 0
  4280   0016CC                     i2_UART_Write_Text:
  4281                           	callstack 23
  4282   0016CC                     
  4283                           ;setting_hardaware/uart.c: 77:     for(int i=0;text[i]!='\0';i++)
  4284   0016CC  0E00               	movlw	0
  4285   0016CE  6E46               	movwf	(i2UART_Write_Text@i+1)^0,c
  4286   0016D0  0E00               	movlw	0
  4287   0016D2  6E45               	movwf	i2UART_Write_Text@i^0,c
  4288   0016D4  EF79  F00B         	goto	i2l2066
  4289   0016D8                     i2l2062:
  4290                           
  4291                           ;setting_hardaware/uart.c: 78:         UART_Write(text[i]);
  4292   0016D8  5043               	movf	i2UART_Write_Text@text^0,w,c
  4293   0016DA  2445               	addwf	i2UART_Write_Text@i^0,w,c
  4294   0016DC  6E44               	movwf	??i2_UART_Write_Text^0,c
  4295   0016DE  C044  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  4296   0016E2                     	if	1	;There is more than 1 active tblptr byte
  4297   0016E2  0E06               	movlw	high __smallconst
  4298   0016E4  6EF7               	movwf	tblptrh,c
  4299   0016E6                     	endif
  4300   0016E6                     	if	0	;tblptru may be non-zero
  4301   0016E6                     	endif
  4302   0016E6                     	if	0	;tblptru may be non-zero
  4303   0016E6                     	endif
  4304   0016E6  0008               	tblrd		*
  4305   0016E8  50F5               	movf	tablat,w,c
  4306   0016EA  EC10  F00C         	call	i2_UART_Write
  4307   0016EE  4A45               	infsnz	i2UART_Write_Text@i^0,f,c
  4308   0016F0  2A46               	incf	(i2UART_Write_Text@i+1)^0,f,c
  4309   0016F2                     i2l2066:
  4310   0016F2  5043               	movf	i2UART_Write_Text@text^0,w,c
  4311   0016F4  2445               	addwf	i2UART_Write_Text@i^0,w,c
  4312   0016F6  6E44               	movwf	??i2_UART_Write_Text^0,c
  4313   0016F8  C044  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  4314   0016FC                     	if	1	;There is more than 1 active tblptr byte
  4315   0016FC  0E06               	movlw	high __smallconst
  4316   0016FE  6EF7               	movwf	tblptrh,c
  4317   001700                     	endif
  4318   001700                     	if	0	;tblptru may be non-zero
  4319   001700                     	endif
  4320   001700                     	if	0	;tblptru may be non-zero
  4321   001700                     	endif
  4322   001700  0008               	tblrd		*
  4323   001702  50F5               	movf	tablat,w,c
  4324   001704  0900               	iorlw	0
  4325   001706  A4D8               	btfss	status,2,c
  4326   001708  EF88  F00B         	goto	i2u107_41
  4327   00170C  EF8A  F00B         	goto	i2u107_40
  4328   001710                     i2u107_41:
  4329   001710  EF6C  F00B         	goto	i2l2062
  4330   001714                     i2u107_40:
  4331   001714  0012               	return		;funcret
  4332   001716                     __end_ofi2_UART_Write_Text:
  4333                           	callstack 0
  4334                           
  4335 ;; *************** function i2_MyusartRead *****************
  4336 ;; Defined at:
  4337 ;;		line 87 in file "setting_hardaware/uart.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;		None
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  temp            1    2[COMRAM] unsigned char 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      void 
  4344 ;; Registers used:
  4345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4351 ;;      Params:         0       0       0       0       0       0       0
  4352 ;;      Locals:         1       0       0       0       0       0       0
  4353 ;;      Temps:          0       0       0       0       0       0       0
  4354 ;;      Totals:         1       0       0       0       0       0       0
  4355 ;;Total ram usage:        1 bytes
  4356 ;; Hardware stack levels used: 1
  4357 ;; Hardware stack levels required when called: 1
  4358 ;; This function calls:
  4359 ;;		i2_ClearBuffer
  4360 ;;		i2_UART_Write
  4361 ;; This function is called by:
  4362 ;;		_Hi_ISR
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text17
  4367   00155E                     __ptext17:
  4368                           	callstack 0
  4369   00155E                     i2_MyusartRead:
  4370                           	callstack 23
  4371   00155E                     
  4372                           ;setting_hardaware/uart.c: 90:     char temp = RCREG;
  4373   00155E  CFAE F044          	movff	4014,i2MyusartRead@temp	;volatile
  4374   001562                     
  4375                           ;setting_hardaware/uart.c: 91:     if (temp == '\r'){
  4376   001562  0E0D               	movlw	13
  4377   001564  1844               	xorwf	i2MyusartRead@temp^0,w,c
  4378   001566  A4D8               	btfss	status,2,c
  4379   001568  EFB8  F00A         	goto	i2u108_41
  4380   00156C  EFBA  F00A         	goto	i2u108_40
  4381   001570                     i2u108_41:
  4382   001570  EFC4  F00A         	goto	i2l2076
  4383   001574                     i2u108_40:
  4384   001574                     
  4385                           ;setting_hardaware/uart.c: 92:         UART_Write('\n');
  4386   001574  0E0A               	movlw	10
  4387   001576  EC10  F00C         	call	i2_UART_Write
  4388                           
  4389                           ;setting_hardaware/uart.c: 93:         UART_Write('\r');
  4390   00157A  0E0D               	movlw	13
  4391   00157C  EC10  F00C         	call	i2_UART_Write
  4392   001580                     i2l2074:
  4393                           
  4394                           ;setting_hardaware/uart.c: 94:         ClearBuffer();
  4395   001580  ECAA  F00B         	call	i2_ClearBuffer	;wreg free
  4396                           
  4397                           ;setting_hardaware/uart.c: 95:     }
  4398   001584  EFE2  F00A         	goto	i2l380
  4399   001588                     i2l2076:
  4400                           
  4401                           ;setting_hardaware/uart.c: 97:         UART_Write(temp);
  4402   001588  5044               	movf	i2MyusartRead@temp^0,w,c
  4403   00158A  EC10  F00C         	call	i2_UART_Write
  4404   00158E                     
  4405                           ;setting_hardaware/uart.c: 98:         if(lenStr < 9) {
  4406   00158E  BE08               	btfsc	(_lenStr+1)^0,7,c
  4407   001590  EFD5  F00A         	goto	i2u109_40
  4408   001594  5008               	movf	(_lenStr+1)^0,w,c
  4409   001596  E107               	bnz	i2u109_41
  4410   001598  0E09               	movlw	9
  4411   00159A  5C07               	subwf	_lenStr^0,w,c
  4412   00159C  B0D8               	btfsc	status,0,c
  4413   00159E  EFD3  F00A         	goto	i2u109_41
  4414   0015A2  EFD5  F00A         	goto	i2u109_40
  4415   0015A6                     i2u109_41:
  4416   0015A6  EFC0  F00A         	goto	i2l2074
  4417   0015AA                     i2u109_40:
  4418   0015AA                     
  4419                           ;setting_hardaware/uart.c: 99:             mystring[lenStr++] = temp;
  4420   0015AA  5007               	movf	_lenStr^0,w,c
  4421   0015AC  0F0E               	addlw	low _mystring
  4422   0015AE  6ED9               	movwf	fsr2l,c
  4423   0015B0  6ADA               	clrf	fsr2h,c
  4424   0015B2  C044  FFDF         	movff	i2MyusartRead@temp,indf2
  4425   0015B6  4A07               	infsnz	_lenStr^0,f,c
  4426   0015B8  2A08               	incf	(_lenStr+1)^0,f,c
  4427   0015BA                     
  4428                           ;setting_hardaware/uart.c: 100:             mystring[lenStr] = '\0';
  4429   0015BA  5007               	movf	_lenStr^0,w,c
  4430   0015BC  0F0E               	addlw	low _mystring
  4431   0015BE  6ED9               	movwf	fsr2l,c
  4432   0015C0  6ADA               	clrf	fsr2h,c
  4433   0015C2  6ADF               	clrf	indf2,c
  4434   0015C4                     i2l380:
  4435   0015C4  0012               	return		;funcret
  4436   0015C6                     __end_ofi2_MyusartRead:
  4437                           	callstack 0
  4438                           
  4439 ;; *************** function i2_UART_Write *****************
  4440 ;; Defined at:
  4441 ;;		line 69 in file "setting_hardaware/uart.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  data            1    wreg     unsigned char 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  data            1    0[COMRAM] unsigned char 
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      void 
  4448 ;; Registers used:
  4449 ;;		wreg
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4455 ;;      Params:         0       0       0       0       0       0       0
  4456 ;;      Locals:         1       0       0       0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0
  4458 ;;      Totals:         1       0       0       0       0       0       0
  4459 ;;Total ram usage:        1 bytes
  4460 ;; Hardware stack levels used: 1
  4461 ;; This function calls:
  4462 ;;		Nothing
  4463 ;; This function is called by:
  4464 ;;		i2_UART_Write_Text
  4465 ;;		i2_MyusartRead
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text18
  4470   001820                     __ptext18:
  4471                           	callstack 0
  4472   001820                     i2_UART_Write:
  4473                           	callstack 23
  4474                           
  4475                           ;incstack = 0
  4476                           ;i2UART_Write@data stored from wreg
  4477   001820  6E42               	movwf	i2UART_Write@data^0,c
  4478   001822                     i2l359:
  4479   001822  A2AC               	btfss	172,1,c	;volatile
  4480   001824  EF16  F00C         	goto	i2u71_41
  4481   001828  EF18  F00C         	goto	i2u71_40
  4482   00182C                     i2u71_41:
  4483   00182C  EF11  F00C         	goto	i2l359
  4484   001830                     i2u71_40:
  4485   001830                     
  4486                           ;setting_hardaware/uart.c: 72:     TXREG = data;
  4487   001830  C042  FFAD         	movff	i2UART_Write@data,4013	;volatile
  4488   001834  0012               	return		;funcret
  4489   001836                     __end_ofi2_UART_Write:
  4490                           	callstack 0
  4491                           
  4492 ;; *************** function i2_ClearBuffer *****************
  4493 ;; Defined at:
  4494 ;;		line 81 in file "setting_hardaware/uart.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;		None
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  i               2    0[COMRAM] int 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4508 ;;      Params:         0       0       0       0       0       0       0
  4509 ;;      Locals:         2       0       0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0
  4511 ;;      Totals:         2       0       0       0       0       0       0
  4512 ;;Total ram usage:        2 bytes
  4513 ;; Hardware stack levels used: 1
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		i2_MyusartRead
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text19
  4522   001754                     __ptext19:
  4523                           	callstack 0
  4524   001754                     i2_ClearBuffer:
  4525                           	callstack 23
  4526   001754                     
  4527                           ;setting_hardaware/uart.c: 82:     for(int i = 0; i < 10 ; i++)
  4528   001754  0E00               	movlw	0
  4529   001756  6E43               	movwf	(i2ClearBuffer@i+1)^0,c
  4530   001758  0E00               	movlw	0
  4531   00175A  6E42               	movwf	i2ClearBuffer@i^0,c
  4532   00175C                     i2l1218:
  4533                           
  4534                           ;setting_hardaware/uart.c: 83:         mystring[i] = '\0';
  4535   00175C  5042               	movf	i2ClearBuffer@i^0,w,c
  4536   00175E  0F0E               	addlw	low _mystring
  4537   001760  6ED9               	movwf	fsr2l,c
  4538   001762  6ADA               	clrf	fsr2h,c
  4539   001764  6ADF               	clrf	indf2,c
  4540   001766  4A42               	infsnz	i2ClearBuffer@i^0,f,c
  4541   001768  2A43               	incf	(i2ClearBuffer@i+1)^0,f,c
  4542   00176A  BE43               	btfsc	(i2ClearBuffer@i+1)^0,7,c
  4543   00176C  EFC1  F00B         	goto	i2u6_41
  4544   001770  5043               	movf	(i2ClearBuffer@i+1)^0,w,c
  4545   001772  E109               	bnz	i2u6_40
  4546   001774  0E0A               	movlw	10
  4547   001776  5C42               	subwf	i2ClearBuffer@i^0,w,c
  4548   001778  A0D8               	btfss	status,0,c
  4549   00177A  EFC1  F00B         	goto	i2u6_41
  4550   00177E  EFC3  F00B         	goto	i2u6_40
  4551   001782                     i2u6_41:
  4552   001782  EFAE  F00B         	goto	i2l1218
  4553   001786                     i2u6_40:
  4554   001786                     
  4555                           ;setting_hardaware/uart.c: 84:     lenStr = 0;
  4556   001786  0E00               	movlw	0
  4557   001788  6E08               	movwf	(_lenStr+1)^0,c
  4558   00178A  0E00               	movlw	0
  4559   00178C  6E07               	movwf	_lenStr^0,c
  4560   00178E  0012               	return		;funcret
  4561   001790                     __end_ofi2_ClearBuffer:
  4562                           	callstack 0
  4563                           
  4564 ;; *************** function _strcpy *****************
  4565 ;; Defined at:
  4566 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  dest            1    2[COMRAM] PTR unsigned char 
  4569 ;;		 -> str(20), 
  4570 ;;  src             1    3[COMRAM] PTR const unsigned char 
  4571 ;;		 -> mystring(20), 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  d               1    4[COMRAM] PTR unsigned char 
  4574 ;;		 -> str(20), 
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  1    2[COMRAM] PTR unsigned char 
  4577 ;; Registers used:
  4578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4584 ;;      Params:         2       0       0       0       0       0       0
  4585 ;;      Locals:         1       0       0       0       0       0       0
  4586 ;;      Temps:          0       0       0       0       0       0       0
  4587 ;;      Totals:         3       0       0       0       0       0       0
  4588 ;;Total ram usage:        3 bytes
  4589 ;; Hardware stack levels used: 1
  4590 ;; This function calls:
  4591 ;;		Nothing
  4592 ;; This function is called by:
  4593 ;;		_Hi_ISR
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text20
  4598   001790                     __ptext20:
  4599                           	callstack 0
  4600   001790                     _strcpy:
  4601                           	callstack 24
  4602   001790  C044  F046         	movff	strcpy@dest,strcpy@d
  4603   001794                     i2l2036:
  4604   001794  2A45               	incf	strcpy@src^0,f,c
  4605   001796  0445               	decf	strcpy@src^0,w,c
  4606   001798  6ED9               	movwf	fsr2l,c
  4607   00179A  6ADA               	clrf	fsr2h,c
  4608   00179C  2A46               	incf	strcpy@d^0,f,c
  4609   00179E  0446               	decf	strcpy@d^0,w,c
  4610   0017A0  6EE1               	movwf	fsr1l,c
  4611   0017A2  6AE2               	clrf	fsr1h,c
  4612   0017A4  CFDF FFE7          	movff	indf2,indf1
  4613   0017A8  50E7               	movf	indf1,w,c
  4614   0017AA  A4D8               	btfss	status,2,c
  4615   0017AC  EFDA  F00B         	goto	i2u104_41
  4616   0017B0  EFDC  F00B         	goto	i2u104_40
  4617   0017B4                     i2u104_41:
  4618   0017B4  EFCA  F00B         	goto	i2l2036
  4619   0017B8                     i2u104_40:
  4620   0017B8  0012               	return		;funcret
  4621   0017BA                     __end_of_strcpy:
  4622                           	callstack 0
  4623                           
  4624 ;; *************** function _JUDGE *****************
  4625 ;; Defined at:
  4626 ;;		line 19 in file "main.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;  turn            2    0[COMRAM] int 
  4629 ;;  player          1    2[COMRAM] PTR int 
  4630 ;;		 -> player_b(6), player_a(6), 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  x               2    8[COMRAM] int 
  4633 ;;  j               2   12[COMRAM] int 
  4634 ;;  i               2   15[COMRAM] int 
  4635 ;;  arr             6   17[COMRAM] int [3]
  4636 ;;  a               2   10[COMRAM] int 
  4637 ;;  win             1   14[COMRAM] _Bool 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  2    0[COMRAM] int 
  4640 ;; Registers used:
  4641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4647 ;;      Params:         3       0       0       0       0       0       0
  4648 ;;      Locals:        15       0       0       0       0       0       0
  4649 ;;      Temps:          5       0       0       0       0       0       0
  4650 ;;      Totals:        23       0       0       0       0       0       0
  4651 ;;Total ram usage:       23 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_Hi_ISR
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text21
  4661   001178                     __ptext21:
  4662                           	callstack 0
  4663   001178                     _JUDGE:
  4664                           	callstack 24
  4665   001178                     
  4666                           ;main.c: 20:     int arr[3];;main.c: 21:     arr[0] = player[0];
  4667   001178  5044               	movf	JUDGE@player^0,w,c
  4668   00117A  6ED9               	movwf	fsr2l,c
  4669   00117C  6ADA               	clrf	fsr2h,c
  4670   00117E  CFDE F053          	movff	postinc2,JUDGE@arr
  4671   001182  CFDD F054          	movff	postdec2,JUDGE@arr+1
  4672   001186                     
  4673                           ;main.c: 22:     arr[1] = player[1];
  4674   001186  5044               	movf	JUDGE@player^0,w,c
  4675   001188  6ED9               	movwf	fsr2l,c
  4676   00118A  6ADA               	clrf	fsr2h,c
  4677   00118C  0E02               	movlw	2
  4678   00118E  26D9               	addwf	fsr2l,f,c
  4679   001190  CFDE F055          	movff	postinc2,JUDGE@arr+2
  4680   001194  CFDD F056          	movff	postdec2,JUDGE@arr+3
  4681   001198                     
  4682                           ;main.c: 23:     arr[2] = player[2];
  4683   001198  5044               	movf	JUDGE@player^0,w,c
  4684   00119A  6ED9               	movwf	fsr2l,c
  4685   00119C  6ADA               	clrf	fsr2h,c
  4686   00119E  0E04               	movlw	4
  4687   0011A0  26D9               	addwf	fsr2l,f,c
  4688   0011A2  CFDE F057          	movff	postinc2,JUDGE@arr+4
  4689   0011A6  CFDD F058          	movff	postdec2,JUDGE@arr+5
  4690   0011AA                     
  4691                           ;main.c: 25:     for (int i = 0; i < 3; ++i) {
  4692   0011AA  0E00               	movlw	0
  4693   0011AC  6E52               	movwf	(JUDGE@i+1)^0,c
  4694   0011AE  0E00               	movlw	0
  4695   0011B0  6E51               	movwf	JUDGE@i^0,c
  4696   0011B2                     i2l1914:
  4697                           
  4698                           ;main.c: 26:         for (int j = 0; j < i; ++j) {
  4699   0011B2  0E00               	movlw	0
  4700   0011B4  6E4F               	movwf	(JUDGE@j+1)^0,c
  4701   0011B6  0E00               	movlw	0
  4702   0011B8  6E4E               	movwf	JUDGE@j^0,c
  4703   0011BA  EF20  F009         	goto	i2l1926
  4704   0011BE                     i2l1916:
  4705                           
  4706                           ;main.c: 27:             if (arr[j] > arr[i]) {
  4707   0011BE  504E               	movf	JUDGE@j^0,w,c
  4708   0011C0  0D02               	mullw	2
  4709   0011C2  50F3               	movf	243,w,c
  4710   0011C4  0F53               	addlw	low JUDGE@arr
  4711   0011C6  6ED9               	movwf	fsr2l,c
  4712   0011C8  6ADA               	clrf	fsr2h,c
  4713   0011CA  5051               	movf	JUDGE@i^0,w,c
  4714   0011CC  0D02               	mullw	2
  4715   0011CE  50F3               	movf	243,w,c
  4716   0011D0  0F53               	addlw	low JUDGE@arr
  4717   0011D2  6EE1               	movwf	fsr1l,c
  4718   0011D4  6AE2               	clrf	fsr1h,c
  4719   0011D6  50DE               	movf	postinc2,w,c
  4720   0011D8  5CE6               	subwf	postinc1,w,c
  4721   0011DA  50E6               	movf	postinc1,w,c
  4722   0011DC  0A80               	xorlw	128
  4723   0011DE  6E49               	movwf	(??_JUDGE+4)^0,c
  4724   0011E0  50DE               	movf	postinc2,w,c
  4725   0011E2  0A80               	xorlw	128
  4726   0011E4  5849               	subwfb	(??_JUDGE+4)^0,w,c
  4727   0011E6  B0D8               	btfsc	status,0,c
  4728   0011E8  EFF8  F008         	goto	i2u72_41
  4729   0011EC  EFFA  F008         	goto	i2u72_40
  4730   0011F0                     i2u72_41:
  4731   0011F0  EF1E  F009         	goto	i2l1924
  4732   0011F4                     i2u72_40:
  4733   0011F4                     
  4734                           ;main.c: 28:                 int x = arr[j];
  4735   0011F4  504E               	movf	JUDGE@j^0,w,c
  4736   0011F6  0D02               	mullw	2
  4737   0011F8  50F3               	movf	243,w,c
  4738   0011FA  0F53               	addlw	low JUDGE@arr
  4739   0011FC  6ED9               	movwf	fsr2l,c
  4740   0011FE  6ADA               	clrf	fsr2h,c
  4741   001200  CFDE F04A          	movff	postinc2,JUDGE@x
  4742   001204  CFDD F04B          	movff	postdec2,JUDGE@x+1
  4743   001208                     
  4744                           ;main.c: 29:                     arr[j] = arr[i];
  4745   001208  5051               	movf	JUDGE@i^0,w,c
  4746   00120A  0D02               	mullw	2
  4747   00120C  50F3               	movf	243,w,c
  4748   00120E  0F53               	addlw	low JUDGE@arr
  4749   001210  6ED9               	movwf	fsr2l,c
  4750   001212  6ADA               	clrf	fsr2h,c
  4751   001214  504E               	movf	JUDGE@j^0,w,c
  4752   001216  0D02               	mullw	2
  4753   001218  50F3               	movf	243,w,c
  4754   00121A  0F53               	addlw	low JUDGE@arr
  4755   00121C  6EE1               	movwf	fsr1l,c
  4756   00121E  6AE2               	clrf	fsr1h,c
  4757   001220  CFDE FFE6          	movff	postinc2,postinc1
  4758   001224  CFDD FFE5          	movff	postdec2,postdec1
  4759   001228                     
  4760                           ;main.c: 30:                     arr[i] = x;
  4761   001228  5051               	movf	JUDGE@i^0,w,c
  4762   00122A  0D02               	mullw	2
  4763   00122C  50F3               	movf	243,w,c
  4764   00122E  0F53               	addlw	low JUDGE@arr
  4765   001230  6ED9               	movwf	fsr2l,c
  4766   001232  6ADA               	clrf	fsr2h,c
  4767   001234  C04A  FFDE         	movff	JUDGE@x,postinc2
  4768   001238  C04B  FFDD         	movff	JUDGE@x+1,postdec2
  4769   00123C                     i2l1924:
  4770                           
  4771                           ;main.c: 32:         }
  4772   00123C  4A4E               	infsnz	JUDGE@j^0,f,c
  4773   00123E  2A4F               	incf	(JUDGE@j+1)^0,f,c
  4774   001240                     i2l1926:
  4775   001240  5051               	movf	JUDGE@i^0,w,c
  4776   001242  5C4E               	subwf	JUDGE@j^0,w,c
  4777   001244  504F               	movf	(JUDGE@j+1)^0,w,c
  4778   001246  0A80               	xorlw	128
  4779   001248  6E45               	movwf	??_JUDGE^0,c
  4780   00124A  5052               	movf	(JUDGE@i+1)^0,w,c
  4781   00124C  0A80               	xorlw	128
  4782   00124E  5845               	subwfb	??_JUDGE^0,w,c
  4783   001250  A0D8               	btfss	status,0,c
  4784   001252  EF2D  F009         	goto	i2u73_41
  4785   001256  EF2F  F009         	goto	i2u73_40
  4786   00125A                     i2u73_41:
  4787   00125A  EFDF  F008         	goto	i2l1916
  4788   00125E                     i2u73_40:
  4789   00125E                     
  4790                           ;main.c: 33:     }
  4791   00125E  4A51               	infsnz	JUDGE@i^0,f,c
  4792   001260  2A52               	incf	(JUDGE@i+1)^0,f,c
  4793   001262  BE52               	btfsc	(JUDGE@i+1)^0,7,c
  4794   001264  EF3D  F009         	goto	i2u74_41
  4795   001268  5052               	movf	(JUDGE@i+1)^0,w,c
  4796   00126A  E109               	bnz	i2u74_40
  4797   00126C  0E03               	movlw	3
  4798   00126E  5C51               	subwf	JUDGE@i^0,w,c
  4799   001270  A0D8               	btfss	status,0,c
  4800   001272  EF3D  F009         	goto	i2u74_41
  4801   001276  EF3F  F009         	goto	i2u74_40
  4802   00127A                     i2u74_41:
  4803   00127A  EFD9  F008         	goto	i2l1914
  4804   00127E                     i2u74_40:
  4805   00127E                     
  4806                           ;main.c: 34:     int a = 0;
  4807   00127E  0E00               	movlw	0
  4808   001280  6E4D               	movwf	(JUDGE@a+1)^0,c
  4809   001282  0E00               	movlw	0
  4810   001284  6E4C               	movwf	JUDGE@a^0,c
  4811   001286                     
  4812                           ;main.c: 35:     _Bool win = 0;
  4813   001286  6A50               	clrf	JUDGE@win^0,c
  4814   001288                     
  4815                           ;main.c: 36:     if (arr[0]==1 && arr[1]==2 && arr[2]==3) win = 1;
  4816   001288  0453               	decf	JUDGE@arr^0,w,c
  4817   00128A  1054               	iorwf	(JUDGE@arr+1)^0,w,c
  4818   00128C  A4D8               	btfss	status,2,c
  4819   00128E  EF4B  F009         	goto	i2u75_41
  4820   001292  EF4D  F009         	goto	i2u75_40
  4821   001296                     i2u75_41:
  4822   001296  EF65  F009         	goto	i2l1944
  4823   00129A                     i2u75_40:
  4824   00129A  0E02               	movlw	2
  4825   00129C  1855               	xorwf	(JUDGE@arr+2)^0,w,c
  4826   00129E  1056               	iorwf	(JUDGE@arr+3)^0,w,c
  4827   0012A0  A4D8               	btfss	status,2,c
  4828   0012A2  EF55  F009         	goto	i2u76_41
  4829   0012A6  EF57  F009         	goto	i2u76_40
  4830   0012AA                     i2u76_41:
  4831   0012AA  EF65  F009         	goto	i2l1944
  4832   0012AE                     i2u76_40:
  4833   0012AE  0E03               	movlw	3
  4834   0012B0  1857               	xorwf	(JUDGE@arr+4)^0,w,c
  4835   0012B2  1058               	iorwf	(JUDGE@arr+5)^0,w,c
  4836   0012B4  A4D8               	btfss	status,2,c
  4837   0012B6  EF5F  F009         	goto	i2u77_41
  4838   0012BA  EF61  F009         	goto	i2u77_40
  4839   0012BE                     i2u77_41:
  4840   0012BE  EF65  F009         	goto	i2l1944
  4841   0012C2                     i2u77_40:
  4842   0012C2                     i2l1942:
  4843   0012C2  0E01               	movlw	1
  4844   0012C4  6E50               	movwf	JUDGE@win^0,c
  4845   0012C6  EF43  F00A         	goto	i2l2000
  4846   0012CA                     i2l1944:
  4847   0012CA  0E04               	movlw	4
  4848   0012CC  1853               	xorwf	JUDGE@arr^0,w,c
  4849   0012CE  1054               	iorwf	(JUDGE@arr+1)^0,w,c
  4850   0012D0  A4D8               	btfss	status,2,c
  4851   0012D2  EF6D  F009         	goto	i2u78_41
  4852   0012D6  EF6F  F009         	goto	i2u78_40
  4853   0012DA                     i2u78_41:
  4854   0012DA  EF85  F009         	goto	i2l1952
  4855   0012DE                     i2u78_40:
  4856   0012DE  0E05               	movlw	5
  4857   0012E0  1855               	xorwf	(JUDGE@arr+2)^0,w,c
  4858   0012E2  1056               	iorwf	(JUDGE@arr+3)^0,w,c
  4859   0012E4  A4D8               	btfss	status,2,c
  4860   0012E6  EF77  F009         	goto	i2u79_41
  4861   0012EA  EF79  F009         	goto	i2u79_40
  4862   0012EE                     i2u79_41:
  4863   0012EE  EF85  F009         	goto	i2l1952
  4864   0012F2                     i2u79_40:
  4865   0012F2  0E06               	movlw	6
  4866   0012F4  1857               	xorwf	(JUDGE@arr+4)^0,w,c
  4867   0012F6  1058               	iorwf	(JUDGE@arr+5)^0,w,c
  4868   0012F8  A4D8               	btfss	status,2,c
  4869   0012FA  EF81  F009         	goto	i2u80_41
  4870   0012FE  EF83  F009         	goto	i2u80_40
  4871   001302                     i2u80_41:
  4872   001302  EF85  F009         	goto	i2l1952
  4873   001306                     i2u80_40:
  4874   001306  EF61  F009         	goto	i2l1942
  4875   00130A                     i2l1952:
  4876   00130A  0E07               	movlw	7
  4877   00130C  1853               	xorwf	JUDGE@arr^0,w,c
  4878   00130E  1054               	iorwf	(JUDGE@arr+1)^0,w,c
  4879   001310  A4D8               	btfss	status,2,c
  4880   001312  EF8D  F009         	goto	i2u81_41
  4881   001316  EF8F  F009         	goto	i2u81_40
  4882   00131A                     i2u81_41:
  4883   00131A  EFA5  F009         	goto	i2l1960
  4884   00131E                     i2u81_40:
  4885   00131E  0E08               	movlw	8
  4886   001320  1855               	xorwf	(JUDGE@arr+2)^0,w,c
  4887   001322  1056               	iorwf	(JUDGE@arr+3)^0,w,c
  4888   001324  A4D8               	btfss	status,2,c
  4889   001326  EF97  F009         	goto	i2u82_41
  4890   00132A  EF99  F009         	goto	i2u82_40
  4891   00132E                     i2u82_41:
  4892   00132E  EFA5  F009         	goto	i2l1960
  4893   001332                     i2u82_40:
  4894   001332  0E09               	movlw	9
  4895   001334  1857               	xorwf	(JUDGE@arr+4)^0,w,c
  4896   001336  1058               	iorwf	(JUDGE@arr+5)^0,w,c
  4897   001338  A4D8               	btfss	status,2,c
  4898   00133A  EFA1  F009         	goto	i2u83_41
  4899   00133E  EFA3  F009         	goto	i2u83_40
  4900   001342                     i2u83_41:
  4901   001342  EFA5  F009         	goto	i2l1960
  4902   001346                     i2u83_40:
  4903   001346  EF61  F009         	goto	i2l1942
  4904   00134A                     i2l1960:
  4905   00134A  0453               	decf	JUDGE@arr^0,w,c
  4906   00134C  1054               	iorwf	(JUDGE@arr+1)^0,w,c
  4907   00134E  A4D8               	btfss	status,2,c
  4908   001350  EFAC  F009         	goto	i2u84_41
  4909   001354  EFAE  F009         	goto	i2u84_40
  4910   001358                     i2u84_41:
  4911   001358  EFC4  F009         	goto	i2l1968
  4912   00135C                     i2u84_40:
  4913   00135C  0E04               	movlw	4
  4914   00135E  1855               	xorwf	(JUDGE@arr+2)^0,w,c
  4915   001360  1056               	iorwf	(JUDGE@arr+3)^0,w,c
  4916   001362  A4D8               	btfss	status,2,c
  4917   001364  EFB6  F009         	goto	i2u85_41
  4918   001368  EFB8  F009         	goto	i2u85_40
  4919   00136C                     i2u85_41:
  4920   00136C  EFC4  F009         	goto	i2l1968
  4921   001370                     i2u85_40:
  4922   001370  0E07               	movlw	7
  4923   001372  1857               	xorwf	(JUDGE@arr+4)^0,w,c
  4924   001374  1058               	iorwf	(JUDGE@arr+5)^0,w,c
  4925   001376  A4D8               	btfss	status,2,c
  4926   001378  EFC0  F009         	goto	i2u86_41
  4927   00137C  EFC2  F009         	goto	i2u86_40
  4928   001380                     i2u86_41:
  4929   001380  EFC4  F009         	goto	i2l1968
  4930   001384                     i2u86_40:
  4931   001384  EF61  F009         	goto	i2l1942
  4932   001388                     i2l1968:
  4933   001388  0E02               	movlw	2
  4934   00138A  1853               	xorwf	JUDGE@arr^0,w,c
  4935   00138C  1054               	iorwf	(JUDGE@arr+1)^0,w,c
  4936   00138E  A4D8               	btfss	status,2,c
  4937   001390  EFCC  F009         	goto	i2u87_41
  4938   001394  EFCE  F009         	goto	i2u87_40
  4939   001398                     i2u87_41:
  4940   001398  EFE4  F009         	goto	i2l1976
  4941   00139C                     i2u87_40:
  4942   00139C  0E05               	movlw	5
  4943   00139E  1855               	xorwf	(JUDGE@arr+2)^0,w,c
  4944   0013A0  1056               	iorwf	(JUDGE@arr+3)^0,w,c
  4945   0013A2  A4D8               	btfss	status,2,c
  4946   0013A4  EFD6  F009         	goto	i2u88_41
  4947   0013A8  EFD8  F009         	goto	i2u88_40
  4948   0013AC                     i2u88_41:
  4949   0013AC  EFE4  F009         	goto	i2l1976
  4950   0013B0                     i2u88_40:
  4951   0013B0  0E08               	movlw	8
  4952   0013B2  1857               	xorwf	(JUDGE@arr+4)^0,w,c
  4953   0013B4  1058               	iorwf	(JUDGE@arr+5)^0,w,c
  4954   0013B6  A4D8               	btfss	status,2,c
  4955   0013B8  EFE0  F009         	goto	i2u89_41
  4956   0013BC  EFE2  F009         	goto	i2u89_40
  4957   0013C0                     i2u89_41:
  4958   0013C0  EFE4  F009         	goto	i2l1976
  4959   0013C4                     i2u89_40:
  4960   0013C4  EF61  F009         	goto	i2l1942
  4961   0013C8                     i2l1976:
  4962   0013C8  0E03               	movlw	3
  4963   0013CA  1853               	xorwf	JUDGE@arr^0,w,c
  4964   0013CC  1054               	iorwf	(JUDGE@arr+1)^0,w,c
  4965   0013CE  A4D8               	btfss	status,2,c
  4966   0013D0  EFEC  F009         	goto	i2u90_41
  4967   0013D4  EFEE  F009         	goto	i2u90_40
  4968   0013D8                     i2u90_41:
  4969   0013D8  EF04  F00A         	goto	i2l1984
  4970   0013DC                     i2u90_40:
  4971   0013DC  0E06               	movlw	6
  4972   0013DE  1855               	xorwf	(JUDGE@arr+2)^0,w,c
  4973   0013E0  1056               	iorwf	(JUDGE@arr+3)^0,w,c
  4974   0013E2  A4D8               	btfss	status,2,c
  4975   0013E4  EFF6  F009         	goto	i2u91_41
  4976   0013E8  EFF8  F009         	goto	i2u91_40
  4977   0013EC                     i2u91_41:
  4978   0013EC  EF04  F00A         	goto	i2l1984
  4979   0013F0                     i2u91_40:
  4980   0013F0  0E09               	movlw	9
  4981   0013F2  1857               	xorwf	(JUDGE@arr+4)^0,w,c
  4982   0013F4  1058               	iorwf	(JUDGE@arr+5)^0,w,c
  4983   0013F6  A4D8               	btfss	status,2,c
  4984   0013F8  EF00  F00A         	goto	i2u92_41
  4985   0013FC  EF02  F00A         	goto	i2u92_40
  4986   001400                     i2u92_41:
  4987   001400  EF04  F00A         	goto	i2l1984
  4988   001404                     i2u92_40:
  4989   001404  EF61  F009         	goto	i2l1942
  4990   001408                     i2l1984:
  4991   001408  0453               	decf	JUDGE@arr^0,w,c
  4992   00140A  1054               	iorwf	(JUDGE@arr+1)^0,w,c
  4993   00140C  A4D8               	btfss	status,2,c
  4994   00140E  EF0B  F00A         	goto	i2u93_41
  4995   001412  EF0D  F00A         	goto	i2u93_40
  4996   001416                     i2u93_41:
  4997   001416  EF23  F00A         	goto	i2l1992
  4998   00141A                     i2u93_40:
  4999   00141A  0E05               	movlw	5
  5000   00141C  1855               	xorwf	(JUDGE@arr+2)^0,w,c
  5001   00141E  1056               	iorwf	(JUDGE@arr+3)^0,w,c
  5002   001420  A4D8               	btfss	status,2,c
  5003   001422  EF15  F00A         	goto	i2u94_41
  5004   001426  EF17  F00A         	goto	i2u94_40
  5005   00142A                     i2u94_41:
  5006   00142A  EF23  F00A         	goto	i2l1992
  5007   00142E                     i2u94_40:
  5008   00142E  0E09               	movlw	9
  5009   001430  1857               	xorwf	(JUDGE@arr+4)^0,w,c
  5010   001432  1058               	iorwf	(JUDGE@arr+5)^0,w,c
  5011   001434  A4D8               	btfss	status,2,c
  5012   001436  EF1F  F00A         	goto	i2u95_41
  5013   00143A  EF21  F00A         	goto	i2u95_40
  5014   00143E                     i2u95_41:
  5015   00143E  EF23  F00A         	goto	i2l1992
  5016   001442                     i2u95_40:
  5017   001442  EF61  F009         	goto	i2l1942
  5018   001446                     i2l1992:
  5019   001446  0E03               	movlw	3
  5020   001448  1853               	xorwf	JUDGE@arr^0,w,c
  5021   00144A  1054               	iorwf	(JUDGE@arr+1)^0,w,c
  5022   00144C  A4D8               	btfss	status,2,c
  5023   00144E  EF2B  F00A         	goto	i2u96_41
  5024   001452  EF2D  F00A         	goto	i2u96_40
  5025   001456                     i2u96_41:
  5026   001456  EF43  F00A         	goto	i2l60
  5027   00145A                     i2u96_40:
  5028   00145A  0E05               	movlw	5
  5029   00145C  1855               	xorwf	(JUDGE@arr+2)^0,w,c
  5030   00145E  1056               	iorwf	(JUDGE@arr+3)^0,w,c
  5031   001460  A4D8               	btfss	status,2,c
  5032   001462  EF35  F00A         	goto	i2u97_41
  5033   001466  EF37  F00A         	goto	i2u97_40
  5034   00146A                     i2u97_41:
  5035   00146A  EF43  F00A         	goto	i2l60
  5036   00146E                     i2u97_40:
  5037   00146E  0E07               	movlw	7
  5038   001470  1857               	xorwf	(JUDGE@arr+4)^0,w,c
  5039   001472  1058               	iorwf	(JUDGE@arr+5)^0,w,c
  5040   001474  A4D8               	btfss	status,2,c
  5041   001476  EF3F  F00A         	goto	i2u98_41
  5042   00147A  EF41  F00A         	goto	i2u98_40
  5043   00147E                     i2u98_41:
  5044   00147E  EF43  F00A         	goto	i2l60
  5045   001482                     i2u98_40:
  5046   001482  EF61  F009         	goto	i2l1942
  5047   001486                     i2l60:
  5048   001486                     i2l2000:
  5049                           
  5050                           ;main.c: 44:     if (win == 1){
  5051   001486  0450               	decf	JUDGE@win^0,w,c
  5052   001488  A4D8               	btfss	status,2,c
  5053   00148A  EF49  F00A         	goto	i2u99_41
  5054   00148E  EF4B  F00A         	goto	i2u99_40
  5055   001492                     i2u99_41:
  5056   001492  EF69  F00A         	goto	i2l2010
  5057   001496                     i2u99_40:
  5058   001496                     
  5059                           ;main.c: 45:         if (turn == 0) a = 1;
  5060   001496  5042               	movf	JUDGE@turn^0,w,c
  5061   001498  1043               	iorwf	(JUDGE@turn+1)^0,w,c
  5062   00149A  A4D8               	btfss	status,2,c
  5063   00149C  EF52  F00A         	goto	i2u100_41
  5064   0014A0  EF54  F00A         	goto	i2u100_40
  5065   0014A4                     i2u100_41:
  5066   0014A4  EF5A  F00A         	goto	i2l2006
  5067   0014A8                     i2u100_40:
  5068   0014A8  0E00               	movlw	0
  5069   0014AA  6E4D               	movwf	(JUDGE@a+1)^0,c
  5070   0014AC  0E01               	movlw	1
  5071   0014AE  6E4C               	movwf	JUDGE@a^0,c
  5072   0014B0  EF75  F00A         	goto	i2l2014
  5073   0014B4                     i2l2006:
  5074   0014B4  0442               	decf	JUDGE@turn^0,w,c
  5075   0014B6  1043               	iorwf	(JUDGE@turn+1)^0,w,c
  5076   0014B8  A4D8               	btfss	status,2,c
  5077   0014BA  EF61  F00A         	goto	i2u101_41
  5078   0014BE  EF63  F00A         	goto	i2u101_40
  5079   0014C2                     i2u101_41:
  5080   0014C2  EF75  F00A         	goto	i2l2014
  5081   0014C6                     i2u101_40:
  5082   0014C6  0E00               	movlw	0
  5083   0014C8  6E4D               	movwf	(JUDGE@a+1)^0,c
  5084   0014CA  0E02               	movlw	2
  5085   0014CC  6E4C               	movwf	JUDGE@a^0,c
  5086   0014CE  EF75  F00A         	goto	i2l2014
  5087   0014D2                     i2l2010:
  5088   0014D2  5050               	movf	JUDGE@win^0,w,c
  5089   0014D4  A4D8               	btfss	status,2,c
  5090   0014D6  EF6F  F00A         	goto	i2u102_41
  5091   0014DA  EF71  F00A         	goto	i2u102_40
  5092   0014DE                     i2u102_41:
  5093   0014DE  EF75  F00A         	goto	i2l2014
  5094   0014E2                     i2u102_40:
  5095   0014E2  0E00               	movlw	0
  5096   0014E4  6E4D               	movwf	(JUDGE@a+1)^0,c
  5097   0014E6  0E00               	movlw	0
  5098   0014E8  6E4C               	movwf	JUDGE@a^0,c
  5099   0014EA                     i2l2014:
  5100                           
  5101                           ;main.c: 49:     return a;
  5102   0014EA  C04C  F042         	movff	JUDGE@a,?_JUDGE
  5103   0014EE  C04D  F043         	movff	JUDGE@a+1,?_JUDGE+1
  5104   0014F2  0012               	return		;funcret
  5105   0014F4                     __end_of_JUDGE:
  5106                           	callstack 0
  5107                           
  5108 ;; *************** function _GetString *****************
  5109 ;; Defined at:
  5110 ;;		line 107 in file "setting_hardaware/uart.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;		None
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;		None
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    0[COMRAM] PTR unsigned char 
  5117 ;; Registers used:
  5118 ;;		wreg
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5124 ;;      Params:         2       0       0       0       0       0       0
  5125 ;;      Locals:         0       0       0       0       0       0       0
  5126 ;;      Temps:          0       0       0       0       0       0       0
  5127 ;;      Totals:         2       0       0       0       0       0       0
  5128 ;;Total ram usage:        2 bytes
  5129 ;; Hardware stack levels used: 1
  5130 ;; This function calls:
  5131 ;;		Nothing
  5132 ;; This function is called by:
  5133 ;;		_Hi_ISR
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text22
  5138   001882                     __ptext22:
  5139                           	callstack 0
  5140   001882                     _GetString:
  5141                           	callstack 24
  5142   001882                     
  5143                           ;setting_hardaware/uart.c: 108:     return mystring;
  5144   001882  0E0E               	movlw	_mystring& (0+255)
  5145   001884  0012               	return		;funcret
  5146   001886                     __end_of_GetString:
  5147                           	callstack 0
  5148                           
  5149                           	psect	rparam
  5150   000001                     ___rparam_used  equ	1
  5151   000000                     ___param_bank   equ	0
  5152   000000                     __Lparam        equ	__Lrparam
  5153   000000                     __Hparam        equ	__Hrparam
  5154                           
  5155                           	psect	temp
  5156   000068                     btemp:
  5157                           	callstack 0
  5158   000068                     	ds	1
  5159   000068                     int$flags       set	btemp
  5160   000069                     wtemp8          set	btemp+1
  5161   000069                     ttemp5          set	btemp+1
  5162   00006C                     ttemp6          set	btemp+4
  5163   000070                     ttemp7          set	btemp+8
  5164                           
  5165                           	psect	idloc
  5166                           
  5167                           ;Config register IDLOC0 @ 0x200000
  5168                           ;	unspecified, using default values
  5169   200000                     	org	2097152
  5170   200000  FF                 	db	255
  5171                           
  5172                           ;Config register IDLOC1 @ 0x200001
  5173                           ;	unspecified, using default values
  5174   200001                     	org	2097153
  5175   200001  FF                 	db	255
  5176                           
  5177                           ;Config register IDLOC2 @ 0x200002
  5178                           ;	unspecified, using default values
  5179   200002                     	org	2097154
  5180   200002  FF                 	db	255
  5181                           
  5182                           ;Config register IDLOC3 @ 0x200003
  5183                           ;	unspecified, using default values
  5184   200003                     	org	2097155
  5185   200003  FF                 	db	255
  5186                           
  5187                           ;Config register IDLOC4 @ 0x200004
  5188                           ;	unspecified, using default values
  5189   200004                     	org	2097156
  5190   200004  FF                 	db	255
  5191                           
  5192                           ;Config register IDLOC5 @ 0x200005
  5193                           ;	unspecified, using default values
  5194   200005                     	org	2097157
  5195   200005  FF                 	db	255
  5196                           
  5197                           ;Config register IDLOC6 @ 0x200006
  5198                           ;	unspecified, using default values
  5199   200006                     	org	2097158
  5200   200006  FF                 	db	255
  5201                           
  5202                           ;Config register IDLOC7 @ 0x200007
  5203                           ;	unspecified, using default values
  5204   200007                     	org	2097159
  5205   200007  FF                 	db	255
  5206                           
  5207                           	psect	config
  5208                           
  5209                           ; Padding undefined space
  5210   300000                     	org	3145728
  5211   300000  FF                 	db	255
  5212                           
  5213                           ;Config register CONFIG1H @ 0x300001
  5214                           ;	Oscillator Selection bits
  5215                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5216                           ;	Fail-Safe Clock Monitor Enable bit
  5217                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5218                           ;	Internal/External Oscillator Switchover bit
  5219                           ;	IESO = ON, Oscillator Switchover mode enabled
  5220   300001                     	org	3145729
  5221   300001  88                 	db	136
  5222                           
  5223                           ;Config register CONFIG2L @ 0x300002
  5224                           ;	Power-up Timer Enable bit
  5225                           ;	PWRT = OFF, PWRT disabled
  5226                           ;	Brown-out Reset Enable bits
  5227                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5228                           ;	Brown Out Reset Voltage bits
  5229                           ;	BORV = 3, Minimum setting
  5230   300002                     	org	3145730
  5231   300002  1F                 	db	31
  5232                           
  5233                           ;Config register CONFIG2H @ 0x300003
  5234                           ;	Watchdog Timer Enable bit
  5235                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5236                           ;	Watchdog Timer Postscale Select bits
  5237                           ;	WDTPS = 1, 1:1
  5238   300003                     	org	3145731
  5239   300003  00                 	db	0
  5240                           
  5241                           ; Padding undefined space
  5242   300004                     	org	3145732
  5243   300004  FF                 	db	255
  5244                           
  5245                           ;Config register CONFIG3H @ 0x300005
  5246                           ;	CCP2 MUX bit
  5247                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5248                           ;	PORTB A/D Enable bit
  5249                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5250                           ;	Low-Power Timer1 Oscillator Enable bit
  5251                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5252                           ;	MCLR Pin Enable bit
  5253                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5254   300005                     	org	3145733
  5255   300005  83                 	db	131
  5256                           
  5257                           ;Config register CONFIG4L @ 0x300006
  5258                           ;	Stack Full/Underflow Reset Enable bit
  5259                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5260                           ;	Single-Supply ICSP Enable bit
  5261                           ;	LVP = OFF, Single-Supply ICSP disabled
  5262                           ;	Extended Instruction Set Enable bit
  5263                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5264                           ;	Background Debugger Enable bit
  5265                           ;	DEBUG = 0x1, unprogrammed default
  5266   300006                     	org	3145734
  5267   300006  81                 	db	129
  5268                           
  5269                           ; Padding undefined space
  5270   300007                     	org	3145735
  5271   300007  FF                 	db	255
  5272                           
  5273                           ;Config register CONFIG5L @ 0x300008
  5274                           ;	Code Protection bit
  5275                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5276                           ;	Code Protection bit
  5277                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5278                           ;	Code Protection bit
  5279                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5280                           ;	Code Protection bit
  5281                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5282   300008                     	org	3145736
  5283   300008  0F                 	db	15
  5284                           
  5285                           ;Config register CONFIG5H @ 0x300009
  5286                           ;	Boot Block Code Protection bit
  5287                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5288                           ;	Data EEPROM Code Protection bit
  5289                           ;	CPD = OFF, Data EEPROM not code-protected
  5290   300009                     	org	3145737
  5291   300009  C0                 	db	192
  5292                           
  5293                           ;Config register CONFIG6L @ 0x30000A
  5294                           ;	Write Protection bit
  5295                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5296                           ;	Write Protection bit
  5297                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5298                           ;	Write Protection bit
  5299                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5300                           ;	Write Protection bit
  5301                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5302   30000A                     	org	3145738
  5303   30000A  0F                 	db	15
  5304                           
  5305                           ;Config register CONFIG6H @ 0x30000B
  5306                           ;	Configuration Register Write Protection bit
  5307                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5308                           ;	Boot Block Write Protection bit
  5309                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5310                           ;	Data EEPROM Write Protection bit
  5311                           ;	WRTD = OFF, Data EEPROM not write-protected
  5312   30000B                     	org	3145739
  5313   30000B  E0                 	db	224
  5314                           
  5315                           ;Config register CONFIG7L @ 0x30000C
  5316                           ;	Table Read Protection bit
  5317                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5318                           ;	Table Read Protection bit
  5319                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5320                           ;	Table Read Protection bit
  5321                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5322                           ;	Table Read Protection bit
  5323                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5324   30000C                     	org	3145740
  5325   30000C  0F                 	db	15
  5326                           
  5327                           ;Config register CONFIG7H @ 0x30000D
  5328                           ;	Boot Block Table Read Protection bit
  5329                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5330   30000D                     	org	3145741
  5331   30000D  40                 	db	64
  5332                           tosu	equ	0xFFF
  5333                           tosh	equ	0xFFE
  5334                           tosl	equ	0xFFD
  5335                           stkptr	equ	0xFFC
  5336                           pclatu	equ	0xFFB
  5337                           pclath	equ	0xFFA
  5338                           pcl	equ	0xFF9
  5339                           tblptru	equ	0xFF8
  5340                           tblptrh	equ	0xFF7
  5341                           tblptrl	equ	0xFF6
  5342                           tablat	equ	0xFF5
  5343                           prodh	equ	0xFF4
  5344                           prodl	equ	0xFF3
  5345                           indf0	equ	0xFEF
  5346                           postinc0	equ	0xFEE
  5347                           postdec0	equ	0xFED
  5348                           preinc0	equ	0xFEC
  5349                           plusw0	equ	0xFEB
  5350                           fsr0h	equ	0xFEA
  5351                           fsr0l	equ	0xFE9
  5352                           wreg	equ	0xFE8
  5353                           indf1	equ	0xFE7
  5354                           postinc1	equ	0xFE6
  5355                           postdec1	equ	0xFE5
  5356                           preinc1	equ	0xFE4
  5357                           plusw1	equ	0xFE3
  5358                           fsr1h	equ	0xFE2
  5359                           fsr1l	equ	0xFE1
  5360                           bsr	equ	0xFE0
  5361                           indf2	equ	0xFDF
  5362                           postinc2	equ	0xFDE
  5363                           postdec2	equ	0xFDD
  5364                           preinc2	equ	0xFDC
  5365                           plusw2	equ	0xFDB
  5366                           fsr2h	equ	0xFDA
  5367                           fsr2l	equ	0xFD9
  5368                           status	equ	0xFD8

Data Sizes:
    Strings     62
    Constant    0
    Data        0
    BSS         65
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     38     103
    BANK0           128     13      13
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    funcs	PTR FTN()void [3] size(2) Largest target is 0

    __funcs_on_exit@func	PTR FTN()void  size(2) Largest target is 0

    JUDGE@player	PTR int  size(1) Largest target is 6
		 -> player_a(COMRAM[6]), player_b(COMRAM[6]), 

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), STR_2(CODE[16]), STR_3(CODE[16]), STR_4(CODE[15]), 
		 -> STR_5(CODE[15]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    None.

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->_JUDGE
    i2_UART_Write_Text->i2_UART_Write
    i2_MyusartRead->i2_ClearBuffer
    _strcpy->_GetString

Critical Paths under _main in BANK0

    _main->_UART_Write_Text
    _exit->__Exit
    _UART_Write_Text->_UART_Write

Critical Paths under _Lo_ISR in BANK0

    _Lo_ISR->_MyusartRead
    _MyusartRead->_ClearBuffer

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     200
                  _SYSTEM_Initialize
                    _UART_Write_Text
                               _exit
 ---------------------------------------------------------------------------------
 (1) _exit                                                 2     0      2      38
                                             10 BANK0      2     0      2
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (2) ___funcs_on_exit                                      2     2      0       1
 ---------------------------------------------------------------------------------
 (2) __Exit                                                2     0      2       3
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      4     3      1     162
                                              9 BANK0      4     3      1
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      29
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0     211
                                              3 BANK0      5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          1     1      0     211
                                              2 BANK0      1     1      0
                        _ClearBuffer
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (5) i1_UART_Write                                         1     1      0      47
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Hi_ISR                                              15    15      0    1712
                                             23 COMRAM    15    15      0
                          _GetString
                              _JUDGE
                             _strcpy
                      i2_MyusartRead
                  i2_UART_Write_Text
 ---------------------------------------------------------------------------------
 (7) i2_UART_Write_Text                                    4     3      1     123
                                              1 COMRAM     4     3      1
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (7) i2_MyusartRead                                        1     1      0     141
                                              2 COMRAM     1     1      0
                      i2_ClearBuffer
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (8) i2_UART_Write                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_ClearBuffer                                        2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               3     1      2      75
                                              2 COMRAM     3     1      2
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (7) _JUDGE                                               23    20      3    1173
                                              0 COMRAM    23    20      3
 ---------------------------------------------------------------------------------
 (7) _GetString                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _UART_Write_Text
     _UART_Write
   _exit
     __Exit
     ___funcs_on_exit

 _Lo_ISR (ROOT)
   _MyusartRead
     _ClearBuffer
     i1_UART_Write

 _Hi_ISR (ROOT)
   _GetString
   _JUDGE
   _strcpy
     _GetString (ARG)
   i2_MyusartRead
     i2_ClearBuffer
     i2_UART_Write
   i2_UART_Write_Text
     i2_UART_Write

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1523      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK5           244      0       0      0.0%
BANK5              244      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128     13      13     10.2%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     38     103     81.7%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFR_1llh      12      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFRlh         10      0       0      0.0%
BITBIGSFRll          9      0       0      0.0%
BITBIGSFRh           7      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
BITBIGSFR_1lh        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     116      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Jan 13 20:35:15 2025

                           bsr 0FE0                            l300 1858                            l303 1872  
                          l362 1806                            l259 186A                            l283 187A  
                          l356 167C                            l359 17F4                            l368 16CA  
                          _PR2 0FCB                            _str 0022                            wreg 0FE8  
                         l1071 1846                           l1074 187C                           l1086 17D4  
                         l2600 165E                           l2610 166C                           l2602 1664  
                         l2620 1676                           l2612 166E                           l2604 1666  
                         l2700 15CE                           l2550 1866                           l2622 1678  
                         l2614 1670                           l2606 1668                           l2710 15D8  
                         l2702 15D0                           l2552 1868                           l2544 185A  
                         l2624 167A                           l2616 1672                           l2608 166A  
                         l2560 1630                           l2720 15E2                           l2712 15DA  
                         l2704 15D2                           l2546 185C                           l2554 1874  
                         l2618 1674                           l2570 163C                           l2562 1634  
                         l2626 17F4                           l2722 15F4                           l2714 15DC  
                         l2706 15D4                           l2548 1860                           l2556 186C  
                         l2580 164A                           l2572 163E                           l2564 1636  
                         l2628 1802                           l2660 167E                           l2644 17BA  
                         l2724 15FE                           l2716 15DE                           l2708 15D6  
                         l2590 1654                           l2582 164C                           l2574 1640  
                         l2566 1638                           l2558 1626                           l2654 1848  
                         l2662 168C                           l2646 17BE                           l2670 183A  
                         l2726 1610                           l2718 15E0                           l2592 1656  
                         l2584 164E                           l2576 1642                           l2568 163A  
                         l2656 1850                           l2664 16A2                           l2648 17C0  
                         l2594 1658                           l2586 1650                           l2578 1644  
                         l2658 1854                           l2666 16A8                           l2596 165A  
                         l2588 1652                           l2668 1836                           l2598 165C  
                         l2694 15C6                           l2696 15CA                           l2698 15CC  
                         _ADFM 7E07                           STR_1 0601                           STR_2 0611  
                         STR_3 0601                           STR_4 0621                           STR_5 0630  
                         _CREN 7D5C                           u1410 15F4                           u1411 15F0  
                         u1340 1802                           u1420 1610                           u1341 17FE  
                         u1421 160C                           _LATA 0F89                           _LATC 0F8B  
                         u1360 17D4                           _LATD 0F8C                           u1361 17D0  
                         u1380 16CA                           u1381 16C6                           _RCIF 7CF5  
                         i2l60 1486                           i2l72 14F2                           i2l91 0EE8  
                         i2l96 0792                           _main 15C6                           _exit 1836  
                         _temp 0009                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 0068                           _turn 000B  
                         prodh 0FF4                           prodl 0FF3                           start 006C  
                 ___param_bank 0000                MyusartRead@temp 0082        __end_of_UART_Write_Text 16CC  
             ?_UART_Initialize 0042  __end_of_OSCILLATOR_Initialize 1874                          ?_main 0042  
                        ?_exit 008A                          _T2CON 0FCA                          _IRCF0 7E9C  
                        _IRCF1 7E9D                          _IRCF2 7E9E                          i2l105 0808  
                        i1l362 181E                          i1l380 155C                          i1l373 1752  
                        i1l390 0054                          i1l359 180C                          i2l233 113C  
                        i2l242 114C                          i2l149 0B34                          i2l158 0BAA  
                        i2l362 1834                          _JUDGE 1178                          i2l380 15C4  
                        i2l373 178E                          i2l383 1884                          i2l359 1822  
                        i2l368 1714                          _RCREG 0FAE                          _SPBRG 0FAF  
                        _TRISA 0F92                          _TXREG 0FAD                          __Exit 187C  
                  ?_UART_Write 0042                  i2_MyusartRead 155E                          _count 000D  
                        _funcs 0001                    _ClearBuffer 1716                          tablat 0FF5  
                        ttemp5 0069                          ttemp6 006C                          ttemp7 0070  
                        status 0FD8                          wtemp8 0069                __initialization 17D6  
                 __end_of_main 1626                   __end_of_exit 1848                    JUDGE@player 0044  
                       ??_main 008D                         ??_exit 008C                  __activetblptr 0002  
                       ?_JUDGE 0042                         JUDGE@a 004C                         JUDGE@i 0051  
                       JUDGE@j 004E                         JUDGE@x 004A                         ?__Exit 0088  
               ?i2_MyusartRead 0042                         _ADCON1 0FC1                         _ADRESH 0FC4  
                       _ADRESL 0FC3                         i1l2630 1716                         i2l2000 1486  
                       i1l2640 172E                         i2l2002 1496                         i2l2010 14D2  
                       i1l2642 174A                         i1l2650 180C                         i1l2730 003C  
                       i2l2012 14E2                         i2l2004 14A8                         i2l1220 1766  
                       i2l1212 1754                         i1l2636 1720                         i1l2652 181A  
                       i1l2732 004A                         i2l2030 1882                         i2l2014 14EA  
                       i2l2006 14B4                         i2l1222 176A                         i1l2638 172A  
                       i1l2734 0050                         i2l2008 14C6                         i2l1224 1786  
                       i2l2200 08DE                         i1l2680 1520                         i1l2672 14F4  
                       i1l2728 002E                         i2l2034 1790                         i2l1218 175C  
                       i2l2210 0910                         i2l2202 08E8                         i2l2130 068A  
                       i1l2682 1526                         i1l2674 14F8                         i2l2036 1794  
                       i2l2060 16CC                         i2l2300 0C08                         i2l2220 0996  
                       i2l2212 091A                         i2l2204 08F2                         i2l2140 06D4  
                       i2l2132 068E                         i2l2124 066A                         i1l2684 1542  
                       i1l2676 150C                         i2l2070 1562                         i2l2062 16D8  
                       i2l2310 0C94                         i2l2302 0C6C                         i2l2230 09C8  
                       i2l2222 09A0                         i2l2206 08FC                         i2l2150 0706  
                       i2l2142 06DE                         i2l2134 06A0                         i2l2126 0678  
                       i1l2686 154E                         i1l2678 1518                         i2l1096 17B8  
                       i2l2080 15AA                         i2l2072 1574                         i2l2064 16EE  
                       i2l2400 0FC2                         i2l2312 0C9E                         i2l2304 0C76  
                       i2l2232 09D2                         i2l2224 09AA                         i2l2208 0906  
                       i2l2216 0924                         i2l2152 0710                         i2l2144 06E8  
                       i2l2160 072E                         i2l2136 06BE                         i2l2240 0A4E  
                       i2l2128 0686                         i1l2688 1552                         i2l2082 15B6  
                       i2l2074 1580                         i2l2066 16F2                         i2l2410 0FF4  
                       i2l2402 0FCC                         i2l2330 0D4C                         i2l2314 0CA8  
                       i2l2306 0C80                         i2l2322 0CC6                         i2l2250 0A8A  
                       i2l2242 0A60                         i2l2234 09DC                         i2l2226 09B4  
                       i2l2218 098C                         i2l2170 07EA                         i2l2154 071A  
                       i2l2146 06F2                         i2l2162 07AE                         i2l2084 15BA  
                       i2l2076 1588                         i2l2068 155E                         i2l2420 107A  
                       i2l2412 0FFE                         i2l2404 0FD6                         i2l2340 0D7E  
                       i2l2332 0D56                         i2l2324 0D2E                         i2l2316 0CB2  
                       i2l2308 0C8A                         i2l2260 0ABC                         i2l2252 0A94  
                       i2l2228 09BE                         i2l2180 082A                         i2l2172 07FC  
                       i2l2164 07C0                         i2l2156 0724                         i2l2148 06FC  
                       i2l2078 158E                         i2l2430 10AC                         i2l2422 1084  
                       i2l2414 1008                         i2l2406 0FE0                         i2l2350 0E1E  
                       i2l2334 0D60                         i2l2326 0D38                         i2l2318 0CBC  
                       i2l2270 0B62                         i2l2262 0AC6                         i2l2254 0A9E  
                       i2l2246 0A76                         i2l2238 09E6                         i2l2190 085C  
                       i2l2182 0834                         i2l2174 080C                         i2l2166 07CC  
                       i2l2432 10B6                         i2l2424 108E                         i2l2408 0FEA  
                       i2l2440 10D4                         i2l2360 0E8C                         i2l2352 0E30  
                       i2l2336 0D6A                         i2l2328 0D42                         i2l2344 0D88  
                       i2l2280 0BAE                         i2l2272 0B6E                         i2l2256 0AA8  
                       i2l2248 0A80                         i2l2184 083E                         i2l2176 0816  
                       i2l2168 07DE                         i2l2434 10C0                         i2l2426 1098  
                       i2l2418 1012                         i2l2442 113E                         i2l2370 0EDC  
                       i2l2362 0E9E                         i2l2354 0E48                         i2l2338 0D74  
                       i2l2290 0BE0                         i2l2282 0BB8                         i2l2274 0B80  
                       i2l2258 0AB2                         i2l2266 0AD0                         i2l2346 0DF0  
                       i2l2186 0848                         i2l2178 0820                         i2l2194 0866  
                       i2l1900 1830                         i2l2436 10CA                         i2l2428 10A2  
                       i2l2380 0F0E                         i2l2356 0E5A                         i2l2364 0EAA  
                       i2l2348 0E02                         i2l2292 0BEA                         i2l2284 0BC2  
                       i2l2276 0B8C                         i2l2268 0B50                         i2l2196 08CA  
                       i2l2188 0852                         i2l2372 0EE8                         i2l1902 1178  
                       i2l2390 0F40                         i2l2382 0F18                         i2l2366 0EBC  
                       i2l2358 0E80                         i2l2294 0BF4                         i2l2286 0BCC  
                       i2l2278 0B9E                         i2l2198 08D4                         i2l1920 1208  
                       i2l1904 1186                         i2l2392 0F4A                         i2l2384 0F22  
                       i2l2376 0EFA                         i2l2368 0EC8                         i2l2296 0BFE  
                       i2l2288 0BD6                         i2l1930 1262                         i2l1922 1228  
                       i2l1914 11B2                         i2l1906 1198                         i2l2386 0F2C  
                       i2l2378 0F04                         i2l1940 12AE                         i2l1932 127E  
                       i2l1924 123C                         i2l1916 11BE                         i2l1908 11AA  
                       i2l2388 0F36                         i2l2396 0F54                         i2l1942 12C2  
                       i2l1934 1286                         i2l1918 11F4                         i2l1926 1240  
                       i2l2398 0FB8                         i2l1960 134A                         i2l1952 130A  
                       i2l1944 12CA                         i2l1936 1288                         i2l1928 125E  
                       i2l1970 139C                         i2l1962 135C                         i2l1954 131E  
                       i2l1946 12DE                         i2l1938 129A                         i2l1980 13F0  
                       i2l1972 13B0                         i2l1964 1370                         i2l1956 1332  
                       i2l1948 12F2                         i2l1992 1446                         i2l1984 1408  
                       i2l1976 13C8                         i2l1968 1388                         i2l2960 087C  
                       i2l1994 145A                         i2l1986 141A                         i2l1978 13DC  
                       i2l1898 1822                         i2l2970 0CE0                         i2l2962 093E  
                       i2l1996 146E                         i2l1988 142E                         i2l2972 0DA2  
                       i2l2964 0A00                         i2l2974 0F6A                         i2l2966 0AE6  
                       i2l2958 0744                         i2l2976 102C                         i2l2968 0C1E  
                       i2l2978 10EE                         i2u6_40 1786                         i2u6_41 1782  
                       _Hi_ISR 0008                         _Lo_ISR 0018               ?_UART_Write_Text 0089  
                       _lenStr 0007                         clear_0 17DC                         isa$std 0001  
                       _strcpy 1790                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8          __end_ofi2_ClearBuffer 1790  
            _SYSTEM_Initialize 1848                     __accesstop 0080        __end_of__initialization 17E2  
           ?_SYSTEM_Initialize 0042                  ___rparam_used 0001                  __end_of_JUDGE 14F4  
            __end_of_GetString 1886                  ?i1_UART_Write 0042                 __pcstackCOMRAM 0042  
                __end_of__Exit 1882            ??_SYSTEM_Initialize 0088                      JUDGE@turn 0042  
                      ??_JUDGE 0045                ??i2_MyusartRead 0044              ??___funcs_on_exit 0088  
                ??_MyusartRead 0082                        ??__Exit 008A                  ?i2_UART_Write 0042  
    __end_of_SYSTEM_Initialize 185A                        ?_Hi_ISR 0042               i2UART_Write@data 0042  
                      ?_Lo_ISR 0042                 ??i1_UART_Write 0080             i2UART_Write_Text@i 0045  
                      _CCP1CON 0FBD                        ?_strcpy 0044                 ??i2_UART_Write 0042  
                 ??_UART_Write 0088                        i2u71_40 1830                        i2u71_41 182C  
                      i2u80_40 1306                        i2u72_40 11F4                        i2u80_41 1302  
                      i2u72_41 11F0                        i2u81_40 131E                        i2u73_40 125E  
                      i2u81_41 131A                        i2u73_41 125A                        i2u90_40 13DC  
                      i2u82_40 1332                        i2u74_40 127E                        i2u90_41 13D8  
                      i2u82_41 132E                        i2u74_41 127A                        i2u91_40 13F0  
                      i2u83_40 1346                        i2u75_40 129A                        i2u91_41 13EC  
                      i2u83_41 1342                        i2u75_41 1296                        i2u92_40 1404  
                      i2u84_40 135C                        i2u76_40 12AE                        i2u92_41 1400  
                      i2u84_41 1358                        i2u76_41 12AA                        i2u93_40 141A  
                      i2u85_40 1370                        i2u77_40 12C2                        i2u93_41 1416  
                      i2u85_41 136C                        i2u77_41 12BE                        i2u94_40 142E  
                      i2u86_40 1384                        i2u78_40 12DE                        i2u94_41 142A  
                      i2u86_41 1380                        i2u78_41 12DA                        i2u95_40 1442  
                      i2u87_40 139C                        i2u79_40 12F2                        i2u95_41 143E  
                      i2u87_41 1398                        i2u79_41 12EE                        i2u96_40 145A  
                      i2u88_40 13B0                        i2u96_41 1456                        i2u88_41 13AC  
                      i2u97_40 146E                        i2u89_40 13C4                        i2u97_41 146A  
                      i2u89_41 13C0                        i2u98_40 1482                        i2u98_41 147E  
                      i2u99_40 1496                        i2u99_41 1492                   ?_ClearBuffer 0042  
          __end_of_MyusartRead 155E                        __Hparam 0000                        __Lparam 0000  
           __end_of_UART_Write 1808                   __psmallconst 0600                        __pcinit 17D6  
                      __ramtop 0600                        __ptext0 15C6                        __ptext1 1836  
                      __ptext2 17BA                        __ptext3 187C                        __ptext4 167E  
                      __ptext5 17F0                        __ptext6 1848                        __ptext7 1626  
                      __ptext8 186C                        __ptext9 1874          _OSCILLATOR_Initialize 186C  
               __pintcode_body 0640           end_of_initialization 17E2                  __Lmediumconst 0000  
                      int_func 0640                 Hi_ISR@position 0066                      _RCSTAbits 0FAB  
                      postdec1 0FE5                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE                        strcpy@d 0046  
               UART_Write@data 0088                      _TRISAbits 0F92                      _TRISCbits 0F94  
                    _TRISDbits 0F95                    _MyusartRead 14F4           __end_ofi1_UART_Write 1820  
                    _TXSTAbits 0FAC                 __end_of_Hi_ISR 1178                 __end_of_Lo_ISR 006C  
         __end_ofi2_UART_Write 1836                ___funcs_on_exit 17BA   __end_of_INTERRUPT_Initialize 187C  
                    _GetString 1882                    _BAUDCONbits 0FB8                 _ADC_Initialize 185A  
       ?_OSCILLATOR_Initialize 0042                 __end_of_strcpy 17BA            start_initialization 17D6  
                 ClearBuffer@i 0080              ??_UART_Initialize 0088                       ??_Hi_ISR 0059  
                     ??_Lo_ISR 0083         __end_of_ADC_Initialize 186C                     ?_GetString 0042  
                     ??_strcpy 0046                    __pbssCOMRAM 0001              i2_UART_Write_Text 16CC  
                __pcstackBANK0 0080          __end_ofi2_MyusartRead 15C6             ?i2_UART_Write_Text 0043  
                     JUDGE@arr 0053                       JUDGE@win 0050          i2UART_Write_Text@text 0043  
          ??i2_UART_Write_Text 0044        __end_of___funcs_on_exit 17D6                      __pintcode 0008  
              ?_ADC_Initialize 0042                    __pintcodelo 0018      __end_ofi2_UART_Write_Text 1716  
                  __smallconst 0600                       Hi_ISR@ch 0065              ??_UART_Write_Text 008A  
         _INTERRUPT_Initialize 1874                  i2_ClearBuffer 1754                       _IPR1bits 0F9F  
                     _PIE1bits 0F9D                       i1u140_20 1542                       i1u140_21 153E  
                     i1u135_20 174A                       i1u143_20 003C                       i1u135_21 1746  
                     i1u143_21 0038                       i1u144_20 004A                       i1u144_21 0046  
                     i1u137_20 181A                       i1u137_21 1816                       i1u139_20 150C  
                     i1u139_21 1508                       i2u100_40 14A8                       i2u100_41 14A4  
                     i2u101_40 14C6                       i2u101_41 14C2                       i2u102_40 14E2  
                     i2u102_41 14DE                       i2u104_40 17B8                       i2u120_40 0A72  
                     i2u112_40 0678                       i2u104_41 17B4                       i2u120_41 0A6E  
                     i2u112_41 0674                       i2u121_40 0B62                       i2u113_40 06A0  
                     i2u121_41 0B5E                       i2u113_41 069C                       i2u130_40 0EDC  
                     i2u122_40 0B80                       i2u114_40 06BE                       i2u130_41 0ED8  
                     i2u122_41 0B7C                       i2u114_41 06BA                       i2u107_40 1714  
                     i2u131_40 0EF6                       i2u123_40 0B9E                       i2u115_40 06D0  
                     i2u107_41 1710                       i2u131_41 0EF2                       i2u123_41 0B9A  
                     i2u115_41 06CC                       i2u108_40 1574                       i2u124_40 0E02  
                     i2u116_40 07C0                       i2u108_41 1570                       i2u124_41 0DFE  
                     i2u116_41 07BC                       i2u109_40 15AA                       i2u125_40 0E30  
                     i2u117_40 07DE                       i2u109_41 15A6                       i2u125_41 0E2C  
                     i2u117_41 07DA                       i2u126_40 0E5A                       i2u118_40 07FC  
                     i2u126_41 0E56                       i2u118_41 07F8                       i2u127_40 0E80  
                     i2u119_40 0A60                       i2u127_41 0E7C                       i2u119_41 0A5C  
                     i2u128_40 0E9E                       i2u128_41 0E9A                       i2u129_40 0EBC  
                     i2u129_41 0EB8                       i2u145_47 1144                       _PIR1bits 0F9E  
                 i1_UART_Write 1808                       _RCONbits 0FD0                    ??_GetString 0044  
            i2MyusartRead@temp 0044                     _ADCON0bits 0FC2                     _ADCON2bits 0FC0  
                 ?_MyusartRead 0042                   i2_UART_Write 1820          ?_INTERRUPT_Initialize 0042  
               ?i2_ClearBuffer 0042               i1UART_Write@data 0080                 i2ClearBuffer@i 0042  
             ?___funcs_on_exit 0042                       __Exit@ec 0088                       __Hrparam 0000  
                     __Lrparam 0000        ??_OSCILLATOR_Initialize 0088                _UART_Initialize 1626  
                     __ptext10 185A                       __ptext20 1790                       __ptext12 14F4  
                     __ptext21 1178                       __ptext13 1808                       __ptext22 1882  
                     __ptext14 1716                       __ptext16 16CC                       __ptext17 155E  
                     __ptext18 1820                       __ptext19 1754                     strcpy@dest 0044  
          UART_Write_Text@text 0089                       _player_a 003C                       _player_b 0036  
                     isa$xinst 0000                       int$flags 0068                       _mystring 000E  
                   _INTCONbits 0FF2                       exit@code 008A         ??_INTERRUPT_Initialize 0088  
              ??i2_ClearBuffer 0042                  ??_ClearBuffer 0080                       intlevel1 0000  
                     intlevel2 0000                      strcpy@src 0045               ??_ADC_Initialize 0088  
      __end_of_UART_Initialize 167E                _UART_Write_Text 167E                     _UART_Write 17F0  
             UART_Write_Text@i 008B            __end_of_ClearBuffer 1754  
